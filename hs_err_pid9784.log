#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00007ffbfe4f1db0, pid=9784, tid=1124
#
# JRE version: OpenJDK Runtime Environment (21.0.1+12) (build 21.0.1+12-29)
# Java VM: OpenJDK 64-Bit Server VM (21.0.1+12-29, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# Problematic frame:
# C  [dwrite.dll+0xa1db0]
#
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   https://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:55300,suspend=y,server=n -Dfile.encoding=UTF-8 --module-path=C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\materialfx-11.16.1.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx.graphics.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-graphics\17.0.2\javafx-graphics-17.0.2-win.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\mfxlocalization-11.1.0.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx.controls.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-controls\17.0.2\javafx-controls-17.0.2-win.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\target\classes;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx.base.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-base\17.0.2\javafx-base-17.0.2-win.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx.fxml.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-fxml\17.0.2\javafx-fxml-17.0.2-win.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\mfxresources-11.3.2.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\mfxeffects-11.0.5.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\mfxcore-11.3.0.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\virtualizedfx-11.9.1.jar -Djdk.module.main=com.example.loginsystemfinal com.example.loginsystemfinal/com.example.loginsystemfinal.loginPage

Host: 11th Gen Intel(R) Core(TM) i3-1115G4 @ 3.00GHz, 4 cores, 7G,  Windows 11 , 64 bit Build 22621 (10.0.22621.2506)
Time: Thu Jan 11 07:11:11 2024 Malay Peninsula Standard Time elapsed time: 354.133180 seconds (0d 0h 5m 54s)

---------------  T H R E A D  ---------------

Current thread (0x0000020174283b20):  JavaThread "QuantumRenderer-0" daemon [_thread_in_native, id=1124, stack(0x00000033cd600000,0x00000033cd700000) (1024K)]

Stack: [0x00000033cd600000,0x00000033cd700000],  sp=0x00000033cd6fe0c8,  free space=1016k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [dwrite.dll+0xa1db0]

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  com.sun.javafx.font.directwrite.OS.EndDraw(J)I+0 javafx.graphics@20.0.2
J 7379 c1 com.sun.javafx.font.directwrite.DWGlyph.getD2DMask(FFZ)[B javafx.graphics@20.0.2 (674 bytes) @ 0x000002015c221374 [0x000002015c220320+0x0000000000001054]
J 7089 c1 com.sun.javafx.font.directwrite.DWGlyph.getPixelData(I)[B javafx.graphics@20.0.2 (129 bytes) @ 0x000002015c161f24 [0x000002015c161ae0+0x0000000000000444]
J 7509 c2 com.sun.prism.impl.GlyphCache.getCachedGlyph(II)Lcom/sun/prism/impl/GlyphCache$GlyphData; javafx.graphics@20.0.2 (494 bytes) @ 0x000002016316a7f4 [0x000002016316a3a0+0x0000000000000454]
J 3931 c1 com.sun.prism.impl.GlyphCache.render(Lcom/sun/prism/impl/BaseContext;Lcom/sun/javafx/scene/text/GlyphList;FFIILcom/sun/prism/paint/Color;Lcom/sun/prism/paint/Color;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/javafx/geom/BaseBounds;)V javafx.graphics@20.0.2 (326 bytes) @ 0x000002015b9ed234 [0x000002015b9ec760+0x0000000000000ad4]
J 3964 c1 com.sun.prism.impl.ps.BaseShaderGraphics.drawString(Lcom/sun/javafx/scene/text/GlyphList;Lcom/sun/javafx/font/FontStrike;FFLcom/sun/prism/paint/Color;II)V javafx.graphics@20.0.2 (820 bytes) @ 0x000002015ba011a4 [0x000002015b9fe260+0x0000000000002f44]
J 5634 c1 com.sun.javafx.sg.prism.NGText.renderText(Lcom/sun/prism/Graphics;Lcom/sun/javafx/font/FontStrike;Lcom/sun/javafx/geom/BaseBounds;Lcom/sun/prism/paint/Color;I)V javafx.graphics@20.0.2 (523 bytes) @ 0x000002015be4c914 [0x000002015be4be20+0x0000000000000af4]
J 3844 c1 com.sun.javafx.sg.prism.NGText.renderContent2D(Lcom/sun/prism/Graphics;Z)V javafx.graphics@20.0.2 (355 bytes) @ 0x000002015b9bdffc [0x000002015b9bcec0+0x000000000000113c]
J 3722 c1 com.sun.javafx.sg.prism.NGShape.renderContent(Lcom/sun/prism/Graphics;)V javafx.graphics@20.0.2 (458 bytes) @ 0x000002015b9867ec [0x000002015b983b60+0x0000000000002c8c]
J 7121 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V javafx.graphics@20.0.2 (473 bytes) @ 0x00000201630e00dc [0x00000201630dfec0+0x000000000000021c]
J 7390 c2 com.sun.javafx.sg.prism.NGGroup.renderContent(Lcom/sun/prism/Graphics;)V javafx.graphics@20.0.2 (422 bytes) @ 0x000002016313f3bc [0x000002016313f220+0x000000000000019c]
J 7114 c2 com.sun.javafx.sg.prism.NGRegion.renderContent(Lcom/sun/prism/Graphics;)V javafx.graphics@20.0.2 (115 bytes) @ 0x00000201630de9b4 [0x00000201630de840+0x0000000000000174]
J 7121 c2 com.sun.javafx.sg.prism.NGNode.doRender(Lcom/sun/prism/Graphics;)V javafx.graphics@20.0.2 (473 bytes) @ 0x00000201630e00dc [0x00000201630dfec0+0x000000000000021c]
J 5862 c2 com.sun.javafx.sg.prism.NGNode.render(Lcom/sun/prism/Graphics;)V javafx.graphics@20.0.2 (39 bytes) @ 0x00000201630212cc [0x0000020163021240+0x000000000000008c]
J 7470 c1 com.sun.javafx.tk.quantum.ViewPainter.doPaint(Lcom/sun/prism/Graphics;Lcom/sun/javafx/sg/prism/NodePath;)V javafx.graphics@20.0.2 (206 bytes) @ 0x000002015c27244c [0x000002015c2715e0+0x0000000000000e6c]
j  com.sun.javafx.tk.quantum.ViewPainter.paintImpl(Lcom/sun/prism/Graphics;)V+939 javafx.graphics@20.0.2
j  com.sun.javafx.tk.quantum.PresentingPainter.run()V+331 javafx.graphics@20.0.2
j  java.util.concurrent.Executors$RunnableAdapter.call()Ljava/lang/Object;+4 java.base@21.0.1
j  java.util.concurrent.FutureTask.runAndReset()Z+44 java.base@21.0.1
j  com.sun.javafx.tk.RenderJob.run()V+1 javafx.graphics@20.0.2
j  java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V+92 java.base@21.0.1
j  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+5 java.base@21.0.1
j  com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run()V+8 javafx.graphics@20.0.2
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 java.base@21.0.1
j  java.lang.Thread.run()V+19 java.base@21.0.1
v  ~StubRoutines::call_stub 0x00000201627b10e7

siginfo: EXCEPTION_ACCESS_VIOLATION (0xc0000005), reading address 0xffffffffffffffff


Registers:
RAX=0xc0000001f41dc028, RBX=0x000002017a905bc0, RCX=0x000002017a905890, RDX=0x000002017a95fac8
RSP=0x00000033cd6fe0c8, RBP=0x00000033cd6fe1c0, RSI=0x0000000000000000, RDI=0x000002017a905bc0
R8 =0x00000000ffffffff, R9 =0xffffffff00000000, R10=0xbaac1f10365eb170, R11=0x00000033cd6fdfc0
R12=0x00000033cd6fe2f8, R13=0x0000000000000003, R14=0x0000000000000000, R15=0x00000033cd6fe300
RIP=0x00007ffbfe4f1db0, EFLAGS=0x0000000000010206


Register to memory mapping:

RAX=0xc0000001f41dc028 is an unknown value
RBX=0x000002017a905bc0 points into unknown readable memory: 0x00007ffbfe5e5740 | 40 57 5e fe fb 7f 00 00
RCX=0x000002017a905890 points into unknown readable memory: 0x000002017a90d7b0 | b0 d7 90 7a 01 02 00 00
RDX=0x000002017a95fac8 points into unknown readable memory: 0x0000000000000000 | 00 00 00 00 00 00 00 00
RSP=0x00000033cd6fe0c8 is pointing into the stack for thread: 0x0000020174283b20
RBP=0x00000033cd6fe1c0 is pointing into the stack for thread: 0x0000020174283b20
RSI=0x0 is null
RDI=0x000002017a905bc0 points into unknown readable memory: 0x00007ffbfe5e5740 | 40 57 5e fe fb 7f 00 00
R8 =0x00000000ffffffff is pointing into object: Ljdk.internal.vm.FillerArray; 
{0x00000000ffffff98} - klass: {type array int}
 - length: 22
R9 =0xffffffff00000000 is an unknown value
R10=0xbaac1f10365eb170 is an unknown value
R11=0x00000033cd6fdfc0 is pointing into the stack for thread: 0x0000020174283b20
R12=0x00000033cd6fe2f8 is pointing into the stack for thread: 0x0000020174283b20
R13=0x0000000000000003 is an unknown value
R14=0x0 is null
R15=0x00000033cd6fe300 is pointing into the stack for thread: 0x0000020174283b20

Top of Stack: (sp=0x00000033cd6fe0c8)
0x00000033cd6fe0c8:   00007ffbfe4bab97 00000000420c0000
0x00000033cd6fe0d8:   0000000000000000 00000033cd6fe1a8
0x00000033cd6fe0e8:   0000000000000003 000002017a905bc0
0x00000033cd6fe0f8:   00007ffbfe4bad0e 000002017a936d80
0x00000033cd6fe108:   00007ffbfe739a21 000002017a91c990
0x00000033cd6fe118:   000002017a91c990 000002017a8e02c0
0x00000033cd6fe128:   00007ffbfe4bacef 00000033cd6fe300
0x00000033cd6fe138:   0000000000000000 000002017a8e02c0
0x00000033cd6fe148:   0000000000000000 000002017a8eaeb0
0x00000033cd6fe158:   00007ffbfe7317a1 0000000000000000
0x00000033cd6fe168:   000002017a8edad0 00000033cd6fe1c0
0x00000033cd6fe178:   0000000000000000 00000033cd6fe1b0
0x00000033cd6fe188:   00000033cd6fe200 00000033cd6fe1f0
0x00000033cd6fe198:   0000020150bf0000 0000000000000000
0x00000033cd6fe1a8:   0000000000000000 0000000000000000
0x00000033cd6fe1b8:   412000003fd47ae2 0000000000000000
0x00000033cd6fe1c8:   00000033cd6fe260 000002017a8edac8
0x00000033cd6fe1d8:   00000033cd6fe250 0000000000000000
0x00000033cd6fe1e8:   00007ffbfe78143a 00000033cd6fe201
0x00000033cd6fe1f8:   00007ffbef765291 0000020100000000
0x00000033cd6fe208:   0000003300000000 0000000000000000
0x00000033cd6fe218:   00007ffbfe6ee999 000002017a8edac8
0x00000033cd6fe228:   000002017a8edab0 000002017a905bc0
0x00000033cd6fe238:   0000000141400000 000002017a8edac8
0x00000033cd6fe248:   00007ffbfe73ede4 0000000000000001
0x00000033cd6fe258:   0000000000000000 0000000000000000
0x00000033cd6fe268:   00000201627c1227 0000000000000000
0x00000033cd6fe278:   0000000000000000 000002016f899828
0x00000033cd6fe288:   0000000000000000 000002017a8edac8
0x00000033cd6fe298:   00007ffbfe73f038 000002017a8edab8
0x00000033cd6fe2a8:   0000000000000000 000002017a8edab0
0x00000033cd6fe2b8:   00007ffbfe706eab 000002017a8edd40 

Instructions: (pc=0x00007ffbfe4f1db0)
0x00007ffbfe4f1cb0:   5e c3 cc cc cc cc cc cc cc cc cc cc cc cc cc cc
0x00007ffbfe4f1cc0:   cc cc cc cc cc cc ff 25 f4 b1 0f 00 cc cc cc cc
0x00007ffbfe4f1cd0:   cc cc ff 25 a8 b2 0f 00 cc cc cc cc cc cc ff 25
0x00007ffbfe4f1ce0:   94 b2 0f 00 cc cc cc cc cc cc ff 25 80 b2 0f 00
0x00007ffbfe4f1cf0:   cc cc cc cc cc cc ff 25 64 b2 0f 00 cc cc cc cc
0x00007ffbfe4f1d00:   cc cc ff 25 20 b2 0f 00 cc cc cc cc cc cc ff 25
0x00007ffbfe4f1d10:   0c b2 0f 00 cc cc cc cc cc cc ff 25 f0 b1 0f 00
0x00007ffbfe4f1d20:   cc cc cc cc cc cc ff 25 bc b1 0f 00 cc cc cc cc
0x00007ffbfe4f1d30:   cc cc ff 25 98 b1 0f 00 cc cc cc cc cc cc ff 25
0x00007ffbfe4f1d40:   74 b1 0f 00 cc cc cc cc cc cc ff 25 48 b1 0f 00
0x00007ffbfe4f1d50:   cc cc cc cc cc cc ff 25 2c b1 0f 00 cc cc cc cc
0x00007ffbfe4f1d60:   cc cc ff 25 18 b1 0f 00 cc cc cc cc cc cc ff 25
0x00007ffbfe4f1d70:   04 b1 0f 00 cc cc cc cc cc cc ff 25 f0 b0 0f 00
0x00007ffbfe4f1d80:   cc cc cc cc cc cc ff 25 dc b0 0f 00 cc cc cc cc
0x00007ffbfe4f1d90:   cc cc ff 25 40 b3 0f 00 cc cc cc cc cc cc cc cc
0x00007ffbfe4f1da0:   cc cc cc cc cc cc 66 66 0f 1f 84 00 00 00 00 00
0x00007ffbfe4f1db0:   ff e0 cc cc cc cc cc cc cc cc cc cc cc cc cc cc
0x00007ffbfe4f1dc0:   cc cc cc cc cc cc 66 66 0f 1f 84 00 00 00 00 00
0x00007ffbfe4f1dd0:   ff 25 82 b3 0f 00 cc cc cc cc cc cc cc cc cc cc
0x00007ffbfe4f1de0:   cc cc cc cc cc cc 66 66 0f 1f 84 00 00 00 00 00
0x00007ffbfe4f1df0:   48 83 ec 10 4c 89 14 24 4c 89 5c 24 08 4d 33 db
0x00007ffbfe4f1e00:   4c 8d 54 24 18 4c 2b d0 4d 0f 42 d3 65 4c 8b 1c
0x00007ffbfe4f1e10:   25 10 00 00 00 4d 3b d3 73 15 66 41 81 e2 00 f0
0x00007ffbfe4f1e20:   4d 8d 9b 00 f0 ff ff 45 84 1b 4d 3b d3 72 f1 4c
0x00007ffbfe4f1e30:   8b 14 24 4c 8b 5c 24 08 48 83 c4 10 c3 cc cc cc
0x00007ffbfe4f1e40:   cc cc cc cc cc cc cc cc 71 d8 da 56 73 b6 41 fd
0x00007ffbfe4f1e50:   48 83 e9 08 e9 97 77 fe ff cc cc cc cc cc cc cc
0x00007ffbfe4f1e60:   cc cc cc cc cc cc cc cc 71 d8 da 56 73 b6 41 fd
0x00007ffbfe4f1e70:   48 83 e9 08 e9 17 78 fe ff cc cc cc cc cc cc cc
0x00007ffbfe4f1e80:   cc cc cc cc cc cc cc cc 71 d8 da 56 73 b6 41 fd
0x00007ffbfe4f1e90:   48 83 e9 08 e9 57 78 fe ff cc cc cc cc cc cc cc
0x00007ffbfe4f1ea0:   cc cc cc cc cc cc cc cc 71 d8 da 56 73 b6 41 fd 


Stack slot to memory mapping:

stack at sp + 0 slots: 0x00007ffbfe4bab97 dwrite.dll
stack at sp + 1 slots: 0x00000000420c0000 is an unknown value
stack at sp + 2 slots: 0x0 is null
stack at sp + 3 slots: 0x00000033cd6fe1a8 is pointing into the stack for thread: 0x0000020174283b20
stack at sp + 4 slots: 0x0000000000000003 is an unknown value
stack at sp + 5 slots: 0x000002017a905bc0 points into unknown readable memory: 0x00007ffbfe5e5740 | 40 57 5e fe fb 7f 00 00
stack at sp + 6 slots: 0x00007ffbfe4bad0e dwrite.dll
stack at sp + 7 slots: 0x000002017a936d80 points into unknown readable memory: 0x00007ffbfe9b91c8 | c8 91 9b fe fb 7f 00 00


Compiled method (c1)  354252 7379       3       com.sun.javafx.font.directwrite.DWGlyph::getD2DMask (674 bytes)
 total in heap  [0x000002015c21fe10,0x000002015c223d80] = 16240
 relocation     [0x000002015c21ff70,0x000002015c2202f0] = 896
 constants      [0x000002015c220300,0x000002015c220320] = 32
 main code      [0x000002015c220320,0x000002015c222750] = 9264
 stub code      [0x000002015c222750,0x000002015c222910] = 448
 oops           [0x000002015c222910,0x000002015c222918] = 8
 metadata       [0x000002015c222918,0x000002015c2229e8] = 208
 scopes data    [0x000002015c2229e8,0x000002015c2236f8] = 3344
 scopes pcs     [0x000002015c2236f8,0x000002015c223c88] = 1424
 dependencies   [0x000002015c223c88,0x000002015c223ce0] = 88
 nul chk table  [0x000002015c223ce0,0x000002015c223d80] = 160


[Constant Pool]
             Address          hex4                    hex8      
  0x000002015c220300:   0x00000000      0x0000000000000000      
  0x000002015c220304:   0x00000000                              
  0x000002015c220308:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000002015c22030c:   0xf4f4f4f4                              
  0x000002015c220310:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000002015c220314:   0xf4f4f4f4                              
  0x000002015c220318:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000002015c22031c:   0xf4f4f4f4                              

[MachCode]
[Entry Point]
  # {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph'
  # this:     rdx:rdx   = 'com/sun/javafx/font/directwrite/DWGlyph'
  # parm0:    xmm0      = float
  # parm1:    xmm1      = float
  # parm2:    r8        = boolean
  #           [sp+0x170]  (sp of caller)
  0x000002015c220320: ;   {no_reloc}
  0x000002015c220320: 448b 5208 | 49bb 0000 | 0000 0102 | 0000 4d03 | d34c 3bd0 

  0x000002015c220334: ;   {runtime_call ic_miss_stub}
  0x000002015c220334: 0f85 46e6 | 5d06 660f | 1f44 0000 
[Verified Entry Point]
  0x000002015c220340: 8984 2400 | 80ff ff55 | 4881 ec60 | 0100 0090 | 4181 7f20 | 0500 0000 

  0x000002015c220358: ;   {runtime_call StubRoutines (final stubs)}
  0x000002015c220358: 7405 e821 | ea5e 0648 | 8994 2490 | 0000 0044 | 8984 2498 

  0x000002015c22036c: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c22036c: 0000 0048 | be28 b1b8 | 7001 0200 | 008b becc | 0000 0083 | c702 89be | cc00 0000 | 81e7 fe07 
  0x000002015c22038c: 0000 83ff | 000f 8453 | 1e00 00c5 | fa11 8c24 | 3801 0000 | c5fa 1184 | 241c 0100 | 0048 8bf2 
  0x000002015c2203ac: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2203ac: 48bf 28b1 | b870 0102 | 0000 4883 | 8728 0100 | 0001 488b | f248 8bd6 

  0x000002015c2203c4: ;   {optimized virtual_call}
  0x000002015c2203c4: 6666 90e8 

  0x000002015c2203c8: ; ImmutableOopMap {[144]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@1 (line 155)
  0x000002015c2203c8: 34c9 6fff 

  0x000002015c2203cc: ;   {other}
  0x000002015c2203cc: 0f1f 8400 | bc05 0000 | 488b 9424 | 9000 0000 

  0x000002015c2203dc: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2203dc: 48be 28b1 | b870 0102 | 0000 4883 | 8660 0100 

  0x000002015c2203ec: ;   {metadata(method data for {method} {0x0000020170450760} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2203ec: 0001 48ba | b0be 5b70 | 0102 0000 | 8bb2 cc00 | 0000 83c6 | 0289 b2cc | 0000 0081 | e6fe ff1f 
  0x000002015c22040c: 0083 fe00 | 0f84 f51d | 0000 488b | 9424 9000 

  0x000002015c22041c: ;   {metadata(method data for {method} {0x0000020170450760} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c22041c: 0000 48be | b0be 5b70 | 0102 0000 | 4883 8628 | 0100 0001 | 488b 9424 | 9000 0000 | 0f1f 8000 
  0x000002015c22043c: ;   {optimized virtual_call}
  0x000002015c22043c: 0000 00e8 

  0x000002015c220440: ; ImmutableOopMap {[144]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@1 (line 375)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@5 (line 156)
  0x000002015c220440: bcc8 6fff 

  0x000002015c220444: ;   {other}
  0x000002015c220444: 0f1f 8400 | 3406 0001 | 488b 9424 | 9000 0000 | 8b72 248b | 7e14 8b76 | 0c2b fe48 

  0x000002015c220460: ;   {metadata(method data for {method} {0x0000020170450760} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220460: 8bf2 48bb | b0be 5b70 | 0102 0000 | 4883 8360 | 0100 0001 

  0x000002015c220474: ;   {metadata(method data for {method} {0x0000020170450a08} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220474: 48be a8c0 | 5b70 0102 | 0000 8b9e | cc00 0000 | 83c3 0289 | 9ecc 0000 | 0081 e3fe | ff1f 0083 
  0x000002015c220494: fb00 0f84 | 951d 0000 | 8b72 1848 | 3b06 488b 

  0x000002015c2204a4: ;   {metadata(method data for {method} {0x0000020170450a08} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2204a4: de48 b8a8 | c05b 7001 | 0200 008b | 5b08 49ba | 0000 0000 | 0102 0000 | 4903 da48 | 3b98 2001 
  0x000002015c2204c4: 0000 750d | 4883 8028 | 0100 0001 | e960 0000 | 0048 3b98 | 3001 0000 | 750d 4883 | 8038 0100 
  0x000002015c2204e4: 0001 e94a | 0000 0048 | 83b8 2001 | 0000 0075 | 1748 8998 | 2001 0000 | 48c7 8028 | 0100 0001 
  0x000002015c220504: 0000 00e9 | 2900 0000 | 4883 b830 | 0100 0000 | 7517 4889 | 9830 0100 | 0048 c780 | 3801 0000 
  0x000002015c220524: 0100 0000 | e908 0000 | 0048 8380 | 1001 0000 | 018b 7610 

  0x000002015c220538: ;   {metadata(method data for {method} {0x0000020170450a08} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220538: 83fe 0148 | bea8 c05b | 7001 0200 | 0048 bb48 | 0100 0000 | 0000 000f | 850a 0000 | 0048 bb58 
  0x000002015c220558: 0100 0000 | 0000 0048 | 8b04 1e48 | 8d40 0148 | 8904 1e0f | 851a 0000 

  0x000002015c220570: ;   {metadata(method data for {method} {0x0000020170450a08} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220570: 0048 bea8 | c05b 7001 | 0200 00ff | 8668 0100 | 00be 0100 | 0000 e905 | 0000 00be | 0000 0000 
  0x000002015c220590: 83e6 0183 

  0x000002015c220594: ;   {metadata(method data for {method} {0x0000020170450760} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220594: fe00 48be | b0be 5b70 | 0102 0000 | 48bb 8001 | 0000 0000 | 0000 0f84 | 0a00 0000 | 48bb 9001 
  0x000002015c2205b4: 0000 0000 | 0000 488b | 041e 488d | 4001 4889 | 041e 0f84 | 1a00 0000 

  0x000002015c2205cc: ;   {metadata(method data for {method} {0x0000020170450760} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2205cc: 48be b0be | 5b70 0102 | 0000 ff86 | a001 0000 | be03 0000 | 00e9 0500 | 0000 be01 | 0000 000f 
  0x000002015c2205ec: aff7 83fe 

  0x000002015c2205f0: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2205f0: 0048 be28 | b1b8 7001 | 0200 0048 | bf80 0100 | 0000 0000 | 000f 840a | 0000 0048 | bf90 0100 
  0x000002015c220610: 0000 0000 | 0048 8b1c | 3e48 8d5b | 0148 891c | 3e0f 84ff | 1a00 0048 

  0x000002015c220628: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220628: 8bf2 48bf | 28b1 b870 | 0102 0000 | 4883 87b8 | 0100 0001 

  0x000002015c22063c: ;   {metadata(method data for {method} {0x0000020170450810} 'getHeight' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c22063c: 48be 68c2 | 5b70 0102 | 0000 8bbe | cc00 0000 | 83c7 0289 | becc 0000 | 0081 e7fe | ff1f 0083 
  0x000002015c22065c: ff00 0f84 | f31b 0000 

  0x000002015c220664: ;   {metadata(method data for {method} {0x0000020170450810} 'getHeight' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220664: 488b f248 | bf68 c25b | 7001 0200 | 0048 8387 | 2801 0000 | 0148 8bf2 

  0x000002015c22067c: ;   {optimized virtual_call}
  0x000002015c22067c: 488b d6e8 

  0x000002015c220680: ; ImmutableOopMap {[144]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getHeight@1 (line 381)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@12 (line 156)
  0x000002015c220680: 7cc6 6fff 

  0x000002015c220684: ;   {other}
  0x000002015c220684: 0f1f 8400 | 7408 0002 | 488b 9424 | 9000 0000 | 448b 4224 

  0x000002015c220698: ; implicit exception: dispatches to 0x000002015c222278
  0x000002015c220698: 458b 4818 | 418b 7010 | 442b ce44 | 898c 24a0 | 0000 0041 

  0x000002015c2206ac: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2206ac: 83f9 0048 | bf28 b1b8 | 7001 0200 | 0048 bbd8 | 0100 0000 | 0000 000f | 840a 0000 | 0048 bbe8 
  0x000002015c2206cc: 0100 0000 | 0000 0048 | 8b04 1f48 | 8d40 0148 | 8904 1f0f | 8441 1a00 | 008b 7a20 

  0x000002015c2206e8: ; implicit exception: dispatches to 0x000002015c22227d
  0x000002015c2206e8: 488b 5f10 | 4883 fb00 

  0x000002015c2206f0: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2206f0: 48bf 28b1 | b870 0102 | 0000 48bb | 0802 0000 | 0000 0000 | 0f84 0a00 | 0000 48bb | f801 0000 
  0x000002015c220710: 0000 0000 | 488b 041f | 488d 4001 | 4889 041f | 0f84 001a | 0000 418b | 780c c5fa | 2ac7 c5f2 
  0x000002015c220730: 2ace 458b | 4014 442b | c744 8984 | 249c 0000 | 0041 81f8 | 0001 0000 

  0x000002015c220748: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220748: 48be 28b1 | b870 0102 | 0000 48bf | 1802 0000 | 0000 0000 | 0f8f 0a00 | 0000 48bf | 2802 0000 
  0x000002015c220768: 0000 0000 | 488b 1c3e | 488d 5b01 | 4889 1c3e | 0f8f 3d00 | 0000 4181 | f900 0100 

  0x000002015c220784: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220784: 0048 be28 | b1b8 7001 | 0200 0048 | bf48 0200 | 0000 0000 | 000f 8e0a | 0000 0048 | bf38 0200 
  0x000002015c2207a4: 0000 0000 | 0048 8b1c | 3e48 8d5b | 0148 891c | 3e0f 8e0a | 0000 00be | 0000 0000 | e915 0000 
  0x000002015c2207c4: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2207c4: 0048 be28 | b1b8 7001 | 0200 00ff | 8658 0200 | 00be 0100 | 0000 83fe 

  0x000002015c2207dc: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2207dc: 0048 bf28 | b1b8 7001 | 0200 0048 | bb70 0200 | 0000 0000 | 000f 840a | 0000 0048 | bb80 0200 
  0x000002015c2207fc: 0000 0000 | 0048 8b04 | 1f48 8d40 | 0148 8904 | 1f0f 8499 | 0300 0048 

  0x000002015c220814: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220814: 8bfa 48bb | 28b1 b870 | 0102 0000 | 4883 83a8 | 0200 0001 

  0x000002015c220828: ;   {metadata(method data for {method} {0x000002017044fdf0} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220828: 48bf 4891 | ba70 0102 | 0000 8b9f | cc00 0000 | 83c3 0289 | 9fcc 0000 | 0081 e3fe | ff1f 0083 
  0x000002015c220848: fb00 0f84 | 321a 0000 

  0x000002015c220850: ;   {oop(a 'java/lang/Class'{0x00000000843c9730} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220850: 48bf 3097 | 3c84 0000 | 0000 8b7f | 7048 83ff 

  0x000002015c220860: ;   {metadata(method data for {method} {0x000002017044fdf0} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220860: 0048 bf48 | 91ba 7001 | 0200 0048 | bb10 0100 | 0000 0000 | 000f 850a | 0000 0048 | bb20 0100 
  0x000002015c220880: 0000 0000 | 0048 8b04 | 1f48 8d40 | 0148 8904 | 1f89 b424 | a400 0000 | c5fa 118c | 2440 0100 
  0x000002015c2208a0: 00c5 fa11 | 8424 3c01 | 0000 0f85 | 8000 0000 

  0x000002015c2208b0: ;   {metadata(method data for {method} {0x000002017044fdf0} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2208b0: 488b fa48 | bb48 91ba | 7001 0200 

  0x000002015c2208bc: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2208bc: 0049 bae0 | 4533 0101 | 0200 004c | 8993 4001 | 0000 4883 | 8348 0100 | 0001 41b8 | 0001 0000 
  0x000002015c2208dc: 41b9 0001 | 0000 488b | c248 8bd0 | 0f1f 8000 

  0x000002015c2208ec: ;   {optimized virtual_call}
  0x000002015c2208ec: 0000 00e8 

  0x000002015c2208f0: ; ImmutableOopMap {[144]=Oop }
                      ;*invokevirtual createBitmap {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedBitmap@13 (line 274)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@117 (line 168)
  0x000002015c2208f0: 8ce5 5d06 

  0x000002015c2208f4: ;   {other}
  0x000002015c2208f4: 0f1f 8400 | e40a 0003 

  0x000002015c2208fc: ;   {oop(a 'java/lang/Class'{0x00000000843c9730} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2208fc: 49b8 3097 | 3c84 0000 | 0000 450f | be4f 4041 | 83f9 000f | 858e 1900 | 004c 8bd0 | 4589 5070 
  0x000002015c22091c: 4d8b c84c | 33c8 49c1 | e914 4983 | f900 0f85 | 8f19 0000 

  0x000002015c220930: ;   {oop(a 'java/lang/Class'{0x00000000843c9730} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220930: 49b8 3097 | 3c84 0000 | 0000 418b | 7070 488b | 9424 9000 

  0x000002015c220944: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220944: 0000 49b8 | 28b1 b870 | 0102 0000 | 4983 80e0 | 0200 0001 

  0x000002015c220958: ;   {metadata(method data for {method} {0x000002017044feb0} 'getCachedRenderingTarget' '()Lcom/sun/javafx/font/directwrite/ID2D1RenderTarget;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220958: 49b8 9894 | ba70 0102 | 0000 458b | 88cc 0000 | 0041 83c1 | 0245 8988 | cc00 0000 | 4181 e1fe 
  0x000002015c220978: ff1f 0041 | 83f9 000f | 8452 1900 

  0x000002015c220984: ;   {oop(a 'java/lang/Class'{0x00000000843c9730} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220984: 0049 b830 | 973c 8400 | 0000 0045 | 8b40 7449 

  0x000002015c220994: ;   {metadata(method data for {method} {0x000002017044feb0} 'getCachedRenderingTarget' '()Lcom/sun/javafx/font/directwrite/ID2D1RenderTarget;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220994: 83f8 0049 | b898 94ba | 7001 0200 | 0049 b920 | 0100 0000 | 0000 000f | 840a 0000 | 0049 b910 
  0x000002015c2209b4: 0100 0000 | 0000 004b | 8b14 0848 | 8d52 014b | 8914 080f | 840d 0000 | 0048 89b4 | 24a8 0000 
  0x000002015c2209d4: 00e9 a601 | 0000 488b | 9424 9000 

  0x000002015c2209e0: ;   {metadata(method data for {method} {0x000002017044feb0} 'getCachedRenderingTarget' '()Lcom/sun/javafx/font/directwrite/ID2D1RenderTarget;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2209e0: 0000 49b8 | 9894 ba70 | 0102 0000 

  0x000002015c2209ec: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2209ec: 49ba e045 | 3301 0102 | 0000 4d89 | 9040 0100 | 0049 8380 | 4801 0000 

  0x000002015c220a04: ;   {metadata(method data for {method} {0x000002017044fdf0} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220a04: 0149 b848 | 91ba 7001 | 0200 0045 | 8b88 cc00 | 0000 4183 | c102 4589 | 88cc 0000 | 0041 81e1 
  0x000002015c220a24: feff 1f00 | 4183 f900 | 0f84 c618 | 0000 4883 

  0x000002015c220a34: ;   {metadata(method data for {method} {0x000002017044fdf0} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220a34: fe00 49b8 | 4891 ba70 | 0102 0000 | 49b9 1001 | 0000 0000 | 0000 0f85 | 0a00 0000 | 49b9 2001 
  0x000002015c220a54: 0000 0000 | 0000 4b8b | 1408 488d | 5201 4b89 | 1408 4889 | b424 a800 | 0000 0f85 | 8300 0000 
  0x000002015c220a74: 488b 9424 | 9000 0000 

  0x000002015c220a7c: ;   {metadata(method data for {method} {0x000002017044fdf0} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220a7c: 49b8 4891 | ba70 0102 

  0x000002015c220a84: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220a84: 0000 49ba | e045 3301 | 0102 0000 | 4d89 9040 | 0100 0049 | 8380 4801 | 0000 0141 | b800 0100 
  0x000002015c220aa4: 0041 b900 | 0100 0048 | 8b94 2490 | 0000 000f 

  0x000002015c220ab4: ;   {optimized virtual_call}
  0x000002015c220ab4: 1f40 00e8 

  0x000002015c220ab8: ; ImmutableOopMap {[144]=Oop [168]=Oop }
                      ;*invokevirtual createBitmap {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedBitmap@13 (line 274)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedRenderingTarget@8 (line 281)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@123 (line 169)
  0x000002015c220ab8: c4e3 5d06 

  0x000002015c220abc: ;   {other}
  0x000002015c220abc: 0f1f 8400 | ac0c 0004 

  0x000002015c220ac4: ;   {oop(a 'java/lang/Class'{0x00000000843c9730} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220ac4: 49b8 3097 | 3c84 0000 | 0000 410f | be57 4083 | fa00 0f85 | 3d18 0000 | 4c8b d045 | 8950 7049 
  0x000002015c220ae4: 8bd0 4833 | d048 c1ea | 1448 83fa | 000f 853e 

  0x000002015c220af4: ;   {oop(a 'java/lang/Class'{0x00000000843c9730} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220af4: 1800 0049 | b830 973c | 8400 0000 | 0045 8b40 | 7048 8b94 | 2490 0000 

  0x000002015c220b0c: ;   {metadata(method data for {method} {0x000002017044feb0} 'getCachedRenderingTarget' '()Lcom/sun/javafx/font/directwrite/ID2D1RenderTarget;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220b0c: 0048 be98 | 94ba 7001 

  0x000002015c220b14: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220b14: 0200 0049 | bae0 4533 | 0101 0200 | 004c 8996 | 7801 0000 | 4883 8680 | 0100 0001 | 488b 9424 
  0x000002015c220b34: 9000 0000 | 0f1f 8000 

  0x000002015c220b3c: ;   {optimized virtual_call}
  0x000002015c220b3c: 0000 00e8 

  0x000002015c220b40: ; ImmutableOopMap {[144]=Oop [168]=Oop }
                      ;*invokevirtual createRenderingTarget {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedRenderingTarget@11 (line 281)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@123 (line 169)
  0x000002015c220b40: 3ce3 5d06 

  0x000002015c220b44: ;   {other}
  0x000002015c220b44: 0f1f 8400 | 340d 0005 

  0x000002015c220b4c: ;   {oop(a 'java/lang/Class'{0x00000000843c9730} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220b4c: 49b8 3097 | 3c84 0000 | 0000 450f | be4f 4041 | 83f9 000f | 85e8 1700 | 004c 8bd0 | 4589 5074 
  0x000002015c220b6c: 4d8b c84c | 33c8 49c1 | e914 4983 | f900 0f85 | e917 0000 

  0x000002015c220b80: ;   {oop(a 'java/lang/Class'{0x00000000843c9730} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220b80: 49b8 3097 | 3c84 0000 | 0000 458b | 4074 488b | b424 a800 

  0x000002015c220b94: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220b94: 0000 49b9 | 28b1 b870 | 0102 0000 | 41ff 8100 | 0300 00e9 | cb00 0000 | 89b4 24a4 | 0000 00c5 
  0x000002015c220bb4: fa11 8c24 | 4001 0000 | c5fa 1184 | 243c 0100 | 0048 8b94 | 2490 0000 

  0x000002015c220bcc: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220bcc: 0049 b828 | b1b8 7001 

  0x000002015c220bd4: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220bd4: 0200 0049 | bae0 4533 | 0101 0200 | 004d 8990 | 2803 0000 | 4983 8030 | 0300 0001 | 448b 8424 
  0x000002015c220bf4: 9c00 0000 | 448b 8c24 | a000 0000 | 488b 9424 | 9000 0000 | 0f1f 8000 

  0x000002015c220c0c: ;   {optimized virtual_call}
  0x000002015c220c0c: 0000 00e8 

  0x000002015c220c10: ; ImmutableOopMap {[144]=Oop }
                      ;*invokevirtual createBitmap {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@136 (line 171)
  0x000002015c220c10: 6ce2 5d06 

  0x000002015c220c14: ;   {other}
  0x000002015c220c14: 0f1f 8400 | 040e 0006 | 488b 9424 | 9000 0000 

  0x000002015c220c24: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220c24: 49b8 28b1 | b870 0102 

  0x000002015c220c2c: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220c2c: 0000 49ba | e045 3301 | 0102 0000 | 4d89 9060 | 0300 0049 | 8380 6803 | 0000 014c | 8bc0 488b 
  0x000002015c220c4c: 9424 9000 | 0000 4889 | 8424 b000 | 0000 0f1f 

  0x000002015c220c5c: ;   {optimized virtual_call}
  0x000002015c220c5c: 4400 00e8 

  0x000002015c220c60: ; ImmutableOopMap {[144]=Oop [176]=Oop }
                      ;*invokevirtual createRenderingTarget {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@144 (line 172)
  0x000002015c220c60: 1ce2 5d06 

  0x000002015c220c64: ;   {other}
  0x000002015c220c64: 0f1f 8400 | 540e 0007 | 4c8b c048 | 8bb4 24b0 | 0000 0048 

  0x000002015c220c78: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220c78: 83fe 0048 | ba28 b1b8 | 7001 0200 | 0048 bf88 | 0300 0000 | 0000 000f | 840a 0000 | 0048 bf98 
  0x000002015c220c98: 0300 0000 | 0000 0048 | 8b04 3a48 | 8d40 0148 | 8904 3a0f | 8491 1300 | 0049 83f8 

  0x000002015c220cb4: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220cb4: 0048 ba28 | b1b8 7001 | 0200 0048 | bfb8 0300 | 0000 0000 | 000f 840a | 0000 0048 | bfa8 0300 
  0x000002015c220cd4: 0000 0000 | 0048 8b04 | 3a48 8d40 | 0148 8904 | 3a0f 8457 | 1300 0048 | 8b94 2490 | 0000 008b 
  0x000002015c220cf4: 7a18 8b5f | 3448 83fb 

  0x000002015c220cfc: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220cfc: 0048 bf28 | b1b8 7001 | 0200 0048 | b8c8 0300 | 0000 0000 | 000f 840a | 0000 0048 | b8d8 0300 
  0x000002015c220d1c: 0000 0000 | 0048 8b0c | 0748 8d49 | 0148 890c | 070f 843e | 0100 004c | 8984 24c0 | 0000 0048 
  0x000002015c220d3c: 89b4 24c8 

  0x000002015c220d40: ;   {metadata('com/sun/javafx/font/directwrite/D2D1_MATRIX_3X2_F')}
  0x000002015c220d40: 0000 0048 | ba10 4b33 | 0101 0200 | 0049 8b87 | b801 0000 | 488d 7828 | 493b bfc8 | 0100 000f 
  0x000002015c220d60: 8721 1600 | 0049 89bf | b801 0000 | 48c7 0001 | 0000 0048 | 8bca 49ba | 0000 0000 | 0102 0000 
  0x000002015c220d80: 492b ca89 | 4808 4833 | c989 480c | 4833 c948 | 8948 1048 | 8948 1848 | 8948 2048 | 83fb 000f 
  0x000002015c220da0: 84ee 1500 | 0066 6690 

  0x000002015c220da8: ; implicit exception: dispatches to 0x000002015c2223a0
  0x000002015c220da8: e905 1600 | 0090 9090 

  0x000002015c220db0: ; implicit exception: dispatches to 0x000002015c2223bc
  0x000002015c220db0: e919 1600 | 0090 9090 

  0x000002015c220db8: ; implicit exception: dispatches to 0x000002015c2223d8
  0x000002015c220db8: e92d 1600 | 0090 9090 

  0x000002015c220dc0: ; implicit exception: dispatches to 0x000002015c2223f4
  0x000002015c220dc0: e941 1600 | 0090 9090 

  0x000002015c220dc8: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220dc8: 488b d048 | be28 b1b8 | 7001 0200 | 0048 8386 | e803 0000 | 01c5 fa10 | a424 3c01 

  0x000002015c220de4: ;   {external_word}
  0x000002015c220de4: 0000 49ba | 803e bfb8 | fb7f 0000 | c4c1 5857 | 22c5 da58 | a424 1c01 | 0000 c5fa | 10ac 2440 
  0x000002015c220e04: ;   {external_word}
  0x000002015c220e04: 0100 0049 | ba80 3ebf | b8fb 7f00 | 00c4 c150 | 572a c5d2 | 58ac 2438 | 0100 0048 | 8bd0 4889 
  0x000002015c220e24: 9c24 d000 | 0000 4889 | 8424 b800 | 0000 0f1f 

  0x000002015c220e34: ;   {optimized virtual_call}
  0x000002015c220e34: 4400 00e8 

  0x000002015c220e38: ; ImmutableOopMap {[144]=Oop [184]=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@211 (line 181)
  0x000002015c220e38: 44e0 5d06 

  0x000002015c220e3c: ;   {other}
  0x000002015c220e3c: 0f1f 8400 | 2c10 0008 

  0x000002015c220e44: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220e44: 48ba 28b1 | b870 0102 | 0000 ff82 | f803 0000 | 488b 8424 | b800 0000 

  0x000002015c220e5c: ;   {section_word}
  0x000002015c220e5c: c5fa 1005 | 9cf4 ffff 

  0x000002015c220e64: ;   {section_word}
  0x000002015c220e64: c5fa 100d | 98f4 ffff | e94f 0000 | 0048 899c | 24d0 0000 | 004c 8984 | 24c0 0000 | 0048 89b4 
  0x000002015c220e84: 24c8 0000 

  0x000002015c220e88: ;   {oop(a 'java/lang/Class'{0x00000000843c9730} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220e88: 0048 ba30 | 973c 8400 | 0000 008b | 9280 0000 | 00c5 fa10 | 8c24 3c01 | 0000 c5f2 | 5c8c 241c 
  0x000002015c220ea8: 0100 00c5 | fa10 8424 | 4001 0000 | c5fa 5c84 | 2438 0100 | 0048 8bc2 | 4889 8424 | d800 0000 
  0x000002015c220ec8: c5fa 1184 | 2448 0100 | 00c5 fa11 | 8c24 4401 | 0000 4c8b | 8424 c000 | 0000 493b | 0049 8bd0 
  0x000002015c220ee8: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220ee8: 48bf 28b1 | b870 0102 | 0000 4883 | 8728 0400 

  0x000002015c220ef8: ;   {metadata(method data for {method} {0x00000201705d87d0} 'BeginDraw' '()V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c220ef8: 0001 48ba | a899 ba70 | 0102 0000 | 8bba cc00 | 0000 83c7 | 0289 bacc | 0000 0081 | e7fe ff1f 
  0x000002015c220f18: 0083 ff00 | 0f84 f314 | 0000 498b 

  0x000002015c220f24: ;   {metadata(method data for {method} {0x00000201705d87d0} 'BeginDraw' '()V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c220f24: 5010 48bf | a899 ba70 | 0102 0000 | 4883 8710 | 0100 0001 | 4c89 8424 | c000 0000 | 0f1f 8000 
  0x000002015c220f44: ;   {static_call}
  0x000002015c220f44: 0000 00e8 

  0x000002015c220f48: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop }
                      ;*invokestatic BeginDraw {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::BeginDraw@4 (line 34)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@244 (line 191)
  0x000002015c220f48: 4519 0000 

  0x000002015c220f4c: ;   {other}
  0x000002015c220f4c: 0f1f 8400 | 3c11 0009 | 4c8b 8424 | c000 0000 

  0x000002015c220f5c: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220f5c: 48ba 28b1 | b870 0102 | 0000 4883 | 8260 0400 

  0x000002015c220f6c: ;   {metadata(method data for {method} {0x00000201705d89b0} 'SetTransform' '(Lcom/sun/javafx/font/directwrite/D2D1_MATRIX_3X2_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c220f6c: 0001 48ba | 089b ba70 | 0102 0000 | 448b 82cc | 0000 0041 | 83c0 0244 | 8982 cc00 | 0000 4181 
  0x000002015c220f8c: e0fe ff1f | 0041 83f8 | 000f 849b | 1400 004c | 8b84 24c0 | 0000 0049 

  0x000002015c220fa4: ;   {metadata(method data for {method} {0x00000201705d89b0} 'SetTransform' '(Lcom/sun/javafx/font/directwrite/D2D1_MATRIX_3X2_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c220fa4: 8b50 1048 | be08 9bba | 7001 0200 | 0048 8386 | 1001 0000 | 014c 8984 | 24c0 0000 | 004c 8b84 
  0x000002015c220fc4: 24d8 0000 | 0066 0f1f 

  0x000002015c220fcc: ;   {static_call}
  0x000002015c220fcc: 4400 00e8 

  0x000002015c220fd0: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop }
                      ;*invokestatic SetTransform {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::SetTransform@5 (line 46)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@251 (line 192)
  0x000002015c220fd0: cc18 0000 

  0x000002015c220fd4: ;   {other}
  0x000002015c220fd4: 0f1f 8400 | c411 000a 

  0x000002015c220fdc: ;   {oop(a 'java/lang/Class'{0x00000000843c9730} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220fdc: 48be 3097 | 3c84 0000 | 0000 8b7e | 7c4c 8b84 | 24c0 0000 

  0x000002015c220ff0: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c220ff0: 0048 ba28 | b1b8 7001 | 0200 0048 | 8382 9804 

  0x000002015c221000: ;   {metadata(method data for {method} {0x00000201705d8910} 'Clear' '(Lcom/sun/javafx/font/directwrite/D2D1_COLOR_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c221000: 0000 0148 | ba70 9cba | 7001 0200 | 0044 8b82 | cc00 0000 | 4183 c002 | 4489 82cc | 0000 0041 
  0x000002015c221020: 81e0 feff | 1f00 4183 | f800 0f84 | 2714 0000 | 4c8b 8424 | c000 0000 | 498b 5010 

  0x000002015c22103c: ;   {metadata(method data for {method} {0x00000201705d8910} 'Clear' '(Lcom/sun/javafx/font/directwrite/D2D1_COLOR_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c22103c: 48bb 709c | ba70 0102 | 0000 4883 | 8310 0100 | 0001 4c89 | 8424 c000 | 0000 4c8b | c748 89bc 
  0x000002015c22105c: 24e8 0000 | 0048 89b4 | 24e0 0000 | 0066 0f1f 

  0x000002015c22106c: ;   {static_call}
  0x000002015c22106c: 4400 00e8 

  0x000002015c221070: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop [232]=Oop }
                      ;*invokestatic Clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::Clear@5 (line 42)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@259 (line 193)
  0x000002015c221070: 3b18 0000 

  0x000002015c221074: ;   {other}
  0x000002015c221074: 0f1f 8400 | 6412 000b 

  0x000002015c22107c: ;   {metadata('com/sun/javafx/font/directwrite/D2D1_POINT_2F')}
  0x000002015c22107c: 48ba 9876 | 3b01 0102 | 0000 498b | 87b8 0100 | 0048 8d78 | 1849 3bbf | c801 0000 | 0f87 da13 
  0x000002015c22109c: 0000 4989 | bfb8 0100 | 0048 c700 | 0100 0000 | 488b ca49 | ba00 0000 | 0001 0200 | 0049 2bca 
  0x000002015c2210bc: 8948 0848 | 33c9 8948 | 0c48 33c9 | 4889 4810 

  0x000002015c2210cc: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2210cc: 4c8b c048 | ba28 b1b8 | 7001 0200 | 0048 8382 | b804 0000 | 01c5 fa10 | 8c24 4401 | 0000 c5f8 
  0x000002015c2210ec: ;   {external_word}
  0x000002015c2210ec: 28c1 49ba | 803e bfb8 | fb7f 0000 | c4c1 7857 | 02c5 fa10 | 8c24 4801 

  0x000002015c221104: ;   {external_word}
  0x000002015c221104: 0000 49ba | 803e bfb8 | fb7f 0000 | c4c1 7057 

  0x000002015c221114: ;   {metadata(method data for {method} {0x00000201705d9180} '<init>' '(FF)V' in 'com/sun/javafx/font/directwrite/D2D1_POINT_2F')}
  0x000002015c221114: 0a49 b8d8 | 9dba 7001 | 0200 0041 | 8b90 cc00 | 0000 83c2 | 0241 8990 | cc00 0000 | 81e2 feff 
  0x000002015c221134: 1f00 83fa | 000f 8446 | 1300 004c 

  0x000002015c221140: ;   {metadata(method data for {method} {0x00000201705d9180} '<init>' '(FF)V' in 'com/sun/javafx/font/directwrite/D2D1_POINT_2F')}
  0x000002015c221140: 8bc0 48ba | d89d ba70 | 0102 0000 | 4883 8210 | 0100 0001 

  0x000002015c221154: ;   {metadata(method data for {method} {0x000002010047b210} '<init>' '()V' in 'java/lang/Object')}
  0x000002015c221154: 49b8 6067 | 006f 0102 | 0000 418b | 90cc 0000 | 0083 c202 | 4189 90cc | 0000 0081 | e2fe ff1f 
  0x000002015c221174: 0083 fa00 | 0f84 2813 | 0000 c5fa | 1140 0cc5 | fa11 4810 | 488b b424 | e000 0000 | 448b 4678 
  0x000002015c221194: 488b 9424 | c000 0000 

  0x000002015c22119c: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c22119c: 48be 28b1 | b870 0102 | 0000 4883 | 86e0 0400 | 0001 488b | 9424 c000 | 0000 4889 | 8424 f000 
  0x000002015c2211bc: ;   {optimized virtual_call}
  0x000002015c2211bc: 0000 90e8 

  0x000002015c2211c0: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop }
                      ;*invokevirtual CreateSolidColorBrush {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@282 (line 195)
  0x000002015c2211c0: 1116 0000 

  0x000002015c2211c4: ;   {other}
  0x000002015c2211c4: 0f1f 8400 | b413 000c | 4889 8424 | f800 0000 | 448b 8424 | 9800 0000 | 4183 f800 

  0x000002015c2211e0: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2211e0: 48ba 28b1 | b870 0102 | 0000 48be | 1005 0000 | 0000 0000 | 0f84 0a00 | 0000 48be | 0005 0000 
  0x000002015c221200: 0000 0000 | 488b 3c32 | 488d 7f01 | 4889 3c32 | 0f84 1500 | 0000 488b | 9424 9000 | 0000 4c8b 
  0x000002015c221220: 8424 c000 | 0000 e991 | 0000 004c | 8b84 24c0 | 0000 0049 

  0x000002015c221234: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221234: 8bd0 48bf | 28b1 b870 | 0102 0000 | 4883 8738 | 0500 0001 

  0x000002015c221248: ;   {metadata(method data for {method} {0x00000201705d8a50} 'SetTextAntialiasMode' '(I)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c221248: 48ba e8a0 | ba70 0102 | 0000 8bba | cc00 0000 | 83c7 0289 | bacc 0000 | 0081 e7fe | ff1f 0083 
  0x000002015c221268: ff00 0f84 | 5712 0000 | 498b 5010 

  0x000002015c221274: ;   {metadata(method data for {method} {0x00000201705d8a50} 'SetTextAntialiasMode' '(I)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c221274: 48bf e8a0 | ba70 0102 | 0000 4883 | 8710 0100 | 0001 4c89 | 8424 c000 | 0000 41b8 | 0200 0000 
  0x000002015c221294: ;   {static_call}
  0x000002015c221294: 6666 90e8 

  0x000002015c221298: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop }
                      ;*invokestatic SetTextAntialiasMode {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::SetTextAntialiasMode@5 (line 50)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@294 (line 197)
  0x000002015c221298: 2216 0000 

  0x000002015c22129c: ;   {other}
  0x000002015c22129c: 0f1f 8400 | 8c14 000d | 488b 8424 | f800 0000 | 4c8b 8424 | c000 0000 | 488b 9424 | 9000 0000 
  0x000002015c2212bc: 448b 4a20 

  0x000002015c2212c0: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2212c0: 498b f848 | be28 b1b8 | 7001 0200 | 0048 8386 | 7005 0000 | 0149 8bd8 | 4c8b 8424 | f000 0000 
  0x000002015c2212e0: 488b f8be | 0000 0000 | 488b d348 | 899c 24c0 | 0000 000f 

  0x000002015c2212f4: ;   {optimized virtual_call}
  0x000002015c2212f4: 1f40 00e8 

  0x000002015c2212f8: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop }
                      ;*invokevirtual DrawGlyphRun {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@308 (line 199)
  0x000002015c2212f8: e914 0000 

  0x000002015c2212fc: ;   {other}
  0x000002015c2212fc: 0f1f 8400 | ec14 000e | 4c8b 8424 | c000 0000 

  0x000002015c22130c: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c22130c: 48ba 28b1 | b870 0102 | 0000 4883 | 82a8 0500 

  0x000002015c22131c: ;   {metadata(method data for {method} {0x00000201705d8870} 'EndDraw' '()I' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c22131c: 0001 48ba | d0a3 ba70 | 0102 0000 | 8bb2 cc00 | 0000 83c6 | 0289 b2cc | 0000 0081 | e6fe ff1f 
  0x000002015c22133c: 0083 fe00 | 0f84 a211 | 0000 4c8b | 8424 c000 | 0000 498b 

  0x000002015c221350: ;   {metadata(method data for {method} {0x00000201705d8870} 'EndDraw' '()I' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c221350: 5010 48be | d0a3 ba70 | 0102 0000 | 4883 8610 | 0100 0001 | 4c89 8424 | c000 0000 

  0x000002015c22136c: ;   {static_call}
  0x000002015c22136c: 6666 90e8 

  0x000002015c221370: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop }
                      ;*invokestatic EndDraw {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::EndDraw@4 (line 38)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@313 (line 200)
  0x000002015c221370: 5915 0000 

  0x000002015c221374: ;   {other}
  0x000002015c221374: 0f1f 8400 | 6415 000f | 8984 2400 | 0100 0048 | 8bb4 24f8 | 0000 0048 | 3b06 488b 

  0x000002015c221390: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221390: d648 bf28 | b1b8 7001 | 0200 008b | 5208 49ba | 0000 0000 | 0102 0000 | 4903 d248 | 3b97 d805 
  0x000002015c2213b0: 0000 750d | 4883 87e0 | 0500 0001 | e960 0000 | 0048 3b97 | e805 0000 | 750d 4883 | 87f0 0500 
  0x000002015c2213d0: 0001 e94a | 0000 0048 | 83bf d805 | 0000 0075 | 1748 8997 | d805 0000 | 48c7 87e0 | 0500 0001 
  0x000002015c2213f0: 0000 00e9 | 2900 0000 | 4883 bfe8 | 0500 0000 | 7517 4889 | 97e8 0500 | 0048 c787 | f005 0000 
  0x000002015c221410: 0100 0000 | e908 0000 | 0048 8387 | c805 0000 | 0148 8bd6 

  0x000002015c221424: ;   {optimized virtual_call}
  0x000002015c221424: 6666 90e8 

  0x000002015c221428: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@320 (line 201)
  0x000002015c221428: b40b 93ff 

  0x000002015c22142c: ;   {other}
  0x000002015c22142c: 0f1f 8400 | 1c16 0010 | 8b84 2400 | 0100 0083 

  0x000002015c22143c: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c22143c: f800 49b8 | 28b1 b870 | 0102 0000 | 49b9 1006 | 0000 0000 | 0000 0f85 | 0a00 0000 | 49b9 0006 
  0x000002015c22145c: 0000 0000 | 0000 4b8b | 3c08 488d | 7f01 4b89 | 3c08 488b | b424 c800 | 0000 0f85 | 9109 0000 
  0x000002015c22147c: ; implicit exception: dispatches to 0x000002015c22250e
  0x000002015c22147c: 483b 064c 

  0x000002015c221480: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221480: 8bc6 49b9 | 28b1 b870 | 0102 0000 | 4983 8120 | 0700 0001 | 41b8 0000 | 0000 41b9 | 0000 0000 
  0x000002015c2214a0: 8bbc 249c | 0000 0048 | 8bde 8bb4 | 24a0 0000 | 00b9 0100 | 0000 488b | d348 899c | 24c8 0000 
  0x000002015c2214c0: 0066 0f1f 

  0x000002015c2214c4: ;   {optimized virtual_call}
  0x000002015c2214c4: 4400 00e8 

  0x000002015c2214c8: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop }
                      ;*invokevirtual Lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@414 (line 217)
  0x000002015c2214c8: 3913 0000 

  0x000002015c2214cc: ;   {other}
  0x000002015c2214cc: 0f1f 8400 | bc16 0011 | 4889 8424 | 0801 0000 | 4883 f800 

  0x000002015c2214e0: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2214e0: 48ba 28b1 | b870 0102 | 0000 48be | 5007 0000 | 0000 0000 | 0f85 0a00 | 0000 48be | 4007 0000 
  0x000002015c221500: 0000 0000 | 488b 3c32 | 488d 7f01 | 4889 3c32 | 0f85 0f00 

  0x000002015c221514: ;   {oop(nullptr)}
  0x000002015c221514: 0000 48be | 0000 0000 | 0000 0000 | e917 0700 | 0048 3b00 

  0x000002015c221528: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221528: 488b d048 | be28 b1b8 | 7001 0200 | 0048 8386 | 7807 0000 

  0x000002015c22153c: ;   {metadata(method data for {method} {0x00000201705d9980} 'GetDataPointer' '()[B' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002015c22153c: 0148 ba00 | a7ba 7001 | 0200 008b | b2cc 0000 | 0083 c602 | 89b2 cc00 | 0000 81e6 | feff 1f00 
  0x000002015c22155c: 83fe 000f | 84b3 0f00 | 0048 8b50 

  0x000002015c221568: ;   {metadata(method data for {method} {0x00000201705d9980} 'GetDataPointer' '()[B' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002015c221568: 1048 be00 | a7ba 7001 | 0200 0048 | 8386 1001 | 0000 010f 

  0x000002015c22157c: ;   {static_call}
  0x000002015c22157c: 1f40 00e8 

  0x000002015c221580: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop }
                      ;*invokestatic GetDataPointer {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.IWICBitmapLock::GetDataPointer@4 (line 34)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@426 (line 219)
  0x000002015c221580: e012 0000 

  0x000002015c221584: ;   {other}
  0x000002015c221584: 0f1f 8400 | 7417 0012 | 4889 8424 | 1001 0000 | 4883 f800 

  0x000002015c221598: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221598: 48ba 28b1 | b870 0102 | 0000 48be | a807 0000 | 0000 0000 | 0f85 0a00 | 0000 48be | 9807 0000 
  0x000002015c2215b8: 0000 0000 | 488b 3c32 | 488d 7f01 | 4889 3c32 | 0f85 0f00 

  0x000002015c2215cc: ;   {oop(nullptr)}
  0x000002015c2215cc: 0000 48be | 0000 0000 | 0000 0000 | e99c 0500 | 0048 8b84 | 2408 0100 | 0048 8bd0 

  0x000002015c2215e8: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2215e8: 48bf 28b1 | b870 0102 | 0000 4883 | 87d0 0700 

  0x000002015c2215f8: ;   {metadata(method data for {method} {0x00000201705d9a20} 'GetStride' '()I' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002015c2215f8: 0001 48ba | 60a8 ba70 | 0102 0000 | 8bba cc00 | 0000 83c7 | 0289 bacc | 0000 0081 | e7fe ff1f 
  0x000002015c221618: 0083 ff00 | 0f84 170f | 0000 488b 

  0x000002015c221624: ;   {metadata(method data for {method} {0x00000201705d9a20} 'GetStride' '()I' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002015c221624: 5010 48bf | 60a8 ba70 | 0102 0000 | 4883 8710 | 0100 0001 | 0f1f 8000 

  0x000002015c22163c: ;   {static_call}
  0x000002015c22163c: 0000 00e8 

  0x000002015c221640: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*invokestatic GetStride {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.IWICBitmapLock::GetStride@4 (line 38)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@438 (line 223)
  0x000002015c221640: 2f12 0000 

  0x000002015c221644: ;   {other}
  0x000002015c221644: 0f1f 8400 | 3418 0013 | 4c8b c044 | 8b8c 2498 | 0000 0041 

  0x000002015c221658: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221658: 83f9 0048 | bb28 b1b8 | 7001 0200 | 0048 baf0 | 0700 0000 | 0000 000f | 840a 0000 | 0048 ba00 
  0x000002015c221678: 0800 0000 | 0000 0048 | 8b34 1348 | 8d76 0148 | 8934 130f | 84c0 0200 | 0044 8b9c | 24a0 0000 
  0x000002015c221698: 008b 9c24 | 9c00 0000 | 410f afdb | 488b d3c1 | e302 2bda 

  0x000002015c2216ac: ;   {metadata({type array byte})}
  0x000002015c2216ac: 48ba c022 | 0000 0102 | 0000 4863 | db48 8bfb | 4881 fbff | ffff 000f | 8791 0e00 | 0048 be17 
  0x000002015c2216cc: 0000 0000 | 0000 0048 | 8d34 1e48 | 83e6 f849 | 8b87 b801 | 0000 488d | 3430 493b | b7c8 0100 
  0x000002015c2216ec: 000f 8767 | 0e00 0049 | 89b7 b801 | 0000 482b | f048 c700 | 0100 0000 | 488b ca49 | ba00 0000 
  0x000002015c22170c: 0001 0200 | 0049 2bca | 8948 0889 | 580c 4883 | ee10 4885 | f60f 8411 | 0000 0048 | 33db 48c1 
  0x000002015c22172c: ee03 4889 | 5cf0 0848 | ffce 75f6 | bb00 0000 | 00ba 0000 | 0000 be00 | 0000 004c | 8bb4 2410 
  0x000002015c22174c: 0100 0044 | 8bac 249c | 0000 00e9 | a401 0000 | 0f1f 4000 | 488b fab9 | 0000 0000 | 899c 2404 
  0x000002015c22176c: 0100 00e9 | f800 0000 | 0f1f 4000 | 488b deff | c34c 8bcf | 41ff c141 | 3b7e 0c0f | 83e1 0d00 
  0x000002015c22178c: 0048 63ff | 410f be7c | 3e10 41bb | ffff ffff | 442b df3b | 700c 0f83 | d40d 0000 

  0x000002015c2217a8: ;   {no_reloc}
  0x000002015c2217a8: 4863 f644 | 885c 3010 | 488b f3ff | c649 8bf9 | ffc7 453b | 4e0c 0f83 | c60d 0000 | 4d63 c947 
  0x000002015c2217c8: 0fbe 4c0e | 1041 bbff | ffff ff45 | 2bd9 3b58 | 0c0f 83b9 | 0d00 0048 | 63db 4488 | 5c18 1048 
  0x000002015c2217e8: 8bde ffc3 | 4c8b cf41 | ffc1 413b | 7e0c 0f83 | aa0d 0000 | 4863 ff41 | 0fbe 7c3e | 1041 bbff 
  0x000002015c221808: ffff ff44 | 2bdf 3b70 | 0c0f 839d | 0d00 0048 | 63f6 4488 | 5c30 1041 | ffc1 ffc1 

  0x000002015c221824: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221824: 48be 28b1 | b870 0102 | 0000 8bbe | d000 0000 | 83c7 0289 | bed0 0000 | 0081 e7fe | 3f00 0083 
  0x000002015c221844: ff00 0f84 | 760d 0000 | 4d8b 9758 

  0x000002015c221850: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@557 (line 230)
                      ;   {poll}
  0x000002015c221850: 0400 0041 

  0x000002015c221854: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221854: 8502 48be | 28b1 b870 | 0102 0000 | ff86 5008 | 0000 498b | f948 8bf3 

  0x000002015c22186c: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c22186c: 413b cd49 | b928 b1b8 | 7001 0200 | 0049 bb40 | 0800 0000 | 0000 000f | 8c0a 0000 | 0049 bb30 
  0x000002015c22188c: 0800 0000 | 0000 004b | 8b1c 1948 | 8d5b 014b | 891c 190f | 8cd3 feff | ff41 03d0 | 8b9c 2404 
  0x000002015c2218ac: 0100 00ff 

  0x000002015c2218b0: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2218b0: c349 b928 | b1b8 7001 | 0200 0045 | 8b99 d000 | 0000 4183 | c302 4589 | 99d0 0000 | 0041 81e3 
  0x000002015c2218d0: fe3f 0000 | 4183 fb00 | 0f84 050d | 0000 4d8b | 9758 0400 

  0x000002015c2218e4: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@570 (line 228)
                      ;   {poll}
  0x000002015c2218e4: 0041 8502 

  0x000002015c2218e8: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2218e8: 48bf 28b1 | b870 0102 | 0000 ff87 | 6808 0000 | 448b 9c24 | a000 0000 

  0x000002015c221900: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221900: 413b db48 | bf28 b1b8 | 7001 0200 | 0048 b920 | 0800 0000 | 0000 000f | 8c0a 0000 | 0048 b910 
  0x000002015c221920: 0800 0000 | 0000 004c | 8b0c 0f4d | 8d49 014c | 890c 0f0f | 8c27 feff 

  0x000002015c221938: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221938: ff48 bb28 | b1b8 7001 | 0200 00ff | 8380 0800 | 0048 8bf0 | e928 0200 | 004c 8bb4 | 2410 0100 
  0x000002015c221958: 0044 8bac | 249c 0000 | 0044 8b8c | 24a0 0000 | 0049 8bdd | 410f afd9 

  0x000002015c221970: ;   {metadata({type array byte})}
  0x000002015c221970: 48ba c022 | 0000 0102 | 0000 4863 | db48 8bfb | 4881 fbff | ffff 000f | 8777 0c00 | 0048 be17 
  0x000002015c221990: 0000 0000 | 0000 0048 | 8d34 1e48 | 83e6 f849 | 8b87 b801 | 0000 488d | 3430 493b | b7c8 0100 
  0x000002015c2219b0: 000f 874d | 0c00 0049 | 89b7 b801 | 0000 482b | f048 c700 | 0100 0000 | 488b ca49 | ba00 0000 
  0x000002015c2219d0: 0001 0200 | 0049 2bca | 8948 0889 | 580c 4883 | ee10 4885 | f60f 8411 | 0000 0048 | 33db 48c1 
  0x000002015c2219f0: ee03 4889 | 5cf0 0848 | ffce 75f6 | ba00 0000 | 00be 0000 | 0000 bf00 | 0000 00e9 | 2d01 0000 
  0x000002015c221a10: 488b deb9 | 0000 0000 | 8994 2418 | 0100 00e9 | 8500 0000 | 0f1f 4000 | 488b d7ff | c241 3b5e 
  0x000002015c221a30: 0c0f 83e1 | 0b00 004c | 63cb 470f | be4c 0e10 | 41bb ffff | ffff 452b | d93b 780c | 0f83 d40b 
  0x000002015c221a50: 0000 4863 | ff44 885c | 3810 83c3 

  0x000002015c221a5c: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221a5c: 04ff c148 | bf28 b1b8 | 7001 0200 | 0044 8b8f | d000 0000 | 4183 c102 | 4489 8fd0 | 0000 0041 
  0x000002015c221a7c: 81e1 fe3f | 0000 4183 | f900 0f84 | a80b 0000 | 4d8b 9758 

  0x000002015c221a90: ; ImmutableOopMap {r14=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@632 (line 242)
                      ;   {poll}
  0x000002015c221a90: 0400 0041 

  0x000002015c221a94: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221a94: 8502 48bf | 28b1 b870 | 0102 0000 | ff87 d808 | 0000 488b | fa41 3bcd 

  0x000002015c221aac: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221aac: 49bb 28b1 | b870 0102 | 0000 49b9 | c808 0000 | 0000 0000 | 0f8c 0a00 | 0000 49b9 | b808 0000 
  0x000002015c221acc: 0000 0000 | 4b8b 140b | 488d 5201 | 4b89 140b | 0f8c 46ff | ffff 4103 | f08b 9424 | 1801 0000 
  0x000002015c221aec: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221aec: ffc2 49b9 | 28b1 b870 | 0102 0000 | 458b 99d0 | 0000 0041 | 83c3 0245 | 8999 d000 | 0000 4181 
  0x000002015c221b0c: e3fe 3f00 | 0041 83fb | 000f 843a | 0b00 004d | 8b97 5804 

  0x000002015c221b20: ; ImmutableOopMap {r14=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@645 (line 240)
                      ;   {poll}
  0x000002015c221b20: 0000 4185 

  0x000002015c221b24: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221b24: 0248 bb28 | b1b8 7001 | 0200 00ff | 83f0 0800 | 0044 8b8c | 24a0 0000 | 0041 3bd1 

  0x000002015c221b40: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221b40: 48bb 28b1 | b870 0102 | 0000 48b9 | a808 0000 | 0000 0000 | 0f8c 0a00 | 0000 48b9 | 9808 0000 
  0x000002015c221b60: 0000 0000 | 4c8b 1c0b | 4d8d 5b01 | 4c89 1c0b | 0f8c 9afe | ffff 488b | f048 89b4 | 2420 0100 
  0x000002015c221b80: 0048 8b94 | 2408 0100 

  0x000002015c221b88: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221b88: 0048 bb28 | b1b8 7001 | 0200 008b | 5208 49ba | 0000 0000 | 0102 0000 | 4903 d248 | 3b93 1809 
  0x000002015c221ba8: 0000 750d | 4883 8320 | 0900 0001 | e960 0000 | 0048 3b93 | 2809 0000 | 750d 4883 | 8330 0900 
  0x000002015c221bc8: 0001 e94a | 0000 0048 | 83bb 1809 | 0000 0075 | 1748 8993 | 1809 0000 | 48c7 8320 | 0900 0001 
  0x000002015c221be8: 0000 00e9 | 2900 0000 | 4883 bb28 | 0900 0000 | 7517 4889 | 9328 0900 | 0048 c783 | 3009 0000 
  0x000002015c221c08: 0100 0000 | e908 0000 | 0048 8383 | 0809 0000 | 0148 8b94 | 2408 0100 | 0066 0f1f 

  0x000002015c221c24: ;   {optimized virtual_call}
  0x000002015c221c24: 4400 00e8 

  0x000002015c221c28: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop [288]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@650 (line 250)
  0x000002015c221c28: b403 93ff 

  0x000002015c221c2c: ;   {other}
  0x000002015c221c2c: 0f1f 8400 | 1c1e 0018 | 488b b424 | 2001 0000 | 8bbc 24a4 | 0000 0083 

  0x000002015c221c44: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221c44: ff00 48ba | 28b1 b870 | 0102 0000 | 48bb 4009 | 0000 0000 | 0000 0f85 | 0a00 0000 | 48bb 5009 
  0x000002015c221c64: 0000 0000 | 0000 488b | 041a 488d | 4001 4889 | 041a 0f85 | 7801 0000 | 4889 b424 | 2801 0000 
  0x000002015c221c84: 89bc 24a4 | 0000 0048 | 8b94 24c8 

  0x000002015c221c90: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221c90: 0000 0048 | bb28 b1b8 | 7001 0200 | 008b 5208 | 49ba 0000 | 0000 0102 | 0000 4903 | d248 3b93 
  0x000002015c221cb0: 7009 0000 | 750d 4883 | 8378 0900 | 0001 e960 | 0000 0048 | 3b93 8009 | 0000 750d | 4883 8388 
  0x000002015c221cd0: 0900 0001 | e94a 0000 | 0048 83bb | 7009 0000 | 0075 1748 | 8993 7009 | 0000 48c7 | 8378 0900 
  0x000002015c221cf0: 0001 0000 | 00e9 2900 | 0000 4883 | bb80 0900 | 0000 7517 | 4889 9380 | 0900 0048 | c783 8809 
  0x000002015c221d10: 0000 0100 | 0000 e908 | 0000 0048 | 8383 6009 | 0000 0148 | 8b94 24c8 | 0000 000f 

  0x000002015c221d2c: ;   {optimized virtual_call}
  0x000002015c221d2c: 1f40 00e8 

  0x000002015c221d30: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [296]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@661 (line 254)
  0x000002015c221d30: 4cd1 5d06 

  0x000002015c221d34: ;   {other}
  0x000002015c221d34: 0f1f 8400 | 241f 0019 | 4c8b 8424 | c000 0000 

  0x000002015c221d44: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221d44: 48ba 28b1 | b870 0102 | 0000 458b | 4008 49ba | 0000 0000 | 0102 0000 | 4d03 c24c | 3b82 a809 
  0x000002015c221d64: 0000 750d | 4883 82b0 | 0900 0001 | e960 0000 | 004c 3b82 | b809 0000 | 750d 4883 | 82c0 0900 
  0x000002015c221d84: 0001 e94a | 0000 0048 | 83ba a809 | 0000 0075 | 174c 8982 | a809 0000 | 48c7 82b0 | 0900 0001 
  0x000002015c221da4: 0000 00e9 | 2900 0000 | 4883 bab8 | 0900 0000 | 7517 4c89 | 82b8 0900 | 0048 c782 | c009 0000 
  0x000002015c221dc4: 0100 0000 | e908 0000 | 0048 8382 | 9809 0000 | 0148 8b94 | 24c0 0000 

  0x000002015c221ddc: ;   {optimized virtual_call}
  0x000002015c221ddc: 0066 90e8 

  0x000002015c221de0: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [296]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@667 (line 255)
  0x000002015c221de0: 9cd0 5d06 

  0x000002015c221de4: ;   {other}
  0x000002015c221de4: 0f1f 8400 | d41f 001a | 488b b424 | 2801 0000 | 488b c648 | 81c4 6001 

  0x000002015c221dfc: ;   {poll_return}
  0x000002015c221dfc: 0000 5d49 | 3ba7 5004 | 0000 0f87 | 6a08 0000 | c348 3b06 

  0x000002015c221e10: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221e10: 488b d648 | bf28 b1b8 | 7001 0200 | 008b 5208 | 49ba 0000 | 0000 0102 | 0000 4903 | d248 3b97 
  0x000002015c221e30: 3006 0000 | 750d 4883 | 8738 0600 | 0001 e960 | 0000 0048 | 3b97 4006 | 0000 750d | 4883 8748 
  0x000002015c221e50: 0600 0001 | e94a 0000 | 0048 83bf | 3006 0000 | 0075 1748 | 8997 3006 | 0000 48c7 | 8738 0600 
  0x000002015c221e70: 0001 0000 | 00e9 2900 | 0000 4883 | bf40 0600 | 0000 7517 | 4889 9740 | 0600 0048 | c787 4806 
  0x000002015c221e90: 0000 0100 | 0000 e908 | 0000 0048 | 8387 2006 | 0000 0148 | 8bd6 4889 | b424 c800 

  0x000002015c221eac: ;   {optimized virtual_call}
  0x000002015c221eac: 0000 90e8 

  0x000002015c221eb0: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@331 (line 205)
  0x000002015c221eb0: cccf 5d06 

  0x000002015c221eb4: ;   {other}
  0x000002015c221eb4: 0f1f 8400 | a420 001b 

  0x000002015c221ebc: ;   {oop(a 'java/lang/Class'{0x00000000843c9730} = 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221ebc: 48be 3097 | 3c84 0000 | 0000 410f | be57 4083 | fa00 0f85 | bd07 0000 | c746 7000 | 0000 004c 
  0x000002015c221edc: 8b84 24c0 

  0x000002015c221ee0: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221ee0: 0000 0048 | ba28 b1b8 | 7001 0200 | 0045 8b40 | 0849 ba00 | 0000 0001 | 0200 004d | 03c2 4c3b 
  0x000002015c221f00: 8268 0600 | 0075 0d48 | 8382 7006 | 0000 01e9 | 6000 0000 | 4c3b 8278 | 0600 0075 | 0d48 8382 
  0x000002015c221f20: 8006 0000 | 01e9 4a00 | 0000 4883 | ba68 0600 | 0000 7517 | 4c89 8268 | 0600 0048 | c782 7006 
  0x000002015c221f40: 0000 0100 | 0000 e929 | 0000 0048 | 83ba 7806 | 0000 0075 | 174c 8982 | 7806 0000 | 48c7 8280 
  0x000002015c221f60: 0600 0001 | 0000 00e9 | 0800 0000 | 4883 8258 | 0600 0001 | 488b 9424 | c000 0000 | 4889 b424 
  0x000002015c221f80: 3001 0000 

  0x000002015c221f84: ;   {optimized virtual_call}
  0x000002015c221f84: 6666 90e8 

  0x000002015c221f88: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [304]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@341 (line 207)
  0x000002015c221f88: f4ce 5d06 

  0x000002015c221f8c: ;   {other}
  0x000002015c221f8c: 0f1f 8400 | 7c21 001c | 410f be47 | 4083 f800 | 488b b424 | 3001 0000 | 0f85 0207 | 0000 c746 
  0x000002015c221fac: 7400 0000 

  0x000002015c221fb0: ;   {metadata(method data for {method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c221fb0: 0048 b828 | b1b8 7001 | 0200 00ff | 8090 0600 | 008b 8424 | 0001 0000 | 488b 9c24 | f800 0000 
  0x000002015c221fd0: 488b 9424 | f000 0000 | 488b b424 | d800 0000 | c5fa 1084 | 2448 0100 | 00c5 fa10 | 8c24 4401 
  0x000002015c221ff0: 0000 488b | bc24 d000 | 0000 4c8b | 8424 9000 | 0000 418b | 4824 c741 | 1800 0000 | 00c7 4114 
  0x000002015c222010: 0000 0000 | c741 1000 | 0000 00c7 | 410c 0000 

  0x000002015c222020: ;   {oop(nullptr)}
  0x000002015c222020: 0000 48b8 | 0000 0000 | 0000 0000 | 4881 c460 | 0100 005d 

  0x000002015c222034: ;   {poll_return}
  0x000002015c222034: 493b a750 | 0400 000f | 878b 0600 | 00c3 4c89 | 8424 c000 | 0000 4c8b | ce44 8b9c | 24a4 0000 
  0x000002015c222054: 0044 8bac | 249c 0000 | 00c5 fa10 | 8c24 4001 | 0000 c5fa | 1084 243c | 0100 0044 | 8bb4 24a0 
  0x000002015c222074: 0000 004c | 8b84 2490 | 0000 00bb | 0000 0000 

  0x000002015c222084: ;   {metadata({type array byte})}
  0x000002015c222084: 48ba c022 | 0000 0102 | 0000 4863 | db48 8bfb | 4881 fbff | ffff 000f | 8741 0600 | 0048 be17 
  0x000002015c2220a4: 0000 0000 | 0000 0048 | 8d34 1e48 | 83e6 f849 | 8b87 b801 | 0000 488d | 3430 493b | b7c8 0100 
  0x000002015c2220c4: 000f 8717 | 0600 0049 | 89b7 b801 | 0000 482b | f048 c700 | 0100 0000 | 488b ca49 | ba00 0000 
  0x000002015c2220e4: 0001 0200 | 0049 2bca | 8948 0889 | 580c 4883 | ee10 4885 | f60f 8411 | 0000 0048 | 33db 48c1 
  0x000002015c222104: ee03 4889 | 5cf0 0848 | ffce 75f6 | 4881 c460 | 0100 005d 

  0x000002015c222118: ;   {poll_return}
  0x000002015c222118: 493b a750 | 0400 000f | 87c7 0500 | 00c3 448b | 8c24 9800 | 0000 c5fa | 108c 2438 | 0100 00c5 
  0x000002015c222138: fa10 8424 | 1c01 0000 | 4c8b c2bb | 0000 0000 

  0x000002015c222148: ;   {metadata({type array byte})}
  0x000002015c222148: 48ba c022 | 0000 0102 | 0000 4863 | db48 8bfb | 4881 fbff | ffff 000f | 879d 0500 | 0048 be17 
  0x000002015c222168: 0000 0000 | 0000 0048 | 8d34 1e48 | 83e6 f849 | 8b87 b801 | 0000 488d | 3430 493b | b7c8 0100 
  0x000002015c222188: 000f 8773 | 0500 0049 | 89b7 b801 | 0000 482b | f048 c700 | 0100 0000 | 488b ca49 | ba00 0000 
  0x000002015c2221a8: 0001 0200 | 0049 2bca | 8948 0889 | 580c 4883 | ee10 4885 | f60f 8411 | 0000 0048 | 33db 48c1 
  0x000002015c2221c8: ee03 4889 | 5cf0 0848 | ffce 75f6 | 4881 c460 | 0100 005d 

  0x000002015c2221dc: ;   {poll_return}
  0x000002015c2221dc: 493b a750 | 0400 000f | 8723 0500 

  0x000002015c2221e8: ;   {metadata({method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2221e8: 00c3 49ba | 78fb 4470 | 0102 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000002015c222200: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c222200: ffe8 7a55 

  0x000002015c222204: ; ImmutableOopMap {rdx=Oop [144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@-1 (line 155)
  0x000002015c222204: 6c06 e98c 

  0x000002015c222208: ;   {metadata({method} {0x0000020170450760} 'getWidth' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c222208: e1ff ff49 | ba58 0745 | 7001 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002015c222220: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c222220: ffff e859 

  0x000002015c222224: ; ImmutableOopMap {[144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@-1 (line 375)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@5 (line 156)
  0x000002015c222224: 556c 06e9 | eae1 ffff 

  0x000002015c22222c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c22222c: e8ef f26b 

  0x000002015c222230: ; ImmutableOopMap {rdx=Oop rsi=Oop [144]=Oop }
                      ;*getfield right {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getWidth@8 (line 376)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@5 (line 156)
                      ;   {metadata({method} {0x0000020170450a08} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c222230: 0649 ba00 | 0a45 7001 | 0200 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000002015c222248: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c222248: e833 556c 

  0x000002015c22224c: ; ImmutableOopMap {rdx=Oop [144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::isLCDGlyph@-1 (line 399)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@20 (line 376)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@5 (line 156)
  0x000002015c22224c: 06e9 4ae2 

  0x000002015c222250: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c222250: ffff e8c9 

  0x000002015c222254: ; ImmutableOopMap {rdx=Oop rsi=Oop [144]=Oop }
                      ;*invokevirtual getAAMode {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::isLCDGlyph@4 (line 399)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@20 (line 376)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@5 (line 156)
                      ;   {metadata({method} {0x0000020170450810} 'getHeight' '()I' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c222254: f26b 0649 | ba08 0845 | 7001 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002015c22226c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c22226c: ffff e80d 

  0x000002015c222270: ; ImmutableOopMap {rdx=Oop [144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getHeight@-1 (line 381)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@12 (line 156)
  0x000002015c222270: 556c 06e9 | ece3 ffff 

  0x000002015c222278: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c222278: e8a3 f26b 

  0x000002015c22227c: ; ImmutableOopMap {rdx=Oop r8=Oop [144]=Oop }
                      ;*getfield bottom {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getHeight@8 (line 382)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@12 (line 156)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c22227c: 06e8 9ef2 

  0x000002015c222280: ; ImmutableOopMap {rdx=Oop r8=Oop rdi=Oop [144]=Oop }
                      ;*getfield fontFace {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@22 (line 156)
                      ;   {metadata({method} {0x000002017044fdf0} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c222280: 6b06 49ba | e8fd 4470 | 0102 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000002015c222298: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c222298: ffe8 e254 

  0x000002015c22229c: ; ImmutableOopMap {rdx=Oop [144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedBitmap@-1 (line 273)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@117 (line 168)
  0x000002015c22229c: 6c06 e9ad | e5ff ff45 | 8b48 7049 | 83f9 000f | 8464 e6ff | ff4c 890c 

  0x000002015c2222b4: ;   {runtime_call g1_pre_barrier_slow}
  0x000002015c2222b4: 24e8 c65b | 6c06 e956 | e6ff ff48 | 83f8 000f | 8467 e6ff | ff4c 8904 

  0x000002015c2222cc: ;   {runtime_call g1_post_barrier_slow}
  0x000002015c2222cc: 24e8 2e5f | 6c06 e959 

  0x000002015c2222d4: ;   {metadata({method} {0x000002017044feb0} 'getCachedRenderingTarget' '()Lcom/sun/javafx/font/directwrite/ID2D1RenderTarget;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2222d4: e6ff ff49 | baa8 fe44 | 7001 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002015c2222ec: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c2222ec: ffff e88d 

  0x000002015c2222f0: ; ImmutableOopMap {rsi=Oop [144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedRenderingTarget@-1 (line 280)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@123 (line 169)
  0x000002015c2222f0: 546c 06e9 | 8de6 ffff 

  0x000002015c2222f8: ;   {metadata({method} {0x000002017044fdf0} 'getCachedBitmap' '()Lcom/sun/javafx/font/directwrite/IWICBitmap;' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2222f8: 49ba e8fd | 4470 0102 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000002015c22230c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c22230c: ffff ffe8 

  0x000002015c222310: ; ImmutableOopMap {rsi=Oop [144]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedBitmap@-1 (line 273)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getCachedRenderingTarget@8 (line 281)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@123 (line 169)
  0x000002015c222310: 6c54 6c06 | e919 e7ff | ff41 8b50 | 7048 83fa | 000f 84b5 | e7ff ff48 

  0x000002015c222328: ;   {runtime_call g1_pre_barrier_slow}
  0x000002015c222328: 8914 24e8 | 505b 6c06 | e9a7 e7ff | ff48 83f8 | 000f 84b8 | e7ff ff4c 

  0x000002015c222340: ;   {runtime_call g1_post_barrier_slow}
  0x000002015c222340: 8904 24e8 | b85e 6c06 | e9aa e7ff | ff45 8b48 | 7449 83f9 | 000f 840a | e8ff ff4c 

  0x000002015c22235c: ;   {runtime_call g1_pre_barrier_slow}
  0x000002015c22235c: 890c 24e8 | 1c5b 6c06 | e9fc e7ff | ff48 83f8 | 000f 840d | e8ff ff4c 

  0x000002015c222374: ;   {runtime_call g1_post_barrier_slow}
  0x000002015c222374: 8904 24e8 | 845e 6c06 | e9ff e7ff 

  0x000002015c222380: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c222380: ffe8 9af1 

  0x000002015c222384: ; ImmutableOopMap {r8=Oop rsi=Oop rdx=Oop [144]=Oop }
                      ;*getfield matrix {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@167 (line 178)
  0x000002015c222384: 6b06 488b 

  0x000002015c222388: ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000002015c222388: d2e8 72fc 

  0x000002015c22238c: ; ImmutableOopMap {rbx=Oop [144]=Oop [192]=Oop [200]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@177 (line 181)
  0x000002015c22238c: 6b06 e908 | eaff ff48 | c704 24f7 

  0x000002015c222398: ;   {runtime_call deoptimize Runtime1 stub}
  0x000002015c222398: ffff ffe8 

  0x000002015c22239c: ; ImmutableOopMap {rbx=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop }
                      ;*getfield m11 {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@183 (line 181)
  0x000002015c22239c: 6033 6c06 

  0x000002015c2223a0: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c2223a0: e87b f16b 

  0x000002015c2223a4: ; ImmutableOopMap {rbx=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop }
                      ;*getfield m11 {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@183 (line 181)
  0x000002015c2223a4: 06c5 fa10 | 8300 0000 | 00b8 000d 

  0x000002015c2223b0: ;   {runtime_call access_field_patching Runtime1 stub}
  0x000002015c2223b0: 0508 e8c9 

  0x000002015c2223b4: ; ImmutableOopMap {rbx=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop }
                      ;*getfield m11 {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@183 (line 181)
  0x000002015c2223b4: 366c 06e9 | ece9 ffff 

  0x000002015c2223bc: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c2223bc: e85f f16b 

  0x000002015c2223c0: ; ImmutableOopMap {rbx=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop }
                      ;*getfield m12 {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@188 (line 181)
  0x000002015c2223c0: 06c5 fa10 | 8b00 0000 | 00b8 000d 

  0x000002015c2223cc: ;   {runtime_call access_field_patching Runtime1 stub}
  0x000002015c2223cc: 0508 e8ad 

  0x000002015c2223d0: ; ImmutableOopMap {rbx=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop }
                      ;*getfield m12 {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@188 (line 181)
  0x000002015c2223d0: 366c 06e9 | d8e9 ffff 

  0x000002015c2223d8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c2223d8: e843 f16b 

  0x000002015c2223dc: ; ImmutableOopMap {rbx=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop }
                      ;*getfield m21 {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@193 (line 181)
  0x000002015c2223dc: 06c5 fa10 | 9300 0000 | 00b8 000d 

  0x000002015c2223e8: ;   {runtime_call access_field_patching Runtime1 stub}
  0x000002015c2223e8: 0508 e891 

  0x000002015c2223ec: ; ImmutableOopMap {rbx=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop }
                      ;*getfield m21 {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@193 (line 181)
  0x000002015c2223ec: 366c 06e9 | c4e9 ffff 

  0x000002015c2223f4: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c2223f4: e827 f16b 

  0x000002015c2223f8: ; ImmutableOopMap {rbx=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop }
                      ;*getfield m22 {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@198 (line 181)
  0x000002015c2223f8: 06c5 fa10 | 9b00 0000 | 00b8 000d 

  0x000002015c222404: ;   {runtime_call access_field_patching Runtime1 stub}
  0x000002015c222404: 0508 e875 

  0x000002015c222408: ; ImmutableOopMap {rbx=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop }
                      ;*getfield m22 {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@198 (line 181)
  0x000002015c222408: 366c 06e9 | b0e9 ffff 

  0x000002015c222410: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c222410: e80b f16b 

  0x000002015c222414: ; ImmutableOopMap {r8=Oop [144]=Oop [200]=Oop [208]=Oop [216]=Oop }
                      ;*invokevirtual BeginDraw {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@244 (line 191)
                      ;   {metadata({method} {0x00000201705d87d0} 'BeginDraw' '()V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c222414: 0649 bac8 | 875d 7001 | 0200 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000002015c22242c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c22242c: e84f 536c 

  0x000002015c222430: ; ImmutableOopMap {r8=Oop [144]=Oop [200]=Oop [208]=Oop [216]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::BeginDraw@-1 (line 34)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@244 (line 191)
  0x000002015c222430: 06e9 ecea 

  0x000002015c222434: ;   {metadata({method} {0x00000201705d89b0} 'SetTransform' '(Lcom/sun/javafx/font/directwrite/D2D1_MATRIX_3X2_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c222434: ffff 49ba | a889 5d70 | 0102 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000002015c22244c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c22244c: ffe8 2e53 

  0x000002015c222450: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::SetTransform@-1 (line 46)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@251 (line 192)
  0x000002015c222450: 6c06 e944 

  0x000002015c222454: ;   {metadata({method} {0x00000201705d8910} 'Clear' '(Lcom/sun/javafx/font/directwrite/D2D1_COLOR_F;)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c222454: ebff ff49 | ba08 895d | 7001 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002015c22246c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c22246c: ffff e80d 

  0x000002015c222470: ; ImmutableOopMap {rsi=Oop rdi=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::Clear@-1 (line 42)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@259 (line 193)
  0x000002015c222470: 536c 06e9 | b8eb ffff 

  0x000002015c222478: ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000002015c222478: 488b d2e8 

  0x000002015c22247c: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@262 (line 194)
  0x000002015c22247c: 80fb 6b06 | e947 ecff 

  0x000002015c222484: ;   {metadata({method} {0x00000201705d9180} '<init>' '(FF)V' in 'com/sun/javafx/font/directwrite/D2D1_POINT_2F')}
  0x000002015c222484: ff49 ba78 | 915d 7001 | 0200 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000002015c22249c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c22249c: e8df 526c 

  0x000002015c2224a0: ; ImmutableOopMap {rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.D2D1_POINT_2F::<init>@-1 (line 32)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@272 (line 194)
  0x000002015c2224a0: 06e9 99ec 

  0x000002015c2224a4: ;   {metadata({method} {0x000002010047b210} '<init>' '()V' in 'java/lang/Object')}
  0x000002015c2224a4: ffff 49ba | 08b2 4700 | 0102 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x000002015c2224bc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c2224bc: ffe8 be52 

  0x000002015c2224c0: ; ImmutableOopMap {rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [224]=Oop }
                      ;*synchronization entry
                      ; - java.lang.Object::<init>@-1 (line 45)
                      ; - com.sun.javafx.font.directwrite.D2D1_POINT_2F::<init>@1 (line 32)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@272 (line 194)
  0x000002015c2224c0: 6c06 e9b7 

  0x000002015c2224c4: ;   {metadata({method} {0x00000201705d8a50} 'SetTextAntialiasMode' '(I)V' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c2224c4: ecff ff49 | ba48 8a5d | 7001 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x000002015c2224dc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c2224dc: ffff e89d 

  0x000002015c2224e0: ; ImmutableOopMap {r8=Oop [144]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::SetTextAntialiasMode@-1 (line 50)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@294 (line 197)
  0x000002015c2224e0: 526c 06e9 | 88ed ffff 

  0x000002015c2224e8: ;   {metadata({method} {0x00000201705d8870} 'EndDraw' '()I' in 'com/sun/javafx/font/directwrite/ID2D1RenderTarget')}
  0x000002015c2224e8: 49ba 6888 | 5d70 0102 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000002015c2224fc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c2224fc: ffff ffe8 

  0x000002015c222500: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.ID2D1RenderTarget::EndDraw@-1 (line 38)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@313 (line 200)
  0x000002015c222500: 7c52 6c06 | e93d eeff 

  0x000002015c222508: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c222508: ffe8 12f0 

  0x000002015c22250c: ; ImmutableOopMap {rsi=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@320 (line 201)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c22250c: 6b06 e80d 

  0x000002015c222510: ; ImmutableOopMap {rsi=Oop [144]=Oop [192]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop }
                      ;*invokevirtual Lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@414 (line 217)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c222510: f06b 06e8 

  0x000002015c222514: ; ImmutableOopMap {rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop }
                      ;*invokevirtual GetDataPointer {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@426 (line 219)
  0x000002015c222514: 08f0 6b06 

  0x000002015c222518: ;   {metadata({method} {0x00000201705d9980} 'GetDataPointer' '()[B' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002015c222518: 49ba 7899 | 5d70 0102 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000002015c22252c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c22252c: ffff ffe8 

  0x000002015c222530: ; ImmutableOopMap {rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.IWICBitmapLock::GetDataPointer@-1 (line 34)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@426 (line 219)
  0x000002015c222530: 4c52 6c06 | e92c f0ff 

  0x000002015c222538: ;   {metadata({method} {0x00000201705d9a20} 'GetStride' '()I' in 'com/sun/javafx/font/directwrite/IWICBitmapLock')}
  0x000002015c222538: ff49 ba18 | 9a5d 7001 | 0200 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000002015c222550: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c222550: e82b 526c 

  0x000002015c222554: ; ImmutableOopMap {rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.IWICBitmapLock::GetStride@-1 (line 38)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@438 (line 223)
  0x000002015c222554: 06e9 c8f0 

  0x000002015c222558: ;   {runtime_call new_type_array Runtime1 stub}
  0x000002015c222558: ffff e8a1 

  0x000002015c22255c: ; ImmutableOopMap {[144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@463 (line 227)
  0x000002015c22255c: 026c 06e9 | d4f1 ffff 

  0x000002015c222564: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c222564: e8b7 ef6b 

  0x000002015c222568: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@507 (line 231)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c222568: 06e8 b2ef 

  0x000002015c22256c: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@507 (line 231)
  0x000002015c22256c: 6b06 4889 | 3c24 4c89 

  0x000002015c222574: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002015c222574: 7424 08e8 

  0x000002015c222578: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@507 (line 231)
  0x000002015c222578: a4e6 6b06 | 4889 3424 | 4889 4424 

  0x000002015c222584: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002015c222584: 08e8 96e6 

  0x000002015c222588: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@510 (line 231)
  0x000002015c222588: 6b06 4c89 | 0c24 4c89 

  0x000002015c222590: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002015c222590: 7424 08e8 

  0x000002015c222594: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@527 (line 232)
  0x000002015c222594: 88e6 6b06 | 4889 1c24 | 4889 4424 

  0x000002015c2225a0: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002015c2225a0: 08e8 7ae6 

  0x000002015c2225a4: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@530 (line 232)
  0x000002015c2225a4: 6b06 4889 | 3c24 4c89 

  0x000002015c2225ac: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002015c2225ac: 7424 08e8 

  0x000002015c2225b0: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@547 (line 233)
  0x000002015c2225b0: 6ce6 6b06 | 4889 3424 | 4889 4424 

  0x000002015c2225bc: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002015c2225bc: 08e8 5ee6 

  0x000002015c2225c0: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@550 (line 233)
                      ;   {metadata({method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2225c0: 6b06 49ba | 78fb 4470 | 0102 0000 | 4c89 5424 | 0848 c704 | 242d 0200 

  0x000002015c2225d8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c2225d8: 00e8 a251 

  0x000002015c2225dc: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@557 (line 230)
  0x000002015c2225dc: 6c06 e969 

  0x000002015c2225e0: ;   {metadata({method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c2225e0: f2ff ff49 | ba78 fb44 | 7001 0200 | 004c 8954 | 2408 48c7 | 0424 3a02 

  0x000002015c2225f8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c2225f8: 0000 e881 

  0x000002015c2225fc: ; ImmutableOopMap {rax=Oop r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@570 (line 228)
  0x000002015c2225fc: 516c 06e9 | daf2 ffff 

  0x000002015c222604: ;   {runtime_call new_type_array Runtime1 stub}
  0x000002015c222604: e8f7 016c 

  0x000002015c222608: ; ImmutableOopMap {r14=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@581 (line 239)
  0x000002015c222608: 06e9 eef3 

  0x000002015c22260c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c22260c: ffff e80d 

  0x000002015c222610: ; ImmutableOopMap {r14=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@622 (line 243)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c222610: ef6b 06e8 

  0x000002015c222614: ; ImmutableOopMap {r14=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@622 (line 243)
  0x000002015c222614: 08ef 6b06 | 4889 1c24 | 4c89 7424 

  0x000002015c222620: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002015c222620: 08e8 fae5 

  0x000002015c222624: ; ImmutableOopMap {r14=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@622 (line 243)
  0x000002015c222624: 6b06 4889 | 3c24 4889 

  0x000002015c22262c: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002015c22262c: 4424 08e8 

  0x000002015c222630: ; ImmutableOopMap {r14=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@625 (line 243)
  0x000002015c222630: ece5 6b06 

  0x000002015c222634: ;   {metadata({method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c222634: 49ba 78fb | 4470 0102 | 0000 4c89 | 5424 0848 | c704 2478 

  0x000002015c222648: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c222648: 0200 00e8 

  0x000002015c22264c: ; ImmutableOopMap {r14=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@632 (line 242)
  0x000002015c22264c: 3051 6c06 | e937 f4ff 

  0x000002015c222654: ;   {metadata({method} {0x000002017044fb80} 'getD2DMask' '(FFZ)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c222654: ff49 ba78 | fb44 7001 | 0200 004c | 8954 2408 | 48c7 0424 | 8502 0000 

  0x000002015c22266c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c22266c: e80f 516c 

  0x000002015c222670: ; ImmutableOopMap {r14=Oop rax=Oop [144]=Oop [192]=Oop [200]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop [264]=Oop [272]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@645 (line 240)
  0x000002015c222670: 06e9 a5f4 

  0x000002015c222674: ;   {internal_word}
  0x000002015c222674: ffff 49ba | ff1d 225c | 0102 0000 | 4d89 9768 

  0x000002015c222684: ;   {runtime_call SafepointBlob}
  0x000002015c222684: 0400 00e9 | f444 5e06 

  0x000002015c22268c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c22268c: e88f ee6b 

  0x000002015c222690: ; ImmutableOopMap {rsi=Oop [144]=Oop [192]=Oop [208]=Oop [216]=Oop [240]=Oop [248]=Oop }
                      ;*invokevirtual Release {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@331 (line 205)
  0x000002015c222690: 068b 5670 | 4883 fa00 | 0f84 36f8 | ffff 4889 

  0x000002015c2226a0: ;   {runtime_call g1_pre_barrier_slow}
  0x000002015c2226a0: 1424 e8d9 | 576c 06e9 | 28f8 ffff | 8b46 7448 | 83f8 000f | 84f1 f8ff | ff48 8904 

  0x000002015c2226bc: ;   {runtime_call g1_pre_barrier_slow}
  0x000002015c2226bc: 24e8 be57 | 6c06 e9e3 

  0x000002015c2226c4: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c2226c4: f8ff ffe8 

  0x000002015c2226c8: ; ImmutableOopMap {rdx=Oop r8=Oop rdi=Oop rsi=Oop rbx=Oop rcx=Oop [144]=Oop [192]=Oop [200]=Oop [248]=Oop }
                      ;*putfield bottom {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@386 (line 212)
  0x000002015c2226c8: 54ee 6b06 

  0x000002015c2226cc: ;   {internal_word}
  0x000002015c2226cc: 49ba 3420 | 225c 0102 | 0000 4d89 | 9768 0400 

  0x000002015c2226dc: ;   {runtime_call SafepointBlob}
  0x000002015c2226dc: 00e9 9e44 

  0x000002015c2226e0: ;   {runtime_call new_type_array Runtime1 stub}
  0x000002015c2226e0: 5e06 e819 

  0x000002015c2226e4: ; ImmutableOopMap {r9=Oop r8=Oop [144]=Oop [192]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@160 (line 175)
  0x000002015c2226e4: 016c 06e9 | 24fa ffff 

  0x000002015c2226ec: ;   {internal_word}
  0x000002015c2226ec: 49ba 1821 | 225c 0102 | 0000 4d89 | 9768 0400 

  0x000002015c2226fc: ;   {runtime_call SafepointBlob}
  0x000002015c2226fc: 00e9 7e44 

  0x000002015c222700: ;   {runtime_call new_type_array Runtime1 stub}
  0x000002015c222700: 5e06 e8f9 

  0x000002015c222704: ; ImmutableOopMap {r8=Oop [144]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getD2DMask@31 (line 157)
  0x000002015c222704: 006c 06e9 | c8fa ffff 

  0x000002015c22270c: ;   {internal_word}
  0x000002015c22270c: 49ba dc21 | 225c 0102 | 0000 4d89 | 9768 0400 

  0x000002015c22271c: ;   {runtime_call SafepointBlob}
  0x000002015c22271c: 00e9 5e44 | 5e06 498b | 8700 0500 | 0049 c787 | 0005 0000 | 0000 0000 | 49c7 8708 | 0500 0000 
  0x000002015c22273c: 0000 0048 | 81c4 6001 

  0x000002015c222744: ;   {runtime_call unwind_exception Runtime1 stub}
  0x000002015c222744: 0000 5de9 | b4de 6b06 | f4f4 f4f4 
[Stub Code]
  0x000002015c222750: ;   {no_reloc}
  0x000002015c222750: 0f1f 4400 

  0x000002015c222754: ;   {static_stub}
  0x000002015c222754: 0048 bb00 | 0000 0000 

  0x000002015c22275c: ;   {runtime_call}
  0x000002015c22275c: 0000 00e9 | fbff ffff 

  0x000002015c222764: ;   {static_stub}
  0x000002015c222764: 9048 bb00 | 0000 0000 

  0x000002015c22276c: ;   {runtime_call}
  0x000002015c22276c: 0000 00e9 | fbff ffff 

  0x000002015c222774: ;   {static_stub}
  0x000002015c222774: 9048 bb00 | 0000 0000 

  0x000002015c22277c: ;   {runtime_call}
  0x000002015c22277c: 0000 00e9 | fbff ffff 

  0x000002015c222784: ;   {static_stub}
  0x000002015c222784: 9048 bb00 | 0000 0000 

  0x000002015c22278c: ;   {runtime_call}
  0x000002015c22278c: 0000 00e9 | fbff ffff 

  0x000002015c222794: ;   {static_stub}
  0x000002015c222794: 9048 bb00 | 0000 0000 

  0x000002015c22279c: ;   {runtime_call}
  0x000002015c22279c: 0000 00e9 | fbff ffff 

  0x000002015c2227a4: ;   {static_stub}
  0x000002015c2227a4: 9048 bb00 | 0000 0000 

  0x000002015c2227ac: ;   {runtime_call}
  0x000002015c2227ac: 0000 00e9 | fbff ffff 

  0x000002015c2227b4: ;   {static_stub}
  0x000002015c2227b4: 9048 bb00 | 0000 0000 

  0x000002015c2227bc: ;   {runtime_call}
  0x000002015c2227bc: 0000 00e9 | fbff ffff 

  0x000002015c2227c4: ;   {static_stub}
  0x000002015c2227c4: 9048 bb00 | 0000 0000 

  0x000002015c2227cc: ;   {runtime_call}
  0x000002015c2227cc: 0000 00e9 | fbff ffff 

  0x000002015c2227d4: ;   {static_stub}
  0x000002015c2227d4: 9048 bba8 | 8b5d 7001 

  0x000002015c2227dc: ;   {runtime_call I2C/C2I adapters}
  0x000002015c2227dc: 0200 00e9 | 2327 5e06 

  0x000002015c2227e4: ;   {static_stub}
  0x000002015c2227e4: 9048 bbf0 | 8a5d 7001 

  0x000002015c2227ec: ;   {runtime_call I2C/C2I adapters}
  0x000002015c2227ec: 0200 00e9 | 1e68 5c06 

  0x000002015c2227f4: ;   {static_stub}
  0x000002015c2227f4: 9048 bb00 | 0000 0000 

  0x000002015c2227fc: ;   {runtime_call}
  0x000002015c2227fc: 0000 00e9 | fbff ffff 

  0x000002015c222804: ;   {static_stub}
  0x000002015c222804: 9048 bbc8 | 755d 7001 

  0x000002015c22280c: ;   {runtime_call I2C/C2I adapters}
  0x000002015c22280c: 0200 00e9 | 805e 6006 

  0x000002015c222814: ;   {static_stub}
  0x000002015c222814: 9048 bb00 | 0000 0000 

  0x000002015c22281c: ;   {runtime_call}
  0x000002015c22281c: 0000 00e9 | fbff ffff 

  0x000002015c222824: ;   {static_stub}
  0x000002015c222824: 9048 bb00 | 0000 0000 

  0x000002015c22282c: ;   {runtime_call}
  0x000002015c22282c: 0000 00e9 | fbff ffff 

  0x000002015c222834: ;   {static_stub}
  0x000002015c222834: 9048 bb00 | 0000 0000 

  0x000002015c22283c: ;   {runtime_call}
  0x000002015c22283c: 0000 00e9 | fbff ffff 

  0x000002015c222844: ;   {static_stub}
  0x000002015c222844: 9048 bb00 | 0000 0000 

  0x000002015c22284c: ;   {runtime_call}
  0x000002015c22284c: 0000 00e9 | fbff ffff 

  0x000002015c222854: ;   {static_stub}
  0x000002015c222854: 9048 bb00 | 0000 0000 

  0x000002015c22285c: ;   {runtime_call}
  0x000002015c22285c: 0000 00e9 | fbff ffff 

  0x000002015c222864: ;   {static_stub}
  0x000002015c222864: 48bb a895 | 896f 0102 

  0x000002015c22286c: ;   {runtime_call I2C/C2I adapters}
  0x000002015c22286c: 0000 e990 

  0x000002015c222870: ;   {static_stub}
  0x000002015c222870: 285c 0648 | bb48 9689 | 6f01 0200 

  0x000002015c22287c: ;   {runtime_call I2C/C2I adapters}
  0x000002015c22287c: 00e9 8128 

  0x000002015c222880: ;   {static_stub}
  0x000002015c222880: 5c06 48bb | 0000 0000 | 0000 0000 

  0x000002015c22288c: ;   {runtime_call}
  0x000002015c22288c: e9fb ffff 

  0x000002015c222890: ;   {static_stub}
  0x000002015c222890: ff48 bb88 | 9789 6f01 

  0x000002015c222898: ;   {runtime_call I2C/C2I adapters}
  0x000002015c222898: 0200 00e9 | 6328 5c06 

  0x000002015c2228a0: ;   {static_stub}
  0x000002015c2228a0: 48bb 089a | 896f 0102 

  0x000002015c2228a8: ;   {runtime_call I2C/C2I adapters}
  0x000002015c2228a8: 0000 e958 

  0x000002015c2228ac: ;   {static_stub}
  0x000002015c2228ac: cf60 0648 | bbc8 9889 | 6f01 0200 

  0x000002015c2228b8: ;   {runtime_call I2C/C2I adapters}
  0x000002015c2228b8: 00e9 49cf 

  0x000002015c2228bc: ;   {static_stub}
  0x000002015c2228bc: 6006 48bb | 6899 896f | 0102 0000 

  0x000002015c2228c8: ;   {runtime_call I2C/C2I adapters}
  0x000002015c2228c8: e93a fa5b 

  0x000002015c2228cc: ;   {static_stub}
  0x000002015c2228cc: 0648 bb28 | 9889 6f01 

  0x000002015c2228d4: ;   {runtime_call I2C/C2I adapters}
  0x000002015c2228d4: 0200 00e9 | 2728 5c06 
[Exception Handler]
  0x000002015c2228dc: ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000002015c2228dc: e81f 126c 

  0x000002015c2228e0: ;   {external_word}
  0x000002015c2228e0: 0648 b9e0 | 2798 b8fb | 7f00 0048 

  0x000002015c2228ec: ;   {runtime_call}
  0x000002015c2228ec: 83e4 f048 | b8e0 0f60 | b8fb 7f00 | 00ff d0f4 
[Deopt Handler Code]
  0x000002015c2228fc: ;   {section_word}
  0x000002015c2228fc: 49ba fc28 | 225c 0102 | 0000 4152 

  0x000002015c222908: ;   {runtime_call DeoptimizationBlob}
  0x000002015c222908: e913 575e | 06f4 f4f4 
[/MachCode]


Compiled method (c1)  354302 7089       3       com.sun.javafx.font.directwrite.DWGlyph::getPixelData (129 bytes)
 total in heap  [0x000002015c161890,0x000002015c1626d8] = 3656
 relocation     [0x000002015c1619f0,0x000002015c161ac0] = 208
 constants      [0x000002015c161ac0,0x000002015c161ae0] = 32
 main code      [0x000002015c161ae0,0x000002015c162408] = 2344
 stub code      [0x000002015c162408,0x000002015c162460] = 88
 oops           [0x000002015c162460,0x000002015c162468] = 8
 metadata       [0x000002015c162468,0x000002015c162490] = 40
 scopes data    [0x000002015c162490,0x000002015c162538] = 168
 scopes pcs     [0x000002015c162538,0x000002015c162678] = 320
 dependencies   [0x000002015c162678,0x000002015c162688] = 16
 nul chk table  [0x000002015c162688,0x000002015c1626d8] = 80


[Constant Pool]
             Address          hex4                    hex8      
  0x000002015c161ac0:   0x3f28f5c3      0x000000003f28f5c3      
  0x000002015c161ac4:   0x00000000                              
  0x000002015c161ac8:   0x3ea8f5c3      0x000000003ea8f5c3      
  0x000002015c161acc:   0x00000000                              
  0x000002015c161ad0:   0x3ea8f5c3      0x3f28f5c33ea8f5c3      
  0x000002015c161ad4:   0x3f28f5c3                              
  0x000002015c161ad8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000002015c161adc:   0xf4f4f4f4                              

[MachCode]
[Entry Point]
  # {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph'
  # this:     rdx:rdx   = 'com/sun/javafx/font/directwrite/DWGlyph'
  # parm0:    r8        = int
  #           [sp+0xa0]  (sp of caller)
  0x000002015c161ae0: ;   {no_reloc}
  0x000002015c161ae0: 448b 5208 | 49bb 0000 | 0000 0102 | 0000 4d03 | d34c 3bd0 

  0x000002015c161af4: ;   {runtime_call ic_miss_stub}
  0x000002015c161af4: 0f85 86ce | 6906 660f | 1f44 0000 
[Verified Entry Point]
  0x000002015c161b00: 8984 2400 | 80ff ff55 | 4881 ec90 | 0000 0090 | 4181 7f20 | 0500 0000 

  0x000002015c161b18: ;   {runtime_call StubRoutines (final stubs)}
  0x000002015c161b18: 7405 e861 

  0x000002015c161b1c: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161b1c: d26a 0648 | bed8 b45b | 7001 0200 | 008b becc | 0000 0083 | c702 89be | cc00 0000 | 81e7 fe07 
  0x000002015c161b3c: 0000 83ff | 000f 8429 | 0700 008b | 7228 443b | 460c 0f83 | 4707 0000 | 4963 f88b | 7cbe 1048 
  0x000002015c161b5c: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161b5c: 83ff 0048 | bbd8 b45b | 7001 0200 | 0048 b810 | 0100 0000 | 0000 000f | 850a 0000 | 0048 b820 
  0x000002015c161b7c: 0100 0000 | 0000 0048 | 8b0c 0348 | 8d49 0148 | 890c 030f | 8584 0600 | 0041 83f8 

  0x000002015c161b98: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161b98: 0648 bbd8 | b45b 7001 | 0200 0048 | b830 0100 | 0000 0000 | 000f 8c0a | 0000 0048 | b840 0100 
  0x000002015c161bb8: 0000 0000 | 0048 8b0c | 0348 8d49 | 0148 890c | 030f 8c23 | 0000 0049 | 8bd8 83eb 

  0x000002015c161bd4: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161bd4: 0648 b8d8 | b45b 7001 | 0200 00ff | 8050 0100 

  0x000002015c161be4: ;   {section_word}
  0x000002015c161be4: 00c5 fa10 | 15d3 feff | ffe9 5500 | 0000 4183 

  0x000002015c161bf4: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161bf4: f803 48bb | d8b4 5b70 | 0102 0000 | 48b8 7801 | 0000 0000 | 0000 0f8d | 0a00 0000 | 48b8 6801 
  0x000002015c161c14: 0000 0000 | 0000 488b | 0c03 488d | 4901 4889 | 0c03 498b | d80f 8d0d 

  0x000002015c161c2c: ;   {section_word}
  0x000002015c161c2c: 0000 00c5 | fa10 158d | feff ffe9 | 0b00 0000 

  0x000002015c161c3c: ;   {section_word}
  0x000002015c161c3c: 83eb 03c5 | fa10 1581 | feff ff83 

  0x000002015c161c48: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161c48: fb01 48b8 | d8b4 5b70 | 0102 0000 | 48b9 9801 | 0000 0000 | 0000 0f84 | 0a00 0000 | 48b9 8801 
  0x000002015c161c68: 0000 0000 | 0000 4c8b | 0c08 4d8d | 4901 4c89 | 0c08 0f84 | 0d00 0000 

  0x000002015c161c80: ;   {section_word}
  0x000002015c161c80: c5fa 1005 | 44fe ffff | e908 0000 

  0x000002015c161c8c: ;   {section_word}
  0x000002015c161c8c: 00c5 fa10 | 053b feff | ff83 fb02 

  0x000002015c161c98: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161c98: 48b8 d8b4 | 5b70 0102 | 0000 48b9 | a801 0000 | 0000 0000 | 0f85 0a00 | 0000 48b9 | b801 0000 
  0x000002015c161cb8: 0000 0000 | 4c8b 0c08 | 4d8d 4901 | 4c89 0c08 | 0f85 0800 

  0x000002015c161ccc: ;   {section_word}
  0x000002015c161ccc: 0000 c5fa | 1005 fefd | ffff 488b 

  0x000002015c161cd8: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161cd8: c248 b9d8 | b45b 7001 | 0200 0048 | 8381 e001 

  0x000002015c161ce8: ;   {metadata(method data for {method} {0x0000020170450a08} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161ce8: 0000 0148 | b8a8 c05b | 7001 0200 | 008b 88cc | 0000 0083 | c102 8988 | cc00 0000 | 81e1 feff 
  0x000002015c161d08: 1f00 83f9 | 000f 8496 | 0500 008b | 4218 483b | 0048 8bc8 

  0x000002015c161d1c: ;   {metadata(method data for {method} {0x0000020170450a08} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161d1c: 49b9 a8c0 | 5b70 0102 | 0000 8b49 | 0849 ba00 | 0000 0001 | 0200 0049 | 03ca 493b | 8920 0100 
  0x000002015c161d3c: 0075 0d49 | 8381 2801 | 0000 01e9 | 6000 0000 | 493b 8930 | 0100 0075 | 0d49 8381 | 3801 0000 
  0x000002015c161d5c: 01e9 4a00 | 0000 4983 | b920 0100 | 0000 7517 | 4989 8920 | 0100 0049 | c781 2801 | 0000 0100 
  0x000002015c161d7c: 0000 e929 | 0000 0049 | 83b9 3001 | 0000 0075 | 1749 8989 | 3001 0000 | 49c7 8138 | 0100 0001 
  0x000002015c161d9c: 0000 00e9 | 0800 0000 | 4983 8110 | 0100 0001 | 8b40 1083 

  0x000002015c161db0: ;   {metadata(method data for {method} {0x0000020170450a08} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161db0: f801 48b8 | a8c0 5b70 | 0102 0000 | 48b9 4801 | 0000 0000 | 0000 0f85 | 0a00 0000 | 48b9 5801 
  0x000002015c161dd0: 0000 0000 | 0000 4c8b | 0c08 4d8d | 4901 4c89 | 0c08 0f85 | 1a00 0000 

  0x000002015c161de8: ;   {metadata(method data for {method} {0x0000020170450a08} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161de8: 48b8 a8c0 | 5b70 0102 | 0000 ff80 | 6801 0000 | b801 0000 | 00e9 0500 | 0000 b800 | 0000 0083 
  0x000002015c161e08: e001 83f8 

  0x000002015c161e0c: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161e0c: 0048 b8d8 | b45b 7001 | 0200 0048 | b900 0200 | 0000 0000 | 000f 840a | 0000 0048 | b910 0200 
  0x000002015c161e2c: 0000 0000 | 004c 8b0c | 084d 8d49 | 014c 890c | 080f 8477 | 0000 0089 | 5c24 7448 | 897c 2478 
  0x000002015c161e4c: 4889 7424 | 6844 8944 | 2470 488b 

  0x000002015c161e58: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161e58: c248 b9d8 | b45b 7001 | 0200 0048 | 8381 3802 | 0000 01c5 | f828 d8c5 | f828 c3c5 | f828 ca48 
  0x000002015c161e78: 8bc2 488b | d048 8944 | 2460 c5fa | 1194 2484 | 0000 00c5 | fa11 9c24 | 8000 0000 

  0x000002015c161e94: ;   {optimized virtual_call}
  0x000002015c161e94: 6666 90e8 

  0x000002015c161e98: ; ImmutableOopMap {[96]=Oop [104]=Oop [120]=Oop }
                      ;*invokevirtual getLCDMask {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@87 (line 352)
  0x000002015c161e98: 7105 0000 

  0x000002015c161e9c: ;   {other}
  0x000002015c161e9c: 0f1f 8400 | 0c06 0000 

  0x000002015c161ea4: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161ea4: 49b8 d8b4 | 5b70 0102 | 0000 41ff | 8058 0200 | 00e9 7200 | 0000 c5fa | 1184 2480 | 0000 0089 
  0x000002015c161ec4: 5c24 74c5 | fa11 9424 | 8400 0000 | 4889 7c24 | 7848 8974 | 2468 4489 | 4424 7048 | 8954 2460 
  0x000002015c161ee4: 488b 5424 

  0x000002015c161ee8: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161ee8: 6049 b8d8 | b45b 7001 | 0200 0049 | 8380 8802 | 0000 01c5 | fa10 8424 | 8000 0000 | c5fa 108c 
  0x000002015c161f08: 2484 0000 | 0041 b800 | 0000 0048 | 8b54 2460 | 0f1f 8000 

  0x000002015c161f1c: ;   {optimized virtual_call}
  0x000002015c161f1c: 0000 00e8 

  0x000002015c161f20: ; ImmutableOopMap {[96]=Oop [104]=Oop [120]=Oop }
                      ;*invokevirtual getD2DMask {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@98 (line 353)
  0x000002015c161f20: 1ce4 0b00 

  0x000002015c161f24: ;   {other}
  0x000002015c161f24: 0f1f 8400 | 9406 0001 | c5fa 1084 | 2480 0000 | 008b 5c24 | 74c5 fa10 | 9424 8400 | 0000 488b 
  0x000002015c161f44: 7424 6844 | 8b44 2470 | 488b 5424 | 6048 83f8 

  0x000002015c161f54: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161f54: 0075 1648 | b9d8 b45b | 7001 0200 | 0080 89a1 | 0200 0001 | e9fb 0000 | 008b 7e08 | 49ba 0000 
  0x000002015c161f74: 0000 0102 | 0000 4903 | fa8b 4808 | 49ba 0000 | 0000 0102 | 0000 4903 | ca48 8bbf | d000 0000 
  0x000002015c161f94: 483b cf0f | 842a 0000 | 0044 8b4f | 144a 3b3c | 090f 841c | 0000 0041 | 83f9 200f | 859c 0000 
  0x000002015c161fb4: ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000002015c161fb4: 0051 57e8 | 4427 7806 | 595f 83ff | 000f 848a 

  0x000002015c161fc4: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c161fc4: 0000 0048 | b9d8 b45b | 7001 0200 | 008b 7808 | 49ba 0000 | 0000 0102 | 0000 4903 | fa48 3bb9 
  0x000002015c161fe4: b802 0000 | 750d 4883 | 81c0 0200 | 0001 e971 | 0000 0048 | 3bb9 c802 | 0000 750d | 4883 81d0 
  0x000002015c162004: 0200 0001 | e95b 0000 | 0048 83b9 | b802 0000 | 0075 1748 | 89b9 b802 | 0000 48c7 | 81c0 0200 
  0x000002015c162024: 0001 0000 | 00e9 3a00 | 0000 4883 | b9c8 0200 | 0000 7517 | 4889 b9c8 | 0200 0048 | c781 d002 
  0x000002015c162044: 0000 0100 | 0000 e919 | 0000 00eb 

  0x000002015c162050: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c162050: 1748 b9d8 | b45b 7001 | 0200 0048 | 83a9 a802 | 0000 01e9 | 6c02 0000 | 4963 f848 | 8d74 be10 
  0x000002015c162070: 410f be7f | 4083 ff00 | 0f85 5f02 | 0000 4c8b | d044 8916 | 488b fe48 | 33f8 48c1 | ef14 4883 
  0x000002015c162090: ff00 0f85 | 5f02 0000 | 8b72 2c8b | 7a24 443b | 460c 0f83 | 7102 0000 | 4883 ff00 

  0x000002015c1620ac: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c1620ac: 7517 49b9 | d8b4 5b70 | 0102 0000 | 4180 89d9 | 0200 0001 | e9fe 0000 | 008b 4e08 | 49ba 0000 
  0x000002015c1620cc: 0000 0102 | 0000 4903 | ca44 8b4f | 0849 ba00 | 0000 0001 | 0200 004d | 03ca 488b | 89d0 0000 
  0x000002015c1620ec: 004c 3bc9 | 0f84 2c00 | 0000 448b | 5914 4b3b | 0c19 0f84 | 1e00 0000 | 4183 fb20 | 0f85 9e00 
  0x000002015c16210c: 0000 4151 

  0x000002015c162110: ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000002015c162110: 51e8 ea25 | 7806 4159 | 5983 f900 | 0f84 8a00 

  0x000002015c162120: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c162120: 0000 49b9 | d8b4 5b70 | 0102 0000 | 8b4f 0849 | ba00 0000 | 0001 0200 | 0049 03ca | 493b 89f0 
  0x000002015c162140: 0200 0075 | 0d49 8381 | f802 0000 | 01e9 7100 | 0000 493b | 8900 0300 | 0075 0d49 | 8381 0803 
  0x000002015c162160: 0000 01e9 | 5b00 0000 | 4983 b9f0 | 0200 0000 | 7517 4989 | 89f0 0200 | 0049 c781 | f802 0000 
  0x000002015c162180: 0100 0000 | e93a 0000 | 0049 83b9 | 0003 0000 | 0075 1749 | 8989 0003 | 0000 49c7 | 8108 0300 
  0x000002015c1621a0: 0001 0000 | 00e9 1900 | 0000 eb17 

  0x000002015c1621ac: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c1621ac: 49b9 d8b4 | 5b70 0102 | 0000 4983 | a9e0 0200 | 0001 e969 | 0100 004d | 63c0 4a8d | 7486 1041 
  0x000002015c1621cc: 0fbe 5f40 | 83fb 000f | 855c 0100 | 004c 8bd7 | 4489 1648 | 8bde 4833 | df48 c1eb | 1448 83fb 
  0x000002015c1621ec: 000f 855c 

  0x000002015c1621f0: ;   {metadata(method data for {method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c1621f0: 0100 0048 | bed8 b45b | 7001 0200 | 00ff 8618 | 0300 0048 | 81c4 9000 

  0x000002015c162208: ;   {poll_return}
  0x000002015c162208: 0000 5d49 | 3ba7 5004 | 0000 0f87 | 4f01 0000 | c38b 422c 

  0x000002015c16221c: ; implicit exception: dispatches to 0x000002015c16237d
  0x000002015c16221c: 443b 400c | 0f83 6101 | 0000 4d63 | c042 8b44 | 8010 410f | be77 4083 | fe00 0f85 | 5901 0000 
  0x000002015c16223c: 4c8b d044 | 8952 2448 | 8bf2 4833 | f048 c1ee | 1448 83fe | 000f 8559 | 0100 0048 | 8bc7 4881 
  0x000002015c16225c: c490 0000 

  0x000002015c162260: ;   {poll_return}
  0x000002015c162260: 005d 493b | a750 0400 | 000f 8759 | 0100 00c3 

  0x000002015c162270: ;   {metadata({method} {0x0000020170450518} 'getPixelData' '(I)[B' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c162270: 49ba 1005 | 4570 0102 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x000002015c162284: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c162284: ffff ffe8 

  0x000002015c162288: ; ImmutableOopMap {rdx=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@-1 (line 335)
  0x000002015c162288: f454 7806 | e9b6 f8ff 

  0x000002015c162290: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c162290: ffe8 8af2 

  0x000002015c162294: ; ImmutableOopMap {rdx=Oop rsi=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@5 (line 335)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c162294: 7706 e885 

  0x000002015c162298: ; ImmutableOopMap {rdx=Oop rsi=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@5 (line 335)
  0x000002015c162298: f277 064c | 8904 2448 | 8974 2408 

  0x000002015c1622a4: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002015c1622a4: e877 e977 

  0x000002015c1622a8: ; ImmutableOopMap {rdx=Oop rsi=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@5 (line 335)
                      ;   {metadata({method} {0x0000020170450a08} 'isLCDGlyph' '()Z' in 'com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002015c1622a8: 0649 ba00 | 0a45 7001 | 0200 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x000002015c1622c0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x000002015c1622c0: e8bb 5478 

  0x000002015c1622c4: ; ImmutableOopMap {rdx=Oop rsi=Oop rdi=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.font.directwrite.DWGlyph::isLCDGlyph@-1 (line 399)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@77 (line 352)
  0x000002015c1622c4: 06e9 49fa 

  0x000002015c1622c8: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c1622c8: ffff e851 

  0x000002015c1622cc: ; ImmutableOopMap {rdx=Oop rsi=Oop rdi=Oop rax=Oop }
                      ;*invokevirtual getAAMode {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::isLCDGlyph@4 (line 399)
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@77 (line 352)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c1622cc: f277 06e8 

  0x000002015c1622d0: ; ImmutableOopMap {rax=Oop rdx=Oop rsi=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getPixelData@103 (line 353)
  0x000002015c1622d0: 4cf2 7706 | 4889 0424 

  0x000002015c1622d8: ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000002015c1622d8: e843 1b78 

  0x000002015c1622dc: ; ImmutableOopMap {rax=Oop rdx=Oop rsi=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getPixelData@103 (line 353)
  0x000002015c1622dc: 068b 3e48 | 83ff 000f | 8495 fdff | ff48 893c 

  0x000002015c1622ec: ;   {runtime_call g1_pre_barrier_slow}
  0x000002015c1622ec: 24e8 8e5b | 7806 e987 | fdff ff48 | 83f8 000f | 8497 fdff | ff48 8934 

  0x000002015c162304: ;   {runtime_call g1_post_barrier_slow}
  0x000002015c162304: 24e8 f65e | 7806 e989 

  0x000002015c16230c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c16230c: fdff ffe8 

  0x000002015c162310: ; ImmutableOopMap {rax=Oop rdx=Oop rsi=Oop rdi=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getPixelData@113 (line 354)
  0x000002015c162310: 0cf2 7706 

  0x000002015c162314: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c162314: e807 f277 

  0x000002015c162318: ; ImmutableOopMap {rax=Oop rdx=Oop rsi=Oop rdi=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getPixelData@113 (line 354)
  0x000002015c162318: 064c 8904 | 2448 8974 

  0x000002015c162320: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002015c162320: 2408 e8f9 

  0x000002015c162324: ; ImmutableOopMap {rax=Oop rdx=Oop rsi=Oop rdi=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getPixelData@113 (line 354)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c162324: e877 06e8 

  0x000002015c162328: ; ImmutableOopMap {rax=Oop rdx=Oop rsi=Oop rdi=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getPixelData@113 (line 354)
  0x000002015c162328: f4f1 7706 | 4889 3c24 

  0x000002015c162330: ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000002015c162330: e8eb 1a78 

  0x000002015c162334: ; ImmutableOopMap {rax=Oop rdx=Oop rsi=Oop rdi=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getPixelData@113 (line 354)
  0x000002015c162334: 068b 1e48 | 83fb 000f | 8498 feff | ff48 891c 

  0x000002015c162344: ;   {runtime_call g1_pre_barrier_slow}
  0x000002015c162344: 24e8 365b | 7806 e98a | feff ff48 | 83ff 000f | 849a feff | ff48 8934 

  0x000002015c16235c: ;   {runtime_call g1_post_barrier_slow}
  0x000002015c16235c: 24e8 9e5e | 7806 e98c 

  0x000002015c162364: ;   {internal_word}
  0x000002015c162364: feff ff49 | ba0b 2216 | 5c01 0200 | 004d 8997 | 6804 0000 

  0x000002015c162378: ;   {runtime_call SafepointBlob}
  0x000002015c162378: e903 486a 

  0x000002015c16237c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c16237c: 06e8 9ef1 

  0x000002015c162380: ; ImmutableOopMap {rdi=Oop rdx=Oop rax=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@123 (line 356)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000002015c162380: 7706 e899 

  0x000002015c162384: ; ImmutableOopMap {rdi=Oop rdx=Oop rax=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@123 (line 356)
  0x000002015c162384: f177 064c | 8904 2448 | 8944 2408 

  0x000002015c162390: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000002015c162390: e88b e877 

  0x000002015c162394: ; ImmutableOopMap {rdi=Oop rdx=Oop rax=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelData@123 (line 356)
  0x000002015c162394: 068b 7224 | 4883 fe00 | 0f84 9afe | ffff 4889 

  0x000002015c1623a4: ;   {runtime_call g1_pre_barrier_slow}
  0x000002015c1623a4: 3424 e8d5 | 5a78 06e9 | 8cfe ffff | 4883 f800 | 0f84 9dfe | ffff 4889 

  0x000002015c1623bc: ;   {runtime_call g1_post_barrier_slow}
  0x000002015c1623bc: 1424 e83d | 5e78 06e9 | 8ffe ffff 

  0x000002015c1623c8: ;   {internal_word}
  0x000002015c1623c8: 49ba 6222 | 165c 0102 | 0000 4d89 | 9768 0400 

  0x000002015c1623d8: ;   {runtime_call SafepointBlob}
  0x000002015c1623d8: 00e9 a247 | 6a06 498b | 8700 0500 | 0049 c787 | 0005 0000 | 0000 0000 | 49c7 8708 | 0500 0000 
  0x000002015c1623f8: 0000 0048 | 81c4 9000 

  0x000002015c162400: ;   {runtime_call unwind_exception Runtime1 stub}
  0x000002015c162400: 0000 5de9 | f8e1 7706 
[Stub Code]
  0x000002015c162408: ;   {no_reloc}
  0x000002015c162408: 0f1f 4400 

  0x000002015c16240c: ;   {static_stub}
  0x000002015c16240c: 0048 bbc8 | f744 7001 

  0x000002015c162414: ;   {runtime_call I2C/C2I adapters}
  0x000002015c162414: 0200 00e9 | f13b 7e06 

  0x000002015c16241c: ;   {static_stub}
  0x000002015c16241c: 9048 bb78 | fb44 7001 

  0x000002015c162424: ;   {runtime_call I2C/C2I adapters}
  0x000002015c162424: 0200 00e9 | 659f 8606 
[Exception Handler]
  0x000002015c16242c: ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000002015c16242c: e8cf 1678 

  0x000002015c162430: ;   {external_word}
  0x000002015c162430: 0648 b9e0 | 2798 b8fb | 7f00 0048 

  0x000002015c16243c: ;   {runtime_call}
  0x000002015c16243c: 83e4 f048 | b8e0 0f60 | b8fb 7f00 | 00ff d0f4 
[Deopt Handler Code]
  0x000002015c16244c: ;   {section_word}
  0x000002015c16244c: 49ba 4c24 | 165c 0102 | 0000 4152 

  0x000002015c162458: ;   {runtime_call DeoptimizationBlob}
  0x000002015c162458: e9c3 5b6a | 06f4 f4f4 
[/MachCode]


Compiled method (c2)  354313 7509   !   4       com.sun.prism.impl.GlyphCache::getCachedGlyph (494 bytes)
 total in heap  [0x000002016316a010,0x000002016316d670] = 13920
 relocation     [0x000002016316a170,0x000002016316a3a0] = 560
 main code      [0x000002016316a3a0,0x000002016316bc00] = 6240
 stub code      [0x000002016316bc00,0x000002016316bd40] = 320
 oops           [0x000002016316bd40,0x000002016316bd48] = 8
 metadata       [0x000002016316bd48,0x000002016316bf58] = 528
 scopes data    [0x000002016316bf58,0x000002016316ced8] = 3968
 scopes pcs     [0x000002016316ced8,0x000002016316d2a8] = 976
 dependencies   [0x000002016316d2a8,0x000002016316d348] = 160
 handler table  [0x000002016316d348,0x000002016316d5e8] = 672
 nul chk table  [0x000002016316d5e8,0x000002016316d670] = 136

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x0000020170515010} 'getCachedGlyph' '(II)Lcom/sun/prism/impl/GlyphCache$GlyphData;' in 'com/sun/prism/impl/GlyphCache'
  # this:     rdx:rdx   = 'com/sun/prism/impl/GlyphCache'
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0xc0]  (sp of caller)
  0x000002016316a3a0: 448b 5208 | 49bb 0000 | 0000 0102 | 0000 4d03 | d349 3bc2 

  0x000002016316a3b4: ;   {runtime_call ic_miss_stub}
  0x000002016316a3b4: 0f85 c645 | 69ff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x000002016316a3c0: 8984 2400 | 80ff ff55 | 4881 ecb0 | 0000 0090 | 4181 7f20 | 0500 0000 | 0f85 1418 | 0000 4489 
  0x000002016316a3e0: 4c24 6c44 | 8944 2460 | 4c8b f244 | 8b5a 1845 | 8bd0 41c1 | ea05 458b | c141 c1e0 | 1b45 0bd0 
  0x000002016316a400: 448b 6c24 | 6041 83e5 | 1f41 8db2 | 8000 0000 | 4d63 c281 | fe00 0100 | 000f 83bc 

  0x000002016316a41c: ;   {oop(a 'java/lang/Integer'[256] {0x00000000ffb79c48})}
  0x000002016316a41c: 0800 0049 | b948 9cb7 | ff00 0000 | 0047 8b8c | 8110 0200 | 004c 894c | 2440 458b 

  0x000002016316a438: ;   {metadata('java/util/HashMap')}
  0x000002016316a438: 4b08 4181 | f9b0 cb08 | 000f 85e7 | 0e00 0045 | 8b4e 1849 | 8beb 8b5d | 2485 db0f | 84d4 0100 
  0x000002016316a458: 008b 7b0c | 85ff 0f86 | 140f 0000 | 8d57 ff41 | 8bca c1e9 | 1044 8bd9 | 4533 da41 | 23d3 8b4c 
  0x000002016316a478: 9310 85c9 | 0f84 ab01 | 0000 8b51 | 0c48 8bc1 | 413b d375 | 63c4 c179 | 6edb c5f9 | 6ec7 c5f9 
  0x000002016316a498: 6ecb 488b | fd4c 8944 | 2478 8974 | 2474 4489 | 6c24 7044 | 8b59 104d | 8bc3 488b | 5c24 404c 
  0x000002016316a4b8: 3bc3 0f84 | 1101 0000 

  0x000002016316a4c0: ; implicit exception: dispatches to 0x000002016316ba04
  0x000002016316a4c0: 458b 4308 

  0x000002016316a4c4: ;   {metadata('java/lang/Integer')}
  0x000002016316a4c4: 4181 f888 | 5c02 000f | 85bb 1100 | 0045 8b43 | 0c45 3bd0 | 0f84 f300 | 0000 4c8b | 4424 78c5 
  0x000002016316a4e4: f97e cbc5 | f97e c7c4 | c179 7edb | 8b51 1885 | d20f 8432 | 0100 0089 | 9424 9000 | 0000 4489 
  0x000002016316a504: 5c24 6889 | 7c24 6489 | 9c24 8c00 | 0000 4889 | 6c24 384c | 8944 2478 | 8974 2474 | 4489 6c24 
  0x000002016316a524: 7044 8994 | 2488 0000 | 004c 89b4 | 2480 0000 | 0044 8b59 | 084c 8bd3 | 4c89 5424 | 304c 8bd2 
  0x000002016316a544: 4c89 5424 

  0x000002016316a548: ;   {metadata('java/util/HashMap$TreeNode')}
  0x000002016316a548: 4841 81fb | 6027 1a00 | 0f85 4f08 | 0000 448b | 5828 4585 | db0f 84ab | 0800 0048 | 8944 2458 
  0x000002016316a568: 488b d048 | 8944 2450 | 448b 5c24 | 6844 895c 

  0x000002016316a578: ;   {optimized virtual_call}
  0x000002016316a578: 2424 90e8 

  0x000002016316a57c: ; ImmutableOopMap {[48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [128]=Oop [140]=NarrowOop [144]=NarrowOop }
                      ;*invokevirtual root {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap$TreeNode::getTreeNode@8 (line 2048)
                      ; - java.util.HashMap::getNode@95 (line 582)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x000002016316a57c: 0049 69ff 

  0x000002016316a580: ;   {other}
  0x000002016316a580: 0f1f 8400 | 7005 0000 | 4885 c00f | 84c7 0f00 | 0048 8bd0 | 448b 5424 | 6844 8954 | 2424 458b 
  0x000002016316a5a0: c24c 8b4c | 2440 33ff 

  0x000002016316a5a8: ;   {optimized virtual_call}
  0x000002016316a5a8: 6666 90e8 

  0x000002016316a5ac: ; ImmutableOopMap {[48]=Oop [56]=Oop [64]=Oop [72]=Oop [88]=Oop [128]=Oop }
                      ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.HashMap$TreeNode::getTreeNode@18 (line 2048)
                      ; - java.util.HashMap::getNode@95 (line 582)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x000002016316a5ac: d048 69ff 

  0x000002016316a5b0: ;   {other}
  0x000002016316a5b0: 0f1f 8400 | a005 0001 | 4c8b b424 | 8000 0000 | 458b 4e18 | 4885 c074 | 4e44 8b94 | 2488 0000 
  0x000002016316a5d0: 008b 4814 | 85c9 0f84 | a309 0000 | 448b 5908 

  0x000002016316a5e0: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData'[])}
  0x000002016316a5e0: 4181 fb10 | 1e38 010f | 8581 1000 | 004c 8bd9 | 458b 4b0c | 8b6c 2470 | 413b e90f | 8353 0d00 
  0x000002016316a600: 0045 8b4c | ab10 4585 | c90f 843a | 0100 0049 | 8bc1 e9ae | 0600 0044 | 8b94 2488 | 0000 0044 
  0x000002016316a620: 8b6c 2470 | 8b74 2474 | 4c8b 4424 | 7849 8b9f | b801 0000 | 4c8b db49 | 81c3 9000 | 0000 4d3b 
  0x000002016316a640: 9fc8 0100 | 000f 8322 | 0b00 004d | 899f b801 | 0000 410f | 0d8b c000 | 0000 48c7 | 0301 0000 
  0x000002016316a660: 0041 0f0d | 8b00 0100 

  0x000002016316a668: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData'[])}
  0x000002016316a668: 00c7 4308 | 101e 3801 | 410f 0d8b | 4001 0000 | c743 0c20 | 0000 0041 | 0f0d 8b80 | 0100 0048 
  0x000002016316a688: 8bfb 4883 | c710 b910 | 0000 00c5 | fdef c0e9 | 0d00 0000 | c5fe 7f07 | c5fe 7f47 | 2048 83c7 
  0x000002016316a6a8: 4048 83e9 | 087d ed48 | 83c1 047c | 0cc5 fe7f | 0748 83c7 | 2048 83e9 | 0448 83c1 | 047e 1a48 
  0x000002016316a6c8: b8ff ffff | ffff ffff | ffc4 e2f0 | f5c0 c4e1 | fb92 f862 | f1fe 2f7f | 074c 8bdb | 81fe 0001 
  0x000002016316a6e8: 0000 0f83 | 3106 0000 

  0x000002016316a6f0: ;   {oop(a 'java/lang/Integer'[256] {0x00000000ffb79c48})}
  0x000002016316a6f0: 48b9 489c | b7ff 0000 | 0000 468b | 8481 1002 | 0000 418b 

  0x000002016316a704: ;   {metadata('java/util/HashMap')}
  0x000002016316a704: 4908 81f9 | b0cb 0800 | 0f85 ea0d | 0000 4c89 | 5c24 3044 | 896c 2428 | 4489 5424 | 2449 8bee 
  0x000002016316a724: 498b d14d 

  0x000002016316a728: ;   {optimized virtual_call}
  0x000002016316a728: 8bcb 90e8 

  0x000002016316a72c: ; ImmutableOopMap {rbp=Oop [48]=Oop }
                      ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x000002016316a72c: 1034 d1ff 

  0x000002016316a730: ;   {other}
  0x000002016316a730: 0f1f 8400 | 2007 0002 | 4c8b f544 | 8b54 2424 | 8b6c 2428 | 4c8b 5c24 | 3045 8b46 | 1441 8b48 
  0x000002016316a750: ;   {metadata('com/sun/javafx/font/CompositeStrike')}
  0x000002016316a750: 0881 f928 | 5a1d 010f | 85d7 0c00 | 004c 895c | 2470 896c | 2468 4489 | 5424 644c | 8974 2458 
  0x000002016316a770: 4d8b d04c | 8954 2428 | 448b 5c24 | 6041 c1eb | 1844 895c | 2424 8b6c | 2460 81e5 | ffff ff00 
  0x000002016316a790: 498b d245 | 8bc3 448b | 5424 6044 | 8954 2430 

  0x000002016316a7a0: ;   {optimized virtual_call}
  0x000002016316a7a0: 6666 90e8 

  0x000002016316a7a4: ; ImmutableOopMap {[40]=Oop [88]=Oop [112]=Oop }
                      ;*invokevirtual getStrikeSlot {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getGlyph@12 (line 172)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@81 (line 257)
  0x000002016316a7a4: d873 e8ff 

  0x000002016316a7a8: ;   {other}
  0x000002016316a7a8: 0f1f 8400 | 9807 0003 | 488b d044 | 8bc5 6666 | 9048 b808 | 631d 0101 

  0x000002016316a7c0: ;   {virtual_call}
  0x000002016316a7c0: 0200 00e8 

  0x000002016316a7c4: ; ImmutableOopMap {[40]=Oop [88]=Oop [112]=Oop }
                      ;*invokeinterface getGlyph {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.javafx.font.CompositeStrike::getGlyph@16 (line 172)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@81 (line 257)
  0x000002016316a7c4: f808 fef8 

  0x000002016316a7c8: ;   {other}
  0x000002016316a7c8: 0f1f 8400 | b807 0004 

  0x000002016316a7d0: ; implicit exception: dispatches to 0x000002016316ba54
  0x000002016316a7d0: 448b 5008 

  0x000002016316a7d4: ;   {metadata('com/sun/javafx/font/directwrite/DWGlyph')}
  0x000002016316a7d4: 4181 fae0 | 4533 010f | 8583 0c00 | 0048 8944 | 2478 488b | d044 8b44 

  0x000002016316a7ec: ;   {optimized virtual_call}
  0x000002016316a7ec: 246c 90e8 

  0x000002016316a7f0: ; ImmutableOopMap {[88]=Oop [112]=Oop [120]=Oop }
                      ;*invokeinterface getPixelData {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x000002016316a7f0: 0c73 fff8 

  0x000002016316a7f4: ;   {other}
  0x000002016316a7f4: 0f1f 8400 | e407 0005 

  0x000002016316a7fc: ; implicit exception: dispatches to 0x000002016316ba70
  0x000002016316a7fc: 448b 500c | 4585 d20f | 8612 0600 | 0048 8984 | 2480 0000 | 0048 8b54 | 2478 488b 

  0x000002016316a818: ;   {optimized virtual_call}
  0x000002016316a818: ea66 90e8 

  0x000002016316a81c: ; ImmutableOopMap {rbp=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getOriginX@1 (line 387)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@148 (line 271)
  0x000002016316a81c: 6046 69ff 

  0x000002016316a820: ;   {other}
  0x000002016316a820: 0f1f 8400 | 1008 0006 | 4c8b dd45 | 8b53 2445 | 8b52 0c44 | 8954 2424 | 4c89 5c24 | 2849 8bd3 
  0x000002016316a840: 488b ac24 | 8000 0000 

  0x000002016316a848: ;   {optimized virtual_call}
  0x000002016316a848: 6666 90e8 

  0x000002016316a84c: ; ImmutableOopMap {rbp=Oop [40]=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getOriginY@1 (line 393)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@155 (line 272)
  0x000002016316a84c: 3046 69ff 

  0x000002016316a850: ;   {other}
  0x000002016316a850: 0f1f 8400 | 4008 0007 | 4c8b 5424 | 2845 8b5a | 2445 8b5b | 1044 895c | 2428 4c89 | 5424 3049 
  0x000002016316a870: ;   {optimized virtual_call}
  0x000002016316a870: 8bd2 90e8 

  0x000002016316a874: ; ImmutableOopMap {rbp=Oop [48]=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@1 (line 375)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@162 (line 273)
  0x000002016316a874: 0846 69ff 

  0x000002016316a878: ;   {other}
  0x000002016316a878: 0f1f 8400 | 6808 0008 | 4c8b 5c24 | 3045 8b53 | 2445 8b42 | 1445 2b42 | 0c44 8944 | 242c 498b 
  0x000002016316a898: ;   {optimized virtual_call}
  0x000002016316a898: d366 90e8 

  0x000002016316a89c: ; ImmutableOopMap {rbp=Oop [48]=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*invokevirtual isLCDGlyph {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getWidth@20 (line 376)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@162 (line 273)
  0x000002016316a89c: e045 69ff 

  0x000002016316a8a0: ;   {other}
  0x000002016316a8a0: 0f1f 8400 | 9008 0009 | 85c0 740e | 448b 5c24 | 2c47 8d14 | 5b44 8954 | 242c 488b 

  0x000002016316a8bc: ;   {optimized virtual_call}
  0x000002016316a8bc: 5424 30e8 

  0x000002016316a8c0: ; ImmutableOopMap {rbp=Oop [48]=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*invokevirtual checkBounds {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getHeight@1 (line 381)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@169 (line 274)
  0x000002016316a8c0: bc45 69ff 

  0x000002016316a8c4: ;   {other}
  0x000002016316a8c4: 0f1f 8400 | b408 000a | 4c8b 5424 | 3045 8b42 | 2445 8b58 | 1845 2b58 | 1049 8b87 | b801 0000 
  0x000002016316a8e4: 4c8b c049 | 83c0 204d | 3b87 c801 | 0000 0f83 | bd07 0000 | 4d89 87b8 | 0100 0041 | 0f0d 88c0 
  0x000002016316a904: 0000 0048 | c700 0100 | 0000 4c8b | c049 83c0 

  0x000002016316a914: ;   {metadata('com/sun/prism/impl/shape/MaskData')}
  0x000002016316a914: 10c7 4008 | 0080 3801 | 4489 600c | c5fd efc0 | 62d1 fe08 | 7f00 4c89 | 5424 3844 | 895c 2430 
  0x000002016316a934: 488b e848 | 8b94 2480 | 0000 0048 | 8954 2440 

  0x000002016316a944: ;   {static_call}
  0x000002016316a944: 6666 90e8 

  0x000002016316a948: ; ImmutableOopMap {rbp=Oop [56]=Oop [64]=Oop [88]=Oop [112]=Oop [128]=Oop }
                      ;*invokestatic wrap {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.shape.MaskData::create@12 (line 86)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@174 (line 270)
  0x000002016316a948: 344f 69ff 

  0x000002016316a94c: ;   {other}
  0x000002016316a94c: 0f1f 8400 | 3c09 000b | 488b d54c | 8bc0 448b | 4c24 248b | 7c24 288b | 7424 2c8b 

  0x000002016316a968: ;   {optimized virtual_call}
  0x000002016316a968: 4c24 30e8 

  0x000002016316a96c: ; ImmutableOopMap {rbp=Oop [56]=Oop [64]=Oop [88]=Oop [112]=Oop [128]=Oop }
                      ;*invokevirtual update {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.shape.MaskData::create@20 (line 86)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@174 (line 270)
  0x000002016316a96c: 1045 69ff 

  0x000002016316a970: ;   {other}
  0x000002016316a970: 0f1f 8400 | 6009 000c | 448b 5d10 | 498b 87b8 | 0100 0044 | 8b55 1448 | 8bc8 4883 | c120 448b 
  0x000002016316a990: 4d0c 448b | 4518 4183 | c202 4183 | c002 493b | 8fc8 0100 | 000f 837d | 0700 0049 | 898f b801 
  0x000002016316a9b0: 0000 0f0d | 89c0 0000 | 0048 c700 | 0100 0000 

  0x000002016316a9c0: ;   {metadata('com/sun/javafx/geom/Rectangle')}
  0x000002016316a9c0: c740 08d0 | 9830 0144 | 8960 0c44 | 8960 1044 | 8960 1c44 | 8950 1444 | 8940 1849 | 8b9f b801 
  0x000002016316a9e0: 0000 488b | cb48 83c1 | 2849 3b8f | c801 0000 | 0f83 eb06 | 0000 4989 | 8fb8 0100 | 000f 0d89 
  0x000002016316aa00: c000 0000 | 48c7 0301 | 0000 0048 | 8bcb 4883 

  0x000002016316aa10: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData')}
  0x000002016316aa10: c110 c743 | 0878 2639 | 0144 8963 | 0cc5 fdef | c0bf 0700 | 0000 c5f8 | 92ff 62f1 | fe2f 7f01 
  0x000002016316aa30: 4889 6c24 | 2844 895c | 2434 4489 | 5424 2444 | 894c 2440 | 4489 4424 | 3048 8944 | 2448 4889 
  0x000002016316aa50: 5c24 5048 | 8b54 2438 

  0x000002016316aa58: ;   {optimized virtual_call}
  0x000002016316aa58: 6666 90e8 

  0x000002016316aa5c: ; ImmutableOopMap {[40]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [112]=Oop [128]=Oop }
                      ;*invokevirtual checkMetrics {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelXAdvance@1 (line 363)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@247 (line 284)
  0x000002016316aa5c: 2044 69ff 

  0x000002016316aa60: ;   {other}
  0x000002016316aa60: 0f1f 8400 | 500a 000d | 4c8b 5424 | 38c4 c17a | 1042 0cc5 | fa11 4424 | 4448 8b54 

  0x000002016316aa7c: ;   {optimized virtual_call}
  0x000002016316aa7c: 2438 90e8 

  0x000002016316aa80: ; ImmutableOopMap {[40]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [112]=Oop [128]=Oop }
                      ;*invokevirtual checkMetrics {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.font.directwrite.DWGlyph::getPixelYAdvance@1 (line 369)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@254 (line 285)
  0x000002016316aa80: fc43 69ff 

  0x000002016316aa84: ;   {other}
  0x000002016316aa84: 0f1f 8400 | 740a 000e | 4180 7f40 | 000f 857f | 0500 004c | 8b5c 2450 | c5fa 1044 | 2444 c4c1 
  0x000002016316aaa4: 7a11 4318 | 8b5c 2434 | 4189 5b10 | 448b 5424 | 4045 8953 | 0c41 c743 | 1401 0000 | 004c 8b4c 
  0x000002016316aac4: 2438 c4c1 | 7a10 4110 | c4c1 7a11 | 431c 488b | 7c24 4848 | 8bcf 4189 | 4b20 4c8b | c749 8bd3 
  0x000002016316aae4: 4c33 c249 | c1e8 144d | 85c0 741a | 48c1 ea09 | 48b9 0070 | 256a 0102 | 0000 4803 | ca80 3902 
  0x000002016316ab04: 0f85 4405 | 0000 488b | 6c24 5844 | 8b45 1c45 | 85c0 0f84 | c408 0000 | 4c89 9c24 | 9000 0000 
  0x000002016316ab24: 4889 bc24 | 8800 0000 | 4489 5424 | 3489 5c24 | 384c 894c | 2478 498b | d04c 8bc7 

  0x000002016316ab40: ;   {optimized virtual_call}
  0x000002016316ab40: 6666 90e8 

  0x000002016316ab44: ; ImmutableOopMap {rbp=Oop [40]=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@272 (line 288)
  0x000002016316ab44: 3843 69ff 

  0x000002016316ab48: ;   {other}
  0x000002016316ab48: 0f1f 8400 | 380b 000f | 85c0 0f84 | 940a 0000 | 4c8b cd45 | 8b51 1c45 | 8b52 2848 | 8bac 2488 
  0x000002016316ab68: 0000 0044 | 8b5d 1844 | 8b45 1441 

  0x000002016316ab74: ;   {metadata('com/sun/prism/d3d/D3DTexture')}
  0x000002016316ab74: 8b52 0881 | fa80 bd33 | 010f 8509 | 0900 0049 | 8bfa 448b | 5738 418b | 5220 418b | 5a18 8bcb 
  0x000002016316ab94: ; implicit exception: dispatches to 0x000002016316b958
  0x000002016316ab94: 0faf 4a18 | 894c 244c | 4889 7c24 | 4044 8944 | 243c 440f | afc1 4489 | 4424 5044 | 895c 2448 
  0x000002016316abb4: 450f afc3 | 4489 4424 

  0x000002016316abbc: ;   {oop(a 'java/lang/Class'{0x00000000843d6820} = 'com/sun/prism/impl/GlyphCache')}
  0x000002016316abbc: 5448 bd20 | 683d 8400 | 0000 0044 | 8b45 7045 | 8b58 208b | 4c24 5441 | 3bcb 0f8f | 0b03 0000 
  0x000002016316abdc: 4c8b 9c24 | 8800 0000 | 418b 7b0c | 418b 7310 | 4d8b ca48 | 8b54 2440 | 33c9 4533 | d244 8914 
  0x000002016316abfc: 248b 6c24 | 3c89 6c24 | 088b 6c24 | 4889 6c24 | 108b 6c24 | 5089 6c24 | 1841 bb01 | 0000 0044 
  0x000002016316ac1c: 895c 2420 

  0x000002016316ac20: ;   {optimized virtual_call}
  0x000002016316ac20: 6666 90e8 

  0x000002016316ac24: ; ImmutableOopMap {[40]=Oop [64]=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                      ;*invokeinterface update {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@436 (line 322)
  0x000002016316ac24: 5842 69ff 

  0x000002016316ac28: ;   {other}
  0x000002016316ac28: 0f1f 8400 | 180c 0010 | 488b ac24 | 8800 0000 | 448b 4d0c | 8b7d 1041 | ffc1 ffc7 | 488b 5424 
  0x000002016316ac48: 284c 8b44 | 2440 be01 

  0x000002016316ac50: ;   {optimized virtual_call}
  0x000002016316ac50: 0000 00e8 

  0x000002016316ac54: ; ImmutableOopMap {rbp=Oop [40]=Oop [64]=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop [144]=Oop }
                      ;*invokevirtual uploadToTexture {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@481 (line 334)
  0x000002016316ac54: 2842 69ff 

  0x000002016316ac58: ;   {other}
  0x000002016316ac58: 0f1f 8400 | 480c 0011 | 488b 9c24 | 9000 0000 | 4c8b 5c24 | 7045 8b4b | 0c44 8b54 | 2468 453b 
  0x000002016316ac78: d10f 8325 | 0700 004b | 8d7c 9310 | 4180 7f40 | 000f 8503 | 0300 004c | 8bd7 4c8b | c344 8907 
  0x000002016316ac98: 4c8b db4d | 33da 49c1 | eb14 4d85 | db74 1b49 | c1ea 0949 | b800 7025 | 6a01 0200 | 004d 03c2 
  0x000002016316acb8: 4180 3802 | 0f85 0203 | 0000 488b | c348 81c4 | b000 0000 

  0x000002016316accc: ;   {poll_return}
  0x000002016316accc: 5d49 3ba7 | 5004 0000 | 0f87 020f | 0000 c349 | 8b87 b801 | 0000 4c8b | c849 83c1 | 104d 3b8f 
  0x000002016316acec: c801 0000 | 0f83 d504 | 0000 4d89 | 8fb8 0100 | 0041 0f0d | 89c0 0000 | 0048 c700 | 0100 0000 
  0x000002016316ad0c: ;   {metadata('java/lang/Integer')}
  0x000002016316ad0c: c740 0888 | 5c02 0044 | 8950 0c48 | 8944 2440 | e915 f7ff | ff4d 8b87 | b801 0000 | 498b c848 
  0x000002016316ad2c: 83c1 1049 | 3b8f c801 | 0000 0f83 | e404 0000 | 4989 8fb8 | 0100 000f | 0d89 c000 | 0000 49c7 
  0x000002016316ad4c: 0001 0000 

  0x000002016316ad50: ;   {metadata('java/lang/Integer')}
  0x000002016316ad50: 0041 c740 | 0888 5c02 | 0045 8950 | 0ce9 a0f9 | ffff 4d8b | 9758 0400 | 004c 8b5c | 2448 458b 
  0x000002016316ad70: ; ImmutableOopMap {r11=NarrowOop r9=NarrowOop rcx=NarrowOop rax=Oop [48]=Oop [56]=Oop [64]=Oop [128]=Oop [140]=NarrowOop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@145 (line 587)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
                      ;   {poll}
  0x000002016316ad70: 5b18 4185 | 0245 85db | 7523 4c8b | b424 8000 | 0000 448b | 9424 8800 | 0000 448b | 6c24 708b 
  0x000002016316ad90: 7424 744c | 8b44 2478 | e990 f8ff | ff4d 8bd3 | 4c89 5424 | 484c 8b54 | 2448 458b | 520c 443b 
  0x000002016316adb0: 5424 6875 | ad4c 8b54 | 2448 418b | 6a10 4c8b | d54c 8b5c | 2440 4d3b | d374 2944 

  0x000002016316adcc: ;   {metadata('java/lang/Integer')}
  0x000002016316adcc: 8b55 0841 | 81fa 885c | 0200 0f85 | 0809 0000 | 4c8b d545 | 8b5a 0c44 | 8b94 2488 | 0000 0045 
  0x000002016316adec: 3bd3 0f85 | 6eff ffff | 488b 4424 | 484c 8bb4 | 2480 0000 | 0044 8b94 | 2488 0000 | 00e9 c3f7 
  0x000002016316ae0c: ffff 488b | d048 8944 | 2458 e979 | f7ff ff4d | 8b9f b801 | 0000 4d8b | d349 83c2 | 284d 3b97 
  0x000002016316ae2c: c801 0000 | 0f83 f606 | 0000 4d89 | 97b8 0100 | 0041 0f0d | 8ac0 0000 | 0049 c703 | 0100 0000 
  0x000002016316ae4c: 4d8b d349 

  0x000002016316ae50: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData')}
  0x000002016316ae50: 83c2 1041 | c743 0878 | 2639 0145 | 8963 0cc5 | fdef c041 | b807 0000 | 00c4 c178 | 92f8 62d1 
  0x000002016316ae70: fe2f 7f02 | 4889 8424 | 8000 0000 | 498b eb48 | 8b54 2478 

  0x000002016316ae84: ;   {optimized virtual_call}
  0x000002016316ae84: 6666 90e8 

  0x000002016316ae88: ; ImmutableOopMap {rbp=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*invokeinterface getPixelXAdvance {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@123 (line 262)
  0x000002016316ae88: 370e 0000 

  0x000002016316ae8c: ;   {other}
  0x000002016316ae8c: 0f1f 8400 | 7c0e 0013 | c5fa 1144 | 2424 488b 

  0x000002016316ae9c: ;   {optimized virtual_call}
  0x000002016316ae9c: 5424 78e8 

  0x000002016316aea0: ; ImmutableOopMap {rbp=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*invokeinterface getPixelYAdvance {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@130 (line 263)
  0x000002016316aea0: 2e0e 0000 

  0x000002016316aea4: ;   {other}
  0x000002016316aea4: 0f1f 8400 | 940e 0014 | c5f9 7ec7 | 4180 7f40 | 000f 85b4 | 0300 0048 | 8bdd c5fa | 1044 2424 
  0x000002016316aec4: c5fa 1143 | 18c5 f96e | cfc5 fa11 | 4b1c 4489 | 630c 4489 | 6314 4489 | 6320 4489 | 6310 e981 
  0x000002016316aee4: fdff ff48 | 8944 24f8 | 8b44 244c | 8984 2498 | 0000 0048 | 8b44 24f8 

  0x000002016316aefc: ;   {static_call}
  0x000002016316aefc: 8bd1 90e8 

  0x000002016316af00: ; ImmutableOopMap {rbp=Oop [40]=Oop [64]=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                      ;*invokestatic newByteBuffer {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@398 (line 318)
  0x000002016316af00: 7c49 69ff 

  0x000002016316af04: ;   {other}
  0x000002016316af04: 0f1f 8400 | f40e 0015 | 488b d841 | 807f 4000 | 0f85 9303 | 0000 4c8b | db44 895d | 704c 8bd5 
  0x000002016316af24: 4c8b db4d | 33da 49c1 | eb14 4d85 | db0f 846e | 0300 004c | 8bdb 4d85 | db74 1a49 | c1ea 0948 
  0x000002016316af44: b900 7025 | 6a01 0200 | 0049 03ca | 8039 020f | 8587 0300 | 004c 8b4c | 2440 458b | 5138 4d8b 
  0x000002016316af64: c348 8944 | 24f8 8b84 | 2498 0000 | 0089 4424 | 4c48 8b44 | 24f8 e95d | fcff ff44 | 8b6c 2470 
  0x000002016316af84: 8b74 2474 | 4c8b 4424 | 78e9 9bf6 | ffff 448b | 1745 85d2 | 0f84 f1fc | ffff 4d8b | 5f28 498b 
  0x000002016316afa4: ca4d 85db | 0f84 fe05 | 0000 4d8b | 5738 4b89 | 4c1a f849 | 83c3 f84d | 895f 28e9 | cbfc ffff 
  0x000002016316afc4: 4d8b 5748 | 4d8b 5f58 | f083 4424 | c000 4180 | 3800 0f84 | e6fc ffff | 4588 204d | 85d2 7520 
  0x000002016316afe4: 498b c849 | 8bd7 49ba | 9022 30b8 | fb7f 0000 

  0x000002016316aff4: ;   {other}
  0x000002016316aff4: 41ff d20f | 1f84 0000 | 0000 00e9 | befc ffff | 4f89 4413 | f849 83c2 | f84d 8957 | 48e9 acfc 
  0x000002016316b014: ffff 4c8b | 5c24 5045 | 8b43 2045 | 85c0 0f84 | 74fa ffff | 4d8b 5728 | 498b c84d | 85d2 0f84 
  0x000002016316b034: 9105 0000 | 4d8b 4738 | 4b89 4c10 | f849 83c2 | f84d 8957 | 28e9 4efa | ffff 4d8b | 4748 498b 
  0x000002016316b054: 5758 f083 | 4424 c000 | 8039 000f | 84a5 faff | ff44 8821 | 4d85 c075 | 364d 8beb | 498b d749 
  0x000002016316b074: ba90 2230 | b8fb 7f00 | 0041 ffd2 

  0x000002016316b080: ;   {other}
  0x000002016316b080: 0f1f 8400 | 0000 0000 | 4c8b 4c24 | 388b 5c24 | 3444 8b54 | 2440 488b | 7c24 484d | 8bdd e967 
  0x000002016316b0a0: faff ff4a | 894c 02f8 | 4983 c0f8 | 4d89 4748 | e955 faff | ff44 895c | 2430 4c89 

  0x000002016316b0bc: ;   {metadata('com/sun/prism/impl/shape/MaskData')}
  0x000002016316b0bc: 5424 3848 | ba00 8038 | 0101 0200 | 0048 8b6c 

  0x000002016316b0cc: ;   {runtime_call _new_instance_Java}
  0x000002016316b0cc: 2458 90e8 

  0x000002016316b0d0: ; ImmutableOopMap {rbp=Oop [56]=Oop [88]=Oop [112]=Oop [128]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.shape.MaskData::create@0 (line 85)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@174 (line 270)
  0x000002016316b0d0: 2cdb 77ff 

  0x000002016316b0d4: ;   {other}
  0x000002016316b0d4: 0f1f 8400 | c410 0016 | e953 f8ff | ff48 8944 | 2448 4489 | 4424 3044 | 894c 2440 | 4489 5424 
  0x000002016316b0f4: 2444 895c | 2434 4889 

  0x000002016316b0fc: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData')}
  0x000002016316b0fc: 6c24 2848 | ba78 2639 | 0101 0200 | 004c 8b54 | 2458 498b 

  0x000002016316b110: ;   {runtime_call _new_instance_Java}
  0x000002016316b110: ea66 90e8 

  0x000002016316b114: ; ImmutableOopMap {rbp=Oop [40]=Oop [56]=Oop [72]=Oop [88]=Oop [112]=Oop [128]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@235 (line 283)
  0x000002016316b114: e8da 77ff 

  0x000002016316b118: ;   {other}
  0x000002016316b118: 0f1f 8400 | 0811 0017 | 488b d8e9 | 26f9 ffff | 4489 4424 | 3044 894c | 242c 4489 | 5424 2844 
  0x000002016316b138: 895c 2424 

  0x000002016316b13c: ;   {metadata('com/sun/javafx/geom/Rectangle')}
  0x000002016316b13c: 48ba d098 | 3001 0102 

  0x000002016316b144: ;   {runtime_call _new_instance_Java}
  0x000002016316b144: 0000 90e8 

  0x000002016316b148: ; ImmutableOopMap {rbp=Oop [56]=Oop [88]=Oop [112]=Oop [128]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@220 (line 282)
  0x000002016316b148: b4da 77ff 

  0x000002016316b14c: ;   {other}
  0x000002016316b14c: 0f1f 8400 | 3c11 0018 | 448b 5c24 | 2444 8b54 | 2428 448b | 4c24 2c44 | 8b44 2430 | e966 f8ff 
  0x000002016316b16c: ff44 894c | 2438 4c89 | 4424 3089 | 7424 2c44 | 896c 2428 | 4489 5424 | 2449 8bee 

  0x000002016316b188: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData'[])}
  0x000002016316b188: 48ba 101e | 3801 0102 | 0000 41b8 | 2000 0000 

  0x000002016316b198: ;   {runtime_call _new_array_Java}
  0x000002016316b198: 6666 90e8 

  0x000002016316b19c: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@54 (line 251)
  0x000002016316b19c: 60e7 77ff 

  0x000002016316b1a0: ;   {other}
  0x000002016316b1a0: 0f1f 8400 | 9011 0019 | 4c8b f544 | 8b54 2424 | 448b 6c24 | 288b 7424 | 2c4c 8b44 | 2430 448b 
  0x000002016316b1c0: 4c24 3848 | 8bd8 e916 | f5ff ff4c | 8944 2438 | 8974 2430 | 4489 6c24 | 2c44 8954 | 2428 4489 
  0x000002016316b1e0: 5c24 2448 

  0x000002016316b1e4: ;   {metadata('java/lang/Integer')}
  0x000002016316b1e4: 8bea 48ba | 885c 0200 | 0102 0000 

  0x000002016316b1f0: ;   {runtime_call _new_instance_Java}
  0x000002016316b1f0: 6666 90e8 

  0x000002016316b1f4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Integer::valueOf@23 (line 1070)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@22 (line 245)
  0x000002016316b1f4: 08da 77ff 

  0x000002016316b1f8: ;   {other}
  0x000002016316b1f8: 0f1f 8400 | e811 001a | 4c8b f544 | 8b5c 2424 | 448b 5424 | 2844 8b6c | 242c 8b74 | 2430 4c8b 
  0x000002016316b218: 4424 38e9 | f3fa ffff | 4c89 5c24 | 3044 894c | 242c 4489 | 6c24 2844 | 8954 2424 

  0x000002016316b234: ;   {metadata('java/lang/Integer')}
  0x000002016316b234: 498b ee48 | ba88 5c02 | 0001 0200 

  0x000002016316b240: ;   {runtime_call _new_instance_Java}
  0x000002016316b240: 0066 90e8 

  0x000002016316b244: ; ImmutableOopMap {rbp=Oop [44]=NarrowOop [48]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.Integer::valueOf@23 (line 1070)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@64 (line 252)
  0x000002016316b244: b8d9 77ff 

  0x000002016316b248: ;   {other}
  0x000002016316b248: 0f1f 8400 | 3812 001b | 4c8b c04c | 8bf5 448b | 5424 2444 | 8b6c 2428 | 448b 4c24 | 2c4c 8b5c 
  0x000002016316b268: 2430 e9ea | faff ff48 | 8bdd 448b | 5320 4585 | d20f 843f | fcff ff4d | 8b5f 2849 | 8bca 4d85 
  0x000002016316b288: db0f 84a5 | 0300 004d | 8b57 384b | 894c 1af8 | 4983 c3f8 | 4d89 5f28 | e919 fcff | ff4c 8bdb 
  0x000002016316b2a8: e9ac fcff | ff44 8b55 | 7045 85d2 | 0f84 60fc | ffff 4d8b | 5f28 498b | ca4d 85db | 0f84 8703 
  0x000002016316b2c8: 0000 4d8b | 5738 4b89 | 4c1a f849 | 83c3 f84d | 895f 28e9 | 3afc ffff | 4d8b 5758 | 4d8b 5f48 
  0x000002016316b2e8: f083 4424 | c000 8039 | 0074 2f44 | 8821 4d85 | db74 0f4b | 894c 1af8 | 4983 c3f8 | 4d89 5f48 
  0x000002016316b308: eb18 498b | d749 ba90 | 2230 b8fb | 7f00 0041 

  0x000002016316b318: ;   {other}
  0x000002016316b318: ffd2 0f1f | 8400 0000 | 0000 448b | 5570 4d8b | dae9 2bfc | ffff bade | ffff ff49 | 8bee 4489 
  0x000002016316b338: 5424 2c44 | 896c 2430 | 4489 5c24 

  0x000002016316b344: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b344: 3466 90e8 

  0x000002016316b348: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [64]=Oop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x000002016316b348: b4c9 69ff 

  0x000002016316b34c: ;   {other}
  0x000002016316b34c: 0f1f 8400 | 3c13 001c | bae4 ffff | ff4c 8974 | 2428 4489 | 5424 344c | 895c 2440 

  0x000002016316b368: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b368: 6666 90e8 

  0x000002016316b36c: ; ImmutableOopMap {[40]=Oop [64]=Oop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@42 (line 247)
  0x000002016316b36c: 90c9 69ff 

  0x000002016316b370: ;   {other}
  0x000002016316b370: 0f1f 8400 | 6013 001d | ba45 ffff | ff4c 8974 | 2428 4489 | 5424 3444 | 896c 2438 | 895c 243c 
  0x000002016316b390: 897c 245c 

  0x000002016316b394: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b394: 6666 90e8 

  0x000002016316b398: ; ImmutableOopMap {rbp=Oop [40]=Oop [60]=NarrowOop [64]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.HashMap::getNode@14 (line 575)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x000002016316b398: 64c9 69ff 

  0x000002016316b39c: ;   {other}
  0x000002016316b39c: 0f1f 8400 | 8c13 001e | bae4 ffff | ff48 8b6c | 2458 448b | 4424 6044 | 8944 2424 | 448b 4424 
  0x000002016316b3bc: 6444 8944 | 242c 4c89 | 5c24 5844 | 8954 2434 | 4889 5c24 

  0x000002016316b3d0: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b3d0: 6066 90e8 

  0x000002016316b3d4: ; ImmutableOopMap {rbp=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@490 (line 340)
  0x000002016316b3d4: 28c9 69ff 

  0x000002016316b3d8: ;   {other}
  0x000002016316b3d8: 0f1f 8400 | c813 001f | baf6 ffff | ff44 8b44 | 2460 4489 | 4424 3444 | 8b44 2464 | 4489 4424 
  0x000002016316b3f8: 3c44 8b44 | 2468 4489 | 4424 404c | 8b44 2470 | 4c89 4424 | 484c 895c | 2450 4c89 | 4c24 5844 
  0x000002016316b418: 8954 2444 | 895c 2468 | 4889 7c24 

  0x000002016316b424: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b424: 7866 90e8 

  0x000002016316b428: ; ImmutableOopMap {rbp=Oop [40]=Oop [72]=Oop [80]=Oop [88]=Oop [120]=Oop [128]=Oop }
                      ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@272 (line 288)
  0x000002016316b428: d4c8 69ff 

  0x000002016316b42c: ;   {other}
  0x000002016316b42c: 0f1f 8400 | 1c14 0020 | bade ffff | ff4c 8974 | 2428 448b | 4c24 6044 | 8954 2434 | 4c89 5c24 
  0x000002016316b44c: 3844 8944 | 2440 4489 

  0x000002016316b454: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b454: 4c24 44e8 

  0x000002016316b458: ; ImmutableOopMap {[40]=Oop [56]=Oop [64]=NarrowOop }
                      ;*invokeinterface getGlyph {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@81 (line 257)
  0x000002016316b458: a4c8 69ff 

  0x000002016316b45c: ;   {other}
  0x000002016316b45c: 0f1f 8400 | 4c14 0021 | bade ffff | ff48 8b6c | 2458 448b | 5424 6c44 | 8954 2428 | 4889 4424 
  0x000002016316b47c: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b47c: 4866 90e8 

  0x000002016316b480: ; ImmutableOopMap {rbp=Oop [72]=Oop [112]=Oop }
                      ;*invokeinterface getPixelData {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@96 (line 259)
  0x000002016316b480: 7cc8 69ff 

  0x000002016316b484: ;   {other}
  0x000002016316b484: 0f1f 8400 | 7414 0022 | bade ffff | ff4c 894c | 2440 448b | 4c24 6044 | 894c 243c | 448b 4c24 
  0x000002016316b4a4: 6c44 894c | 2448 8b4c | 2464 894c | 244c 448b | 4c24 6844 | 894c 2450 | 4c8b 4c24 | 704c 894c 
  0x000002016316b4c4: 2458 4c8b | 4c24 784c | 894c 2468 | 4c8b 8c24 | 8000 0000 | 4c89 4c24 | 7044 8944 | 2478 4489 
  0x000002016316b4e4: 5c24 7c44 | 8994 2480 

  0x000002016316b4ec: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b4ec: 0000 00e8 

  0x000002016316b4f0: ; ImmutableOopMap {rbp=Oop [40]=Oop [64]=Oop [88]=Oop [104]=Oop [112]=Oop [128]=NarrowOop [144]=Oop }
                      ;*invokeinterface getPixelFormat {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@355 (line 314)
  0x000002016316b4f0: 0cc8 69ff 

  0x000002016316b4f4: ;   {other}
  0x000002016316b4f4: 0f1f 8400 | e414 0023 | bade ffff | ff49 8bee | 4489 5424 | 2c44 896c | 2430 4489 | 4c24 344c 
  0x000002016316b514: 8944 2440 | 4c89 5c24 

  0x000002016316b51c: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b51c: 4866 90e8 

  0x000002016316b520: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [64]=Oop [72]=Oop }
                      ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x000002016316b520: dcc7 69ff 

  0x000002016316b524: ;   {other}
  0x000002016316b524: 0f1f 8400 | 1415 0024 | 4889 8424 | 8000 0000 

  0x000002016316b534: ;   {metadata('com/sun/prism/impl/GlyphCache$GlyphData')}
  0x000002016316b534: 48ba 7826 | 3901 0102 | 0000 488b 

  0x000002016316b540: ;   {runtime_call _new_instance_Java}
  0x000002016316b540: 6c24 58e8 

  0x000002016316b544: ; ImmutableOopMap {rbp=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@114 (line 261)
  0x000002016316b544: b8d6 77ff 

  0x000002016316b548: ;   {other}
  0x000002016316b548: 0f1f 8400 | 3815 0025 | 4c8b d8e9 | 24f9 ffff | baf6 ffff | ff48 8bac | 2480 0000 | 0044 8b54 
  0x000002016316b568: 2460 4489 | 5424 2444 | 8b5c 246c | 4489 5c24 | 2844 8b94 | 2488 0000 | 0044 8954 | 242c 448b 
  0x000002016316b588: 5c24 7044 | 895c 2430 | 448b 9424 | 8c00 0000 | 4489 5424 

  0x000002016316b59c: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b59c: 3466 90e8 

  0x000002016316b5a0: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [56]=Oop [64]=Oop [88]=Oop [144]=NarrowOop }
                      ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.HashMap$TreeNode::getTreeNode@18 (line 2048)
                      ; - java.util.HashMap::getNode@95 (line 582)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x000002016316b5a0: 5cc7 69ff 

  0x000002016316b5a4: ;   {other}
  0x000002016316b5a4: 0f1f 8400 | 9415 0026 | 498b d749 | bab0 2230 | b8fb 7f00 | 0041 ffd2 

  0x000002016316b5bc: ;   {other}
  0x000002016316b5bc: 0f1f 8400 | 0000 0000 | e9c6 f6ff | ff49 8bdb | 498b d749 | bab0 2230 | b8fb 7f00 | 0041 ffd2 
  0x000002016316b5dc: ;   {other}
  0x000002016316b5dc: 0f1f 8400 | 0000 0000 | 4c8b dbe9 | b0f4 ffff | ba45 ffff | ff44 8b5c | 2460 4489 | 5c24 3c44 
  0x000002016316b5fc: 8b5c 246c | 4489 5c24 | 4044 8b5c | 2464 4489 | 5c24 4444 | 8b54 2468 | 4489 5424 | 484c 8b54 
  0x000002016316b61c: 2470 4c89 | 5424 5089 

  0x000002016316b624: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b624: 4424 4ce8 

  0x000002016316b628: ; ImmutableOopMap {rbp=Oop [40]=Oop [80]=Oop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@275 (line 288)
  0x000002016316b628: d4c6 69ff 

  0x000002016316b62c: ;   {other}
  0x000002016316b62c: 0f1f 8400 | 1c16 0027 | 498b d749 | bab0 2230 | b8fb 7f00 | 0041 ffd2 

  0x000002016316b644: ;   {other}
  0x000002016316b644: 0f1f 8400 | 0000 0000 | e96d f8ff | ff49 8bd7 | 49ba b022 | 30b8 fb7f | 0000 41ff 

  0x000002016316b660: ;   {other}
  0x000002016316b660: d20f 1f84 | 0000 0000 | 00e9 acf8 | ffff bade | ffff ff49 | 8bee 4489 | 5424 2c89 

  0x000002016316b67c: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b67c: 4c24 34e8 

  0x000002016316b680: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@28 (line 245)
  0x000002016316b680: 7cc6 69ff 

  0x000002016316b684: ;   {other}
  0x000002016316b684: 0f1f 8400 | 7416 0028 | bade ffff | ff49 8bee | 448b 4c24 | 6044 894c | 2424 448b | 4424 6c44 
  0x000002016316b6a4: 8944 2428 | 4489 5424 | 2c44 896c | 2430 4889 | 7c24 48c5 | fa11 4c24 | 3489 4c24 | 58c5 fa11 
  0x000002016316b6c4: 4424 5cc5 | fa11 5c24 | 6044 895c | 2470 4489 

  0x000002016316b6d4: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b6d4: 5c24 74e8 

  0x000002016316b6d8: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [64]=Oop [72]=Oop [88]=NarrowOop [112]=NarrowOop [116]=NarrowOop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.Integer::equals@1 (line 1224)
                      ; - java.util.HashMap::getNode@63 (line 578)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x000002016316b6d8: 24c6 69ff 

  0x000002016316b6dc: ;   {other}
  0x000002016316b6dc: 0f1f 8400 | cc16 0029 | bade ffff | ff44 8b5c | 2460 4489 | 5c24 2444 | 8b54 2470 | 4489 5424 
  0x000002016316b6fc: 5089 4c24 

  0x000002016316b700: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b700: 6066 90e8 

  0x000002016316b704: ; ImmutableOopMap {rbp=NarrowOop [56]=Oop [64]=Oop [72]=Oop [96]=NarrowOop [128]=Oop [140]=NarrowOop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.Integer::equals@1 (line 1224)
                      ; - java.util.HashMap::getNode@128 (line 585)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x000002016316b704: f8c5 69ff 

  0x000002016316b708: ;   {other}
  0x000002016316b708: 0f1f 8400 | f816 002a | baf6 ffff | ff49 8bee | 4489 5424 | 2c44 896c 

  0x000002016316b720: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b720: 2430 90e8 

  0x000002016316b724: ; ImmutableOopMap {rbp=Oop [64]=Oop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x000002016316b724: d8c5 69ff 

  0x000002016316b728: ;   {other}
  0x000002016316b728: 0f1f 8400 | 1817 002b | baf6 ffff | ff4c 8974 | 2428 448b | 4c24 6044 | 8954 2434 | 4c89 5c24 
  0x000002016316b748: 3844 894c 

  0x000002016316b74c: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b74c: 2440 90e8 

  0x000002016316b750: ; ImmutableOopMap {[40]=Oop [56]=Oop }
                      ;*invokeinterface getGlyph {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@81 (line 257)
  0x000002016316b750: acc5 69ff 

  0x000002016316b754: ;   {other}
  0x000002016316b754: 0f1f 8400 | 4417 002c | baf6 ffff | ff48 8b6c | 2458 4c8b | 9424 8000 | 0000 4c89 | 5424 504c 
  0x000002016316b774: 895c 2458 

  0x000002016316b778: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b778: 6666 90e8 

  0x000002016316b77c: ; ImmutableOopMap {rbp=Oop [80]=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*getfield left {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getOriginX@8 (line 388)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@148 (line 271)
  0x000002016316b77c: 80c5 69ff 

  0x000002016316b780: ;   {other}
  0x000002016316b780: 0f1f 8400 | 7017 002d | baf6 ffff | ff48 8b6c | 2458 4c8b | 9c24 8000 | 0000 4c89 | 5c24 504c 
  0x000002016316b7a0: 8954 2458 

  0x000002016316b7a4: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b7a4: 6666 90e8 

  0x000002016316b7a8: ; ImmutableOopMap {rbp=Oop [80]=Oop [88]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*getfield top {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getOriginY@8 (line 394)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@155 (line 272)
  0x000002016316b7a8: 54c5 69ff 

  0x000002016316b7ac: ;   {other}
  0x000002016316b7ac: 0f1f 8400 | 9c17 002e | baf6 ffff | ff48 8b6c | 2458 448b | 5424 6044 | 8954 242c | 448b 5424 
  0x000002016316b7cc: 6444 8954 | 2434 4c8b | 9424 8000 | 0000 4c89 | 5424 584c | 895c 2460 

  0x000002016316b7e4: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b7e4: 6666 90e8 

  0x000002016316b7e8: ; ImmutableOopMap {rbp=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*getfield right {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getWidth@8 (line 376)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@162 (line 273)
  0x000002016316b7e8: 14c5 69ff 

  0x000002016316b7ec: ;   {other}
  0x000002016316b7ec: 0f1f 8400 | dc17 002f | baf6 ffff | ff48 8b6c | 2458 448b | 5c24 6044 | 895c 2430 | 448b 5c24 
  0x000002016316b80c: 6444 895c | 2438 4c8b | 9c24 8000 | 0000 4c89 | 5c24 584c | 8954 2460 

  0x000002016316b824: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b824: 6666 90e8 

  0x000002016316b828: ; ImmutableOopMap {rbp=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop [128]=Oop }
                      ;*getfield bottom {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.font.directwrite.DWGlyph::getHeight@8 (line 382)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@169 (line 274)
  0x000002016316b828: d4c4 69ff 

  0x000002016316b82c: ;   {other}
  0x000002016316b82c: 0f1f 8400 | 1c18 0030 | baf6 ffff | ff44 8b5c | 2460 4489 | 5c24 3c44 | 8b54 246c | 4489 5424 
  0x000002016316b84c: 4044 8b54 | 2464 4489 | 5424 4444 | 8b5c 2468 | 4489 5c24 | 484c 8b54 | 2470 4c89 | 5424 504c 
  0x000002016316b86c: 8b54 2478 | 4c89 5424 

  0x000002016316b874: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b874: 6066 90e8 

  0x000002016316b878: ; ImmutableOopMap {rbp=Oop [40]=Oop [80]=Oop [96]=Oop [128]=Oop [136]=Oop [144]=Oop }
                      ;*invokevirtual getBackingStore {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getBackingStore@4 (line 226)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@334 (line 311)
  0x000002016316b878: 84c4 69ff 

  0x000002016316b87c: ;   {other}
  0x000002016316b87c: 0f1f 8400 | 6c18 0031 | baf6 ffff | ff4c 894c | 2440 448b | 4c24 6044 | 894c 243c | 448b 4c24 
  0x000002016316b89c: 6c44 894c | 2448 448b | 5424 6444 | 8954 244c | 448b 5424 | 6844 8954 | 2450 4c8b | 5424 704c 
  0x000002016316b8bc: 8954 2458 | 4c8b 5424 | 784c 8954 | 2468 4489 | 4424 5444 | 895c 2478 

  0x000002016316b8d4: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b8d4: 6666 90e8 

  0x000002016316b8d8: ; ImmutableOopMap {rbp=Oop [40]=Oop [64]=Oop [88]=Oop [104]=Oop [128]=Oop [144]=Oop }
                      ;*invokeinterface getPixelFormat {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@355 (line 314)
  0x000002016316b8d8: 24c4 69ff 

  0x000002016316b8dc: ;   {other}
  0x000002016316b8dc: 0f1f 8400 | cc18 0032 | baf6 ffff | ff4c 894c | 2440 448b | 4c24 6044 | 894c 243c | 448b 5424 
  0x000002016316b8fc: 6c44 8954 | 2448 448b | 4c24 6444 | 894c 244c | 448b 5424 | 6844 8954 | 2450 4c8b | 5424 704c 
  0x000002016316b91c: 8954 2458 | 4c8b 5424 | 784c 8954 | 2468 4c8b | 9424 8000 | 0000 4c89 | 5424 7048 | 897c 2478 
  0x000002016316b93c: 4489 4424 | 5444 899c | 2480 0000 

  0x000002016316b948: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b948: 0066 90e8 

  0x000002016316b94c: ; ImmutableOopMap {rbp=Oop [40]=Oop [64]=Oop [88]=Oop [104]=Oop [112]=Oop [120]=Oop [144]=Oop }
                      ;*invokevirtual getBytesPerPixelUnit {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@360 (line 314)
  0x000002016316b94c: b0c3 69ff 

  0x000002016316b950: ;   {other}
  0x000002016316b950: 0f1f 8400 | 4019 0033 | baf6 ffff | ff4c 894c | 2440 448b | 4c24 6044 | 894c 243c | 8b4c 246c 
  0x000002016316b970: 894c 2448 | 448b 4c24 | 6444 894c | 244c 8b4c | 2468 894c | 2450 4c8b | 4c24 704c | 894c 2458 
  0x000002016316b990: 4c8b 4c24 | 784c 894c | 2468 4c8b | 8c24 8000 | 0000 4c89 | 4c24 7048 | 897c 2478 | 4489 4424 
  0x000002016316b9b0: 5444 899c | 2480 0000 | 0044 8994 | 2484 0000 | 0089 9c24 | 8800 0000 

  0x000002016316b9c8: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b9c8: 6666 90e8 

  0x000002016316b9cc: ; ImmutableOopMap {rbp=Oop [40]=Oop [64]=Oop [88]=Oop [104]=Oop [112]=Oop [120]=Oop [132]=NarrowOop [144]=Oop }
                      ;*invokevirtual getSizeInBytes {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.PixelFormat::getBytesPerPixelUnit@8 (line 98)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@360 (line 314)
  0x000002016316b9cc: 30c3 69ff 

  0x000002016316b9d0: ;   {other}
  0x000002016316b9d0: 0f1f 8400 | c019 0034 | baf6 ffff | ff49 8bee | 4489 5424 | 2c44 896c | 2430 4c89 | 4424 404c 
  0x000002016316b9f0: 895c 2448 

  0x000002016316b9f4: ;   {runtime_call UncommonTrapBlob}
  0x000002016316b9f4: 6666 90e8 

  0x000002016316b9f8: ; ImmutableOopMap {rbp=Oop [64]=Oop [72]=Oop }
                      ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@69 (line 252)
  0x000002016316b9f8: 04c3 69ff 

  0x000002016316b9fc: ;   {other}
  0x000002016316b9fc: 0f1f 8400 | ec19 0035 | baf4 ffff | ff49 8bee | 448b 4424 | 6044 8944 | 2424 448b | 4c24 6c44 
  0x000002016316ba1c: 894c 2428 | 4489 5424 | 2c48 897c | 2448 c5fa | 114c 2434 | 894c 2458 | c5fa 1144 | 245c c5fa 
  0x000002016316ba3c: 115c 2460 | 4489 5c24 

  0x000002016316ba44: ;   {runtime_call UncommonTrapBlob}
  0x000002016316ba44: 6466 90e8 

  0x000002016316ba48: ; ImmutableOopMap {rbp=Oop [52]=NarrowOop [64]=Oop [72]=Oop [88]=NarrowOop [100]=NarrowOop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.Integer::equals@1 (line 1224)
                      ; - java.util.HashMap::getNode@63 (line 578)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x000002016316ba48: b4c2 69ff 

  0x000002016316ba4c: ;   {other}
  0x000002016316ba4c: 0f1f 8400 | 3c1a 0036 | ba45 ffff | ff48 8b6c | 2458 4889 

  0x000002016316ba60: ;   {runtime_call UncommonTrapBlob}
  0x000002016316ba60: 4424 48e8 

  0x000002016316ba64: ; ImmutableOopMap {rbp=Oop [72]=Oop [112]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@90 (line 258)
  0x000002016316ba64: 98c2 69ff 

  0x000002016316ba68: ;   {other}
  0x000002016316ba68: 0f1f 8400 | 581a 0037 | ba45 ffff | ff48 8b6c | 2458 4889 

  0x000002016316ba7c: ;   {runtime_call UncommonTrapBlob}
  0x000002016316ba7c: 4424 50e8 

  0x000002016316ba80: ; ImmutableOopMap {rbp=Oop [80]=Oop [112]=Oop [120]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@105 (line 260)
  0x000002016316ba80: 7cc2 69ff 

  0x000002016316ba84: ;   {other}
  0x000002016316ba84: 0f1f 8400 | 741a 0038 | ba45 ffff | ff49 8be9 | 448b 5424 | 6044 8954 | 2458 448b | 5c24 6c44 
  0x000002016316baa4: 895c 245c | 448b 5424 | 6444 8954 | 2460 448b | 5c24 6844 | 895c 2464 | 4c8b 5424 | 704c 8954 
  0x000002016316bac4: 2468 4c8b | 9424 9000 | 0000 4c89 | 5424 7044 | 8984 2490 

  0x000002016316bad8: ;   {runtime_call UncommonTrapBlob}
  0x000002016316bad8: 0000 00e8 

  0x000002016316badc: ; ImmutableOopMap {rbp=Oop [40]=Oop [64]=Oop [104]=Oop [112]=Oop [120]=Oop [128]=Oop [136]=Oop [144]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.GlyphCache::getCachedGlyph@382 (line 317)
  0x000002016316badc: 20c2 69ff 

  0x000002016316bae0: ;   {other}
  0x000002016316bae0: 0f1f 8400 | d01a 0039 | baf4 ffff | ff44 8b5c | 2460 4489 | 5c24 2444 | 8b54 2470 | 4489 5424 
  0x000002016316bb00: 5089 4c24 

  0x000002016316bb04: ;   {runtime_call UncommonTrapBlob}
  0x000002016316bb04: 6066 90e8 

  0x000002016316bb08: ; ImmutableOopMap {rbp=NarrowOop [56]=Oop [64]=Oop [72]=Oop [96]=NarrowOop [128]=Oop [140]=NarrowOop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.Integer::equals@1 (line 1224)
                      ; - java.util.HashMap::getNode@128 (line 585)
                      ; - java.util.HashMap::get@2 (line 564)
                      ; - com.sun.prism.impl.GlyphCache::getCachedGlyph@25 (line 245)
  0x000002016316bb08: f4c1 69ff 

  0x000002016316bb0c: ;   {other}
  0x000002016316bb0c: 0f1f 8400 | fc1a 003a | 488b d0e9 | b300 0000 | 488b d0e9 | ab00 0000 | 488b d0e9 | a300 0000 
  0x000002016316bb2c: 488b d0e9 | 9b00 0000 | 488b d0e9 | 9300 0000 | 488b d0e9 | 8b00 0000 | eb78 488b | d0e9 8100 
  0x000002016316bb4c: 0000 488b | d0eb 7c48 | 8bd0 eb77 | 448b 5008 

  0x000002016316bb5c: ;   {metadata('java/lang/Exception')}
  0x000002016316bb5c: 49bb b8c0 | 0000 0102 | 0000 49b8 | 0000 0000 | 0102 0000 | 4d03 c24d | 8b50 404d | 3bd3 7507 
  0x000002016316bb7c: 33c0 e942 | f1ff ff48 | 8bd0 eb47 | 488b d0eb | 4248 8bd0 | eb3d 488b | d0eb 3848 | 8bd0 eb33 
  0x000002016316bb9c: 488b d0eb | 2e48 8bd0 | eb29 488b | d0eb 2448 | 8bd0 eb1f | 488b d0eb | 1aeb 0048 | 8bd0 eb13 
  0x000002016316bbbc: eb00 488b | d0eb 0ceb | 0048 8bd0 | eb05 eb00 | 488b d048 | 81c4 b000 

  0x000002016316bbd4: ;   {runtime_call _rethrow_Java}
  0x000002016316bbd4: 0000 5de9 | a475 78ff 

  0x000002016316bbdc: ;   {internal_word}
  0x000002016316bbdc: 49ba cdac | 1663 0102 | 0000 4d89 | 9768 0400 

  0x000002016316bbec: ;   {runtime_call SafepointBlob}
  0x000002016316bbec: 00e9 8eaf 

  0x000002016316bbf0: ;   {runtime_call StubRoutines (final stubs)}
  0x000002016316bbf0: 69ff e889 | 316a ffe9 | e2e7 ffff | f4f4 f4f4 
[Stub Code]
  0x000002016316bc00: ;   {no_reloc}
  0x000002016316bc00: 48bb 0000 | 0000 0000 

  0x000002016316bc08: ;   {runtime_call}
  0x000002016316bc08: 0000 e9fb 

  0x000002016316bc0c: ;   {static_stub}
  0x000002016316bc0c: ffff ff48 | bb00 0000 | 0000 0000 

  0x000002016316bc18: ;   {runtime_call}
  0x000002016316bc18: 00e9 fbff 

  0x000002016316bc1c: ;   {static_stub}
  0x000002016316bc1c: ffff 48bb | 0000 0000 | 0000 0000 

  0x000002016316bc28: ;   {runtime_call}
  0x000002016316bc28: e9fb ffff 

  0x000002016316bc2c: ;   {static_stub}
  0x000002016316bc2c: ff48 bb00 | 0000 0000 

  0x000002016316bc34: ;   {runtime_call}
  0x000002016316bc34: 0000 00e9 | fbff ffff 

  0x000002016316bc3c: ;   {static_stub}
  0x000002016316bc3c: 48bb 0000 | 0000 0000 

  0x000002016316bc44: ;   {runtime_call}
  0x000002016316bc44: 0000 e9fb 

  0x000002016316bc48: ;   {static_stub}
  0x000002016316bc48: ffff ff48 | bb00 0000 | 0000 0000 

  0x000002016316bc54: ;   {runtime_call}
  0x000002016316bc54: 00e9 fbff 

  0x000002016316bc58: ;   {static_stub}
  0x000002016316bc58: ffff 48bb | 0000 0000 | 0000 0000 

  0x000002016316bc64: ;   {runtime_call}
  0x000002016316bc64: e9fb ffff 

  0x000002016316bc68: ;   {static_stub}
  0x000002016316bc68: ff48 bb00 | 0000 0000 

  0x000002016316bc70: ;   {runtime_call}
  0x000002016316bc70: 0000 00e9 | fbff ffff 

  0x000002016316bc78: ;   {static_stub}
  0x000002016316bc78: 48bb 0000 | 0000 0000 

  0x000002016316bc80: ;   {runtime_call}
  0x000002016316bc80: 0000 e9fb 

  0x000002016316bc84: ;   {static_stub}
  0x000002016316bc84: ffff ff48 | bb00 0000 | 0000 0000 

  0x000002016316bc90: ;   {runtime_call}
  0x000002016316bc90: 00e9 fbff 

  0x000002016316bc94: ;   {static_stub}
  0x000002016316bc94: ffff 48bb | 0000 0000 | 0000 0000 

  0x000002016316bca0: ;   {runtime_call}
  0x000002016316bca0: e9fb ffff 

  0x000002016316bca4: ;   {static_stub}
  0x000002016316bca4: ff48 bb00 | 0000 0000 

  0x000002016316bcac: ;   {runtime_call}
  0x000002016316bcac: 0000 00e9 | fbff ffff 

  0x000002016316bcb4: ;   {static_stub}
  0x000002016316bcb4: 48bb 0000 | 0000 0000 

  0x000002016316bcbc: ;   {runtime_call}
  0x000002016316bcbc: 0000 e9fb 

  0x000002016316bcc0: ;   {static_stub}
  0x000002016316bcc0: ffff ff48 | bb00 0645 | 7001 0200 

  0x000002016316bccc: ;   {runtime_call I2C/C2I adapters}
  0x000002016316bccc: 00e9 b181 

  0x000002016316bcd0: ;   {static_stub}
  0x000002016316bcd0: 69ff 48bb | a006 4570 | 0102 0000 

  0x000002016316bcdc: ;   {runtime_call I2C/C2I adapters}
  0x000002016316bcdc: e9a2 8169 

  0x000002016316bce0: ;   {static_stub}
  0x000002016316bce0: ff48 bb00 | 0000 0000 

  0x000002016316bce8: ;   {runtime_call}
  0x000002016316bce8: 0000 00e9 | fbff ffff 

  0x000002016316bcf0: ;   {static_stub}
  0x000002016316bcf0: 48bb 0000 | 0000 0000 

  0x000002016316bcf8: ;   {runtime_call}
  0x000002016316bcf8: 0000 e9fb 

  0x000002016316bcfc: ;   {static_stub}
  0x000002016316bcfc: ffff ff48 | bb00 0000 | 0000 0000 

  0x000002016316bd08: ;   {runtime_call}
  0x000002016316bd08: 00e9 fbff 

  0x000002016316bd0c: ;   {static_stub}
  0x000002016316bd0c: ffff 48bb | 0000 0000 | 0000 0000 

  0x000002016316bd18: ;   {runtime_call}
  0x000002016316bd18: e9fb ffff 

  0x000002016316bd1c: ;   {static_stub}
  0x000002016316bd1c: ff48 bb00 | 0000 0000 

  0x000002016316bd24: ;   {runtime_call}
  0x000002016316bd24: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x000002016316bd2c: ;   {runtime_call ExceptionBlob}
  0x000002016316bd2c: e9cf d177 | ffe8 0000 | 0000 4883 

  0x000002016316bd38: ;   {runtime_call DeoptimizationBlob}
  0x000002016316bd38: 2c24 05e9 | e0c2 69ff 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x000002017c4c5990, length=22, elements={
0x0000020150c20a90, 0x000002016ee67ed0, 0x000002016ee69090, 0x000002016ee6c450,
0x000002016ee6f850, 0x000002016ee705a0, 0x000002016ee711b0, 0x000002016ee77d60,
0x000002016ee88ad0, 0x00000201730bc550, 0x0000020173f19810, 0x000002017478b010,
0x0000020174283b20, 0x000002017432aba0, 0x000002017333c490, 0x0000020173a685f0,
0x0000020173a6b500, 0x0000020174009440, 0x0000020175abc4e0, 0x0000020175ea3430,
0x000002017483d880, 0x0000020175ea2710
}

Java Threads: ( => current thread )
  0x0000020150c20a90 JavaThread "main"                              [_thread_blocked, id=16676, stack(0x00000033cbd00000,0x00000033cbe00000) (1024K)]
  0x000002016ee67ed0 JavaThread "Reference Handler"          daemon [_thread_blocked, id=15316, stack(0x00000033cc600000,0x00000033cc700000) (1024K)]
  0x000002016ee69090 JavaThread "Finalizer"                  daemon [_thread_blocked, id=3396, stack(0x00000033cc700000,0x00000033cc800000) (1024K)]
  0x000002016ee6c450 JavaThread "Signal Dispatcher"          daemon [_thread_blocked, id=17580, stack(0x00000033cc800000,0x00000033cc900000) (1024K)]
  0x000002016ee6f850 JavaThread "Attach Listener"            daemon [_thread_blocked, id=10880, stack(0x00000033cc900000,0x00000033cca00000) (1024K)]
  0x000002016ee705a0 JavaThread "Service Thread"             daemon [_thread_blocked, id=9196, stack(0x00000033cca00000,0x00000033ccb00000) (1024K)]
  0x000002016ee711b0 JavaThread "Monitor Deflation Thread"   daemon [_thread_blocked, id=12684, stack(0x00000033ccb00000,0x00000033ccc00000) (1024K)]
  0x000002016ee77d60 JavaThread "C2 CompilerThread0"         daemon [_thread_blocked, id=21416, stack(0x00000033ccc00000,0x00000033ccd00000) (1024K)]
  0x000002016ee88ad0 JavaThread "C1 CompilerThread0"         daemon [_thread_blocked, id=19256, stack(0x00000033ccd00000,0x00000033cce00000) (1024K)]
  0x00000201730bc550 JavaThread "Common-Cleaner"             daemon [_thread_blocked, id=4692, stack(0x00000033cce00000,0x00000033ccf00000) (1024K)]
  0x0000020173f19810 JavaThread "JDWP Event Helper Thread"   daemon [_thread_blocked, id=8784, stack(0x00000033cd300000,0x00000033cd400000) (1024K)]
  0x000002017478b010 JavaThread "Notification Thread"        daemon [_thread_blocked, id=6584, stack(0x00000033cd500000,0x00000033cd600000) (1024K)]
=>0x0000020174283b20 JavaThread "QuantumRenderer-0"          daemon [_thread_in_native, id=1124, stack(0x00000033cd600000,0x00000033cd700000) (1024K)]
  0x000002017432aba0 JavaThread "InvokeLaterDispatcher"      daemon [_thread_blocked, id=19072, stack(0x00000033cd700000,0x00000033cd800000) (1024K)]
  0x000002017333c490 JavaThread "JavaFX Application Thread"         [_thread_blocked, id=7960, stack(0x00000033cd800000,0x00000033cd900000) (1024K)]
  0x0000020173a685f0 JavaThread "Thread-1"                   daemon [_thread_in_native, id=19772, stack(0x00000033cdc00000,0x00000033cdd00000) (1024K)]
  0x0000020173a6b500 JavaThread "JavaFX-Launcher"                   [_thread_blocked, id=15928, stack(0x00000033cdd00000,0x00000033cde00000) (1024K)]
  0x0000020174009440 JavaThread "Prism Font Disposer"        daemon [_thread_blocked, id=3184, stack(0x00000033cdf00000,0x00000033ce000000) (1024K)]
  0x0000020175abc4e0 JavaThread "mysql-cj-abandoned-connection-cleanup" daemon [_thread_blocked, id=14608, stack(0x00000033ce000000,0x00000033ce100000) (1024K)]
  0x0000020175ea3430 JavaThread "Cleaner-0"                  daemon [_thread_blocked, id=14748, stack(0x00000033ce400000,0x00000033ce500000) (1024K)]
  0x000002017483d880 JavaThread "C2 CompilerThread1"         daemon [_thread_blocked, id=13116, stack(0x00000033ccf00000,0x00000033cd000000) (1024K)]
  0x0000020175ea2710 JavaThread "SIGINT handler"             daemon [_thread_blocked, id=1440, stack(0x00000033cd200000,0x00000033cd300000) (1024K)]
Total: 22

Other Threads:
  0x000002016ee49090 VMThread "VM Thread"                           [id=9684, stack(0x00000033cc400000,0x00000033cc500000) (1024K)]
  0x000002016ee2ef30 WatcherThread "VM Periodic Task Thread"        [id=7584, stack(0x00000033cc300000,0x00000033cc400000) (1024K)]
  0x0000020152e8d280 WorkerThread "GC Thread#0"                     [id=12356, stack(0x00000033cbe00000,0x00000033cbf00000) (1024K)]
  0x0000020173678670 WorkerThread "GC Thread#1"                     [id=18012, stack(0x00000033cd000000,0x00000033cd100000) (1024K)]
  0x0000020173678a10 WorkerThread "GC Thread#2"                     [id=11184, stack(0x00000033cd100000,0x00000033cd200000) (1024K)]
  0x000002017503f600 WorkerThread "GC Thread#3"                     [id=10992, stack(0x00000033cde00000,0x00000033cdf00000) (1024K)]
  0x0000020152e9dc20 ConcurrentGCThread "G1 Main Marker"            [id=13052, stack(0x00000033cbf00000,0x00000033cc000000) (1024K)]
  0x0000020152e9f070 WorkerThread "G1 Conc#0"                       [id=1608, stack(0x00000033cc000000,0x00000033cc100000) (1024K)]
  0x000002016ed020c0 ConcurrentGCThread "G1 Refine#0"               [id=3660, stack(0x00000033cc100000,0x00000033cc200000) (1024K)]
  0x0000020152efd740 ConcurrentGCThread "G1 Service"                [id=17764, stack(0x00000033cc200000,0x00000033cc300000) (1024K)]
Total: 10

Threads with active compile tasks:
Total: 0

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x0000000083200000, size: 1998 MB, Compressed Oops mode: 32-bit

CDS archive(s) mapped at: [0x0000020100000000-0x0000020100c90000-0x0000020100c90000), size 13172736, SharedBaseAddress: 0x0000020100000000, ArchiveRelocationMode: 1.
Compressed class space mapped at: 0x0000020101000000-0x0000020141000000, reserved size: 1073741824
Narrow klass base: 0x0000020100000000, Narrow klass shift: 0, Narrow klass range: 0x100000000

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 5 size 8 Array Of Cards #cards 12 size 40 Howl #buckets 4 coarsen threshold 1843 Howl Bitmap #cards 512 size 80 coarsen threshold 460 Card regions per heap region 1 cards per card region 2048
 CPUs: 4 total, 4 available
 Memory: 7991M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (32-bit)
 Heap Region Size: 1M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 126M
 Heap Max Capacity: 1998M
 Pre-touch: Disabled
 Parallel Workers: 4
 Concurrent Workers: 1
 Concurrent Refinement Workers: 4
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 69632K, used 54272K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 10 young (10240K), 3 survivors (3072K)
 Metaspace       used 32614K, committed 33024K, reserved 1114112K
  class space    used 4377K, committed 4544K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, TAMS=top-at-mark-start, PB=parsable bottom
|   0|0x0000000083200000, 0x0000000083300000, 0x0000000083300000|100%| O|  |TAMS 0x0000000083200000| PB 0x0000000083200000| Untracked 
|   1|0x0000000083300000, 0x0000000083400000, 0x0000000083400000|100%|HS|  |TAMS 0x0000000083300000| PB 0x0000000083300000| Complete 
|   2|0x0000000083400000, 0x0000000083500000, 0x0000000083500000|100%|HC|  |TAMS 0x0000000083400000| PB 0x0000000083400000| Complete 
|   3|0x0000000083500000, 0x0000000083600000, 0x0000000083600000|100%|HC|  |TAMS 0x0000000083500000| PB 0x0000000083500000| Complete 
|   4|0x0000000083600000, 0x0000000083700000, 0x0000000083700000|100%|HS|  |TAMS 0x0000000083600000| PB 0x0000000083600000| Complete 
|   5|0x0000000083700000, 0x0000000083800000, 0x0000000083800000|100%|HC|  |TAMS 0x0000000083700000| PB 0x0000000083700000| Complete 
|   6|0x0000000083800000, 0x0000000083900000, 0x0000000083900000|100%| O|  |TAMS 0x0000000083800000| PB 0x0000000083800000| Untracked 
|   7|0x0000000083900000, 0x0000000083a00000, 0x0000000083a00000|100%| O|  |TAMS 0x0000000083900000| PB 0x0000000083900000| Untracked 
|   8|0x0000000083a00000, 0x0000000083b00000, 0x0000000083b00000|100%|HS|  |TAMS 0x0000000083a00000| PB 0x0000000083a00000| Complete 
|   9|0x0000000083b00000, 0x0000000083c00000, 0x0000000083c00000|100%|HC|  |TAMS 0x0000000083b00000| PB 0x0000000083b00000| Complete 
|  10|0x0000000083c00000, 0x0000000083d00000, 0x0000000083d00000|100%|HC|  |TAMS 0x0000000083c00000| PB 0x0000000083c00000| Complete 
|  11|0x0000000083d00000, 0x0000000083e00000, 0x0000000083e00000|100%|HS|  |TAMS 0x0000000083d00000| PB 0x0000000083d00000| Complete 
|  12|0x0000000083e00000, 0x0000000083f00000, 0x0000000083f00000|100%|HC|  |TAMS 0x0000000083e00000| PB 0x0000000083e00000| Complete 
|  13|0x0000000083f00000, 0x0000000084000000, 0x0000000084000000|100%|HC|  |TAMS 0x0000000083f00000| PB 0x0000000083f00000| Complete 
|  14|0x0000000084000000, 0x0000000084100000, 0x0000000084100000|100%|HS|  |TAMS 0x0000000084000000| PB 0x0000000084000000| Complete 
|  15|0x0000000084100000, 0x0000000084200000, 0x0000000084200000|100%|HC|  |TAMS 0x0000000084100000| PB 0x0000000084100000| Complete 
|  16|0x0000000084200000, 0x0000000084300000, 0x0000000084300000|100%|HC|  |TAMS 0x0000000084200000| PB 0x0000000084200000| Complete 
|  17|0x0000000084300000, 0x0000000084400000, 0x0000000084400000|100%| O|  |TAMS 0x0000000084300000| PB 0x0000000084300000| Untracked 
|  18|0x0000000084400000, 0x0000000084500000, 0x0000000084500000|100%| O|  |TAMS 0x0000000084400000| PB 0x0000000084400000| Untracked 
|  19|0x0000000084500000, 0x0000000084600000, 0x0000000084600000|100%| O|  |TAMS 0x0000000084500000| PB 0x0000000084500000| Untracked 
|  20|0x0000000084600000, 0x0000000084700000, 0x0000000084700000|100%| O|  |TAMS 0x0000000084600000| PB 0x0000000084600000| Untracked 
|  21|0x0000000084700000, 0x0000000084800000, 0x0000000084800000|100%| O|  |TAMS 0x0000000084700000| PB 0x0000000084700000| Untracked 
|  22|0x0000000084800000, 0x0000000084900000, 0x0000000084900000|100%| O|  |TAMS 0x0000000084800000| PB 0x0000000084800000| Untracked 
|  23|0x0000000084900000, 0x0000000084a00000, 0x0000000084a00000|100%| O|  |TAMS 0x0000000084900000| PB 0x0000000084900000| Untracked 
|  24|0x0000000084a00000, 0x0000000084b00000, 0x0000000084b00000|100%| O|  |TAMS 0x0000000084a00000| PB 0x0000000084a00000| Untracked 
|  25|0x0000000084b00000, 0x0000000084c00000, 0x0000000084c00000|100%| O|  |TAMS 0x0000000084b00000| PB 0x0000000084b00000| Untracked 
|  26|0x0000000084c00000, 0x0000000084d00000, 0x0000000084d00000|100%| O|  |TAMS 0x0000000084c00000| PB 0x0000000084c00000| Untracked 
|  27|0x0000000084d00000, 0x0000000084e00000, 0x0000000084e00000|100%| O|  |TAMS 0x0000000084d00000| PB 0x0000000084d00000| Untracked 
|  28|0x0000000084e00000, 0x0000000084f00000, 0x0000000084f00000|100%| O|  |TAMS 0x0000000084e00000| PB 0x0000000084e00000| Untracked 
|  29|0x0000000084f00000, 0x0000000085000000, 0x0000000085000000|100%| O|  |TAMS 0x0000000084f00000| PB 0x0000000084f00000| Untracked 
|  30|0x0000000085000000, 0x0000000085100000, 0x0000000085100000|100%| O|  |TAMS 0x0000000085000000| PB 0x0000000085000000| Untracked 
|  31|0x0000000085100000, 0x0000000085200000, 0x0000000085200000|100%| O|  |TAMS 0x0000000085100000| PB 0x0000000085100000| Untracked 
|  32|0x0000000085200000, 0x0000000085200000, 0x0000000085300000|  0%| F|  |TAMS 0x0000000085200000| PB 0x0000000085200000| Untracked 
|  33|0x0000000085300000, 0x0000000085300000, 0x0000000085400000|  0%| F|  |TAMS 0x0000000085300000| PB 0x0000000085300000| Untracked 
|  34|0x0000000085400000, 0x0000000085400000, 0x0000000085500000|  0%| F|  |TAMS 0x0000000085400000| PB 0x0000000085400000| Untracked 
|  35|0x0000000085500000, 0x0000000085500000, 0x0000000085600000|  0%| F|  |TAMS 0x0000000085500000| PB 0x0000000085500000| Untracked 
|  36|0x0000000085600000, 0x0000000085600000, 0x0000000085700000|  0%| F|  |TAMS 0x0000000085600000| PB 0x0000000085600000| Untracked 
|  37|0x0000000085700000, 0x0000000085800000, 0x0000000085800000|100%| S|CS|TAMS 0x0000000085700000| PB 0x0000000085700000| Complete 
|  38|0x0000000085800000, 0x0000000085900000, 0x0000000085900000|100%| S|CS|TAMS 0x0000000085800000| PB 0x0000000085800000| Complete 
|  39|0x0000000085900000, 0x0000000085a00000, 0x0000000085a00000|100%| S|CS|TAMS 0x0000000085900000| PB 0x0000000085900000| Complete 
|  40|0x0000000085a00000, 0x0000000085a00000, 0x0000000085b00000|  0%| F|  |TAMS 0x0000000085a00000| PB 0x0000000085a00000| Untracked 
|  41|0x0000000085b00000, 0x0000000085b00000, 0x0000000085c00000|  0%| F|  |TAMS 0x0000000085b00000| PB 0x0000000085b00000| Untracked 
|  42|0x0000000085c00000, 0x0000000085c00000, 0x0000000085d00000|  0%| F|  |TAMS 0x0000000085c00000| PB 0x0000000085c00000| Untracked 
|  43|0x0000000085d00000, 0x0000000085d00000, 0x0000000085e00000|  0%| F|  |TAMS 0x0000000085d00000| PB 0x0000000085d00000| Untracked 
|  73|0x0000000087b00000, 0x0000000087b00000, 0x0000000087c00000|  0%| F|  |TAMS 0x0000000087b00000| PB 0x0000000087b00000| Untracked 
|  74|0x0000000087c00000, 0x0000000087c00000, 0x0000000087d00000|  0%| F|  |TAMS 0x0000000087c00000| PB 0x0000000087c00000| Untracked 
|  75|0x0000000087d00000, 0x0000000087d00000, 0x0000000087e00000|  0%| F|  |TAMS 0x0000000087d00000| PB 0x0000000087d00000| Untracked 
|  76|0x0000000087e00000, 0x0000000087e00000, 0x0000000087f00000|  0%| F|  |TAMS 0x0000000087e00000| PB 0x0000000087e00000| Untracked 
|  77|0x0000000087f00000, 0x0000000087f00000, 0x0000000088000000|  0%| F|  |TAMS 0x0000000087f00000| PB 0x0000000087f00000| Untracked 
|  78|0x0000000088000000, 0x0000000088036190, 0x0000000088100000| 21%| E|  |TAMS 0x0000000088000000| PB 0x0000000088000000| Complete 
|  79|0x0000000088100000, 0x0000000088200000, 0x0000000088200000|100%| E|CS|TAMS 0x0000000088100000| PB 0x0000000088100000| Complete 
|  80|0x0000000088200000, 0x0000000088300000, 0x0000000088300000|100%| E|CS|TAMS 0x0000000088200000| PB 0x0000000088200000| Complete 
|  81|0x0000000088300000, 0x0000000088400000, 0x0000000088400000|100%| E|CS|TAMS 0x0000000088300000| PB 0x0000000088300000| Complete 
|  82|0x0000000088400000, 0x0000000088500000, 0x0000000088500000|100%| E|CS|TAMS 0x0000000088400000| PB 0x0000000088400000| Complete 
| 125|0x000000008af00000, 0x000000008b000000, 0x000000008b000000|100%| E|CS|TAMS 0x000000008af00000| PB 0x000000008af00000| Complete 
|1985|0x00000000ff300000, 0x00000000ff400000, 0x00000000ff400000|100%| E|CS|TAMS 0x00000000ff300000| PB 0x00000000ff300000| Complete 
|1986|0x00000000ff400000, 0x00000000ff500000, 0x00000000ff500000|100%| O|  |TAMS 0x00000000ff400000| PB 0x00000000ff400000| Untracked 
|1987|0x00000000ff500000, 0x00000000ff600000, 0x00000000ff600000|100%| O|  |TAMS 0x00000000ff500000| PB 0x00000000ff500000| Untracked 
|1988|0x00000000ff600000, 0x00000000ff700000, 0x00000000ff700000|100%| O|  |TAMS 0x00000000ff600000| PB 0x00000000ff600000| Untracked 
|1989|0x00000000ff700000, 0x00000000ff800000, 0x00000000ff800000|100%| O|  |TAMS 0x00000000ff700000| PB 0x00000000ff700000| Untracked 
|1990|0x00000000ff800000, 0x00000000ff900000, 0x00000000ff900000|100%| O|  |TAMS 0x00000000ff800000| PB 0x00000000ff800000| Untracked 
|1991|0x00000000ff900000, 0x00000000ffa00000, 0x00000000ffa00000|100%| O|  |TAMS 0x00000000ff900000| PB 0x00000000ff900000| Untracked 
|1992|0x00000000ffa00000, 0x00000000ffb00000, 0x00000000ffb00000|100%| O|  |TAMS 0x00000000ffa00000| PB 0x00000000ffa00000| Untracked 
|1993|0x00000000ffb00000, 0x00000000ffc00000, 0x00000000ffc00000|100%| O|  |TAMS 0x00000000ffb00000| PB 0x00000000ffb00000| Untracked 
|1994|0x00000000ffc00000, 0x00000000ffd00000, 0x00000000ffd00000|100%| O|  |TAMS 0x00000000ffc00000| PB 0x00000000ffc00000| Untracked 
|1995|0x00000000ffd00000, 0x00000000ffe00000, 0x00000000ffe00000|100%| O|  |TAMS 0x00000000ffd00000| PB 0x00000000ffd00000| Untracked 
|1996|0x00000000ffe00000, 0x00000000fff00000, 0x00000000fff00000|100%| O|  |TAMS 0x00000000ffe00000| PB 0x00000000ffe00000| Untracked 
|1997|0x00000000fff00000, 0x0000000100000000, 0x0000000100000000|100%| O|  |TAMS 0x00000000fff00000| PB 0x00000000fff00000| Untracked 

Card table byte_map: [0x000002016a670000,0x000002016aa60000] _byte_map_base: 0x000002016a257000

Marking Bits: (CMBitMap*) 0x0000020152e8d980
 Bits: [0x000002016aa60000, 0x000002016c998000)

Polling page: 0x0000020152600000

Metaspace:

Usage:
  Non-class:     27.58 MB used.
      Class:      4.28 MB used.
       Both:     31.85 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,      27.81 MB ( 43%) committed,  1 nodes.
      Class space:        1.00 GB reserved,       4.44 MB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,      32.25 MB (  3%) committed. 

Chunk freelists:
   Non-Class:  4.19 MB
       Class:  11.44 MB
        Both:  15.62 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 51.81 MB
CDS: on
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - use_allocation_guard: 0.


Internal statistics:

num_allocs_failed_limit: 3.
num_arena_births: 490.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 515.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 3.
num_chunks_taken_from_freelist: 1469.
num_chunk_merges: 3.
num_chunk_splits: 1013.
num_chunks_enlarged: 747.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=120000Kb used=4400Kb max_used=4400Kb free=115599Kb
 bounds [0x0000020162d50000, 0x00000201631a0000, 0x000002016a280000]
CodeHeap 'profiled nmethods': size=120000Kb used=16776Kb max_used=16776Kb free=103223Kb
 bounds [0x000002015b280000, 0x000002015c2f0000, 0x00000201627b0000]
CodeHeap 'non-nmethods': size=5760Kb used=2326Kb max_used=2388Kb free=3433Kb
 bounds [0x00000201627b0000, 0x0000020162a20000, 0x0000020162d50000]
 total_blobs=8266 nmethods=7314 adapters=855
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 354.075 Thread 0x000002017483d880 7657       4       javafx.event.Event::<init> (36 bytes)
Event: 354.077 Thread 0x000002017483d880 nmethod 7657 0x000002016318f310 code [0x000002016318f4a0, 0x000002016318f808]
Event: 354.077 Thread 0x000002017483d880 7659       4       java.util.AbstractList::listIterator (6 bytes)
Event: 354.077 Thread 0x000002017483d880 nmethod 7659 0x000002016318f890 code [0x000002016318fa20, 0x000002016318fad0]
Event: 354.079 Thread 0x000002016ee88ad0 7672       3       javafx.scene.layout.Background::<init> (498 bytes)
Event: 354.079 Thread 0x000002017483d880 7674   !   4       javafx.scene.CssStyleHelper::calculateValue (787 bytes)
Event: 354.080 Thread 0x000002016ee88ad0 nmethod 7672 0x000002015c2e1290 code [0x000002015c2e16a0, 0x000002015c2e3108]
Event: 354.080 Thread 0x000002016ee88ad0 7673       1       java.util.logging.LogManager$LoggerContext::getOwner (5 bytes)
Event: 354.080 Thread 0x000002016ee88ad0 nmethod 7673 0x000002016318fb90 code [0x000002016318fd20, 0x000002016318fde8]
Event: 354.080 Thread 0x000002016ee88ad0 7675       3       javafx.scene.effect.Effect::setEffectDirty (9 bytes)
Event: 354.080 Thread 0x000002016ee88ad0 nmethod 7675 0x000002015c2e3d10 code [0x000002015c2e3ec0, 0x000002015c2e40c0]
Event: 354.081 Thread 0x000002016ee88ad0 7676       1       javafx.scene.paint.LinearGradient::isOpaque (5 bytes)
Event: 354.081 Thread 0x000002016ee88ad0 nmethod 7676 0x000002016318fe90 code [0x0000020163190020, 0x00000201631900f0]
Event: 354.084 Thread 0x000002016ee77d60 nmethod 7651 0x0000020163190190 code [0x0000020163190520, 0x0000020163191fd8]
Event: 354.084 Thread 0x000002016ee77d60 7677       4       javafx.scene.layout.Region::snappedBottomInset (21 bytes)
Event: 354.088 Thread 0x000002016ee77d60 nmethod 7677 0x0000020163193710 code [0x00000201631938e0, 0x0000020163193c38]
Event: 354.088 Thread 0x000002016ee77d60 7678       4       sun.invoke.util.VerifyAccess::isSamePackage (37 bytes)
Event: 354.114 Thread 0x000002016ee77d60 nmethod 7678 0x0000020163193f10 code [0x0000020163194180, 0x00000201631959e8]
Event: 354.114 Thread 0x000002016ee77d60 7679       4       java.lang.Integer::equals (29 bytes)
Event: 354.115 Thread 0x000002016ee77d60 nmethod 7679 0x0000020163196610 code [0x00000201631967a0, 0x0000020163196878]

GC Heap History (16 events):
Event: 0.314 GC heap before
{Heap before GC invocations=0 (full 0):
 garbage-first heap   total 129024K, used 12288K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 13 young (13312K), 0 survivors (0K)
 Metaspace       used 776K, committed 960K, reserved 1114112K
  class space    used 58K, committed 128K, reserved 1048576K
}
Event: 0.315 GC heap after
{Heap after GC invocations=1 (full 0):
 garbage-first heap   total 129024K, used 1024K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 1 young (1024K), 1 survivors (1024K)
 Metaspace       used 776K, committed 960K, reserved 1114112K
  class space    used 58K, committed 128K, reserved 1048576K
}
Event: 0.937 GC heap before
{Heap before GC invocations=1 (full 0):
 garbage-first heap   total 129024K, used 25600K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 26 young (26624K), 1 survivors (1024K)
 Metaspace       used 7528K, committed 7744K, reserved 1114112K
  class space    used 976K, committed 1088K, reserved 1048576K
}
Event: 0.940 GC heap after
{Heap after GC invocations=2 (full 0):
 garbage-first heap   total 129024K, used 4274K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 4 young (4096K), 4 survivors (4096K)
 Metaspace       used 7528K, committed 7744K, reserved 1114112K
  class space    used 976K, committed 1088K, reserved 1048576K
}
Event: 2.095 GC heap before
{Heap before GC invocations=2 (full 0):
 garbage-first heap   total 129024K, used 45234K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 43 young (44032K), 4 survivors (4096K)
 Metaspace       used 21180K, committed 21504K, reserved 1114112K
  class space    used 2919K, committed 3072K, reserved 1048576K
}
Event: 2.104 GC heap after
{Heap after GC invocations=3 (full 0):
 garbage-first heap   total 129024K, used 12748K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 10 young (10240K), 10 survivors (10240K)
 Metaspace       used 21180K, committed 21504K, reserved 1114112K
  class space    used 2919K, committed 3072K, reserved 1048576K
}
Event: 10.668 GC heap before
{Heap before GC invocations=4 (full 0):
 garbage-first heap   total 51200K, used 49612K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 39 young (39936K), 10 survivors (10240K)
 Metaspace       used 26578K, committed 27008K, reserved 1114112K
  class space    used 3602K, committed 3776K, reserved 1048576K
}
Event: 10.679 GC heap after
{Heap after GC invocations=5 (full 0):
 garbage-first heap   total 64512K, used 22904K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 4 young (4096K), 4 survivors (4096K)
 Metaspace       used 26578K, committed 27008K, reserved 1114112K
  class space    used 3602K, committed 3776K, reserved 1048576K
}
Event: 11.885 GC heap before
{Heap before GC invocations=5 (full 0):
 garbage-first heap   total 64512K, used 57720K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 32 young (32768K), 4 survivors (4096K)
 Metaspace       used 29714K, committed 30080K, reserved 1114112K
  class space    used 4107K, committed 4288K, reserved 1048576K
}
Event: 11.895 GC heap after
{Heap after GC invocations=6 (full 0):
 garbage-first heap   total 69632K, used 35591K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 4 young (4096K), 4 survivors (4096K)
 Metaspace       used 29714K, committed 30080K, reserved 1114112K
  class space    used 4107K, committed 4288K, reserved 1048576K
}
Event: 17.487 GC heap before
{Heap before GC invocations=6 (full 0):
 garbage-first heap   total 69632K, used 58119K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 26 young (26624K), 4 survivors (4096K)
 Metaspace       used 31347K, committed 31808K, reserved 1114112K
  class space    used 4217K, committed 4480K, reserved 1048576K
}
Event: 17.494 GC heap after
{Heap after GC invocations=7 (full 0):
 garbage-first heap   total 69632K, used 39936K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 4 young (4096K), 4 survivors (4096K)
 Metaspace       used 31347K, committed 31808K, reserved 1114112K
  class space    used 4217K, committed 4480K, reserved 1048576K
}
Event: 18.068 GC heap before
{Heap before GC invocations=8 (full 0):
 garbage-first heap   total 69632K, used 57344K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 23 young (23552K), 4 survivors (4096K)
 Metaspace       used 32161K, committed 32576K, reserved 1114112K
  class space    used 4351K, committed 4544K, reserved 1048576K
}
Event: 18.077 GC heap after
{Heap after GC invocations=9 (full 0):
 garbage-first heap   total 69632K, used 43637K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 3 young (3072K), 3 survivors (3072K)
 Metaspace       used 32161K, committed 32576K, reserved 1114112K
  class space    used 4351K, committed 4544K, reserved 1048576K
}
Event: 21.257 GC heap before
{Heap before GC invocations=9 (full 0):
 garbage-first heap   total 69632K, used 58997K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 18 young (18432K), 3 survivors (3072K)
 Metaspace       used 32376K, committed 32768K, reserved 1114112K
  class space    used 4351K, committed 4544K, reserved 1048576K
}
Event: 21.267 GC heap after
{Heap after GC invocations=10 (full 0):
 garbage-first heap   total 69632K, used 48128K [0x0000000083200000, 0x0000000100000000)
  region size 1024K, 3 young (3072K), 3 survivors (3072K)
 Metaspace       used 32376K, committed 32768K, reserved 1114112K
  class space    used 4351K, committed 4544K, reserved 1048576K
}

Dll operation events (20 events):
Event: 0.596 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-private-l1-1-0.dll
Event: 0.597 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-process-l1-1-0.dll
Event: 0.598 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-runtime-l1-1-0.dll
Event: 0.600 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-stdio-l1-1-0.dll
Event: 0.601 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-string-l1-1-0.dll
Event: 0.602 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-time-l1-1-0.dll
Event: 0.603 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-utility-l1-1-0.dll
Event: 0.604 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\ucrtbase.dll
Event: 0.606 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\vcruntime140.dll
Event: 0.607 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\vcruntime140_1.dll
Event: 0.608 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\msvcp140.dll
Event: 0.609 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\msvcp140_1.dll
Event: 0.610 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\msvcp140_2.dll
Event: 0.648 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\prism_d3d.dll
Event: 0.675 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\glass.dll
Event: 0.774 Loaded shared library C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\jimage.dll
Event: 0.952 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\javafx_font.dll
Event: 1.816 Loaded shared library C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\sunmscapi.dll
Event: 10.493 Loaded shared library C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\j2pcsc.dll
Event: 10.898 Loaded shared library C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\javafx_iio.dll

Deoptimization events (20 events):
Event: 354.023 Thread 0x000002017333c490 DEOPT PACKING pc=0x000002015c2669f4 sp=0x00000033cd8fdec0
Event: 354.023 Thread 0x000002017333c490 DEOPT UNPACKING pc=0x00000201628088e2 sp=0x00000033cd8fd378 mode 0
Event: 354.023 Thread 0x000002017333c490 DEOPT PACKING pc=0x000002015bedce2c sp=0x00000033cd8fe030
Event: 354.023 Thread 0x000002017333c490 DEOPT UNPACKING pc=0x00000201628088e2 sp=0x00000033cd8fd570 mode 0
Event: 354.023 Thread 0x000002017333c490 DEOPT PACKING pc=0x000002015c199064 sp=0x00000033cd8fe1e0
Event: 354.023 Thread 0x000002017333c490 DEOPT UNPACKING pc=0x00000201628088e2 sp=0x00000033cd8fd568 mode 0
Event: 354.023 Thread 0x000002017333c490 DEOPT PACKING pc=0x000002015be6a704 sp=0x00000033cd8fe2b0
Event: 354.023 Thread 0x000002017333c490 DEOPT UNPACKING pc=0x00000201628088e2 sp=0x00000033cd8fd798 mode 0
Event: 354.023 Thread 0x000002017333c490 DEOPT PACKING pc=0x000002015c1981a4 sp=0x00000033cd8fe350
Event: 354.023 Thread 0x000002017333c490 DEOPT UNPACKING pc=0x00000201628088e2 sp=0x00000033cd8fd810 mode 0
Event: 354.023 Thread 0x000002017333c490 DEOPT PACKING pc=0x000002015c197914 sp=0x00000033cd8fe410
Event: 354.023 Thread 0x000002017333c490 DEOPT UNPACKING pc=0x00000201628088e2 sp=0x00000033cd8fd8c8 mode 0
Event: 354.023 Thread 0x000002017333c490 DEOPT PACKING pc=0x000002015beda854 sp=0x00000033cd8fe4c0
Event: 354.023 Thread 0x000002017333c490 DEOPT UNPACKING pc=0x00000201628088e2 sp=0x00000033cd8fd9e0 mode 0
Event: 354.066 Thread 0x000002017333c490 Uncommon trap: trap_request=0xffffff45 fr.pc=0x0000020163082bd8 relative=0x0000000000000458
Event: 354.066 Thread 0x000002017333c490 Uncommon trap: reason=unstable_if action=reinterpret pc=0x0000020163082bd8 method=javafx.scene.Node.reapplyCSS()V @ 77 c2
Event: 354.066 Thread 0x000002017333c490 DEOPT PACKING pc=0x0000020163082bd8 sp=0x00000033cd8fd0a0
Event: 354.066 Thread 0x000002017333c490 DEOPT UNPACKING pc=0x0000020162807da2 sp=0x00000033cd8fd058 mode 2
Event: 354.090 Thread 0x0000020175ea0cd0 DEOPT PACKING pc=0x000002015b4f2d5c sp=0x00000033cd4ff280
Event: 354.090 Thread 0x0000020175ea0cd0 DEOPT UNPACKING pc=0x00000201628088e2 sp=0x00000033cd4fe6e0 mode 1

Classes loaded (20 events):
Event: 22.358 Loading class java/util/stream/ReferencePipeline$4$1
Event: 22.359 Loading class java/util/stream/ReferencePipeline$4$1 done
Event: 22.360 Loading class java/util/stream/IntPipeline$11
Event: 22.360 Loading class java/util/stream/IntPipeline$11 done
Event: 22.360 Loading class java/util/stream/ReduceOps$9
Event: 22.360 Loading class java/util/stream/ReduceOps$9 done
Event: 22.361 Loading class java/util/stream/ReduceOps$CountingSink$OfInt
Event: 22.361 Loading class java/util/stream/ReduceOps$CountingSink
Event: 22.361 Loading class java/util/stream/ReduceOps$CountingSink done
Event: 22.361 Loading class java/util/stream/ReduceOps$CountingSink$OfInt done
Event: 22.361 Loading class java/util/stream/IntPipeline$11$1
Event: 22.361 Loading class java/util/stream/IntPipeline$11$1 done
Event: 201.273 Loading class java/io/DataOutputStream
Event: 201.274 Loading class java/io/DataOutputStream done
Event: 354.015 Loading class java/lang/Throwable$WrappedPrintStream
Event: 354.016 Loading class java/lang/Throwable$PrintStreamOrWriter
Event: 354.016 Loading class java/lang/Throwable$PrintStreamOrWriter done
Event: 354.016 Loading class java/lang/Throwable$WrappedPrintStream done
Event: 354.078 Loading class jdk/internal/misc/Signal$1
Event: 354.078 Loading class jdk/internal/misc/Signal$1 done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (20 events):
Event: 16.828 Thread 0x000002017333c490 Exception <a 'java/io/IOException'{0x0000000085a97d08}> (0x0000000085a97d08) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 16.834 Thread 0x000002017333c490 Exception <a 'java/lang/NoSuchMethodError'{0x0000000085aeaee8}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, double)'> (0x0000000085aeaee8) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 16.846 Thread 0x000002017333c490 Implicit null exception at 0x0000020162e548c4 to 0x0000020162e5514c
Event: 16.856 Thread 0x000002017333c490 Implicit null exception at 0x0000020162e2be24 to 0x0000020162e2c60c
Event: 17.236 Thread 0x000002017333c490 Exception <a 'java/lang/NoSuchMethodError'{0x000000008575e200}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, java.lang.Object, java.lang.Object)'> (0x000000008575e200) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 17.321 Thread 0x000002017333c490 Exception <a 'java/io/IOException'{0x00000000856610f0}> (0x00000000856610f0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.351 Thread 0x000002017333c490 Exception <a 'java/io/IOException'{0x000000008557f7f0}> (0x000000008557f7f0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.410 Thread 0x000002017333c490 Exception <a 'java/io/IOException'{0x00000000853d5a30}> (0x00000000853d5a30) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.624 Thread 0x000002017333c490 Exception <a 'java/net/SocketException'{0x00000000884a8380}: Connection reset by peer: shutdown> (0x00000000884a8380) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 539]
Event: 17.646 Thread 0x000002017333c490 Exception <a 'java/io/FileNotFoundException'{0x0000000088315770}> (0x0000000088315770) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.647 Thread 0x000002017333c490 Exception <a 'java/io/FileNotFoundException'{0x000000008832b0a8}> (0x000000008832b0a8) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.649 Thread 0x000002017333c490 Exception <a 'java/io/FileNotFoundException'{0x000000008834b750}> (0x000000008834b750) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.649 Thread 0x000002017333c490 Exception <a 'java/io/FileNotFoundException'{0x0000000088354ae0}> (0x0000000088354ae0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.650 Thread 0x000002017333c490 Exception <a 'java/io/FileNotFoundException'{0x0000000088364928}> (0x0000000088364928) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.651 Thread 0x000002017333c490 Exception <a 'java/io/FileNotFoundException'{0x0000000088371030}> (0x0000000088371030) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.651 Thread 0x000002017333c490 Exception <a 'java/io/FileNotFoundException'{0x000000008837a368}> (0x000000008837a368) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.652 Thread 0x000002017333c490 Exception <a 'java/io/FileNotFoundException'{0x0000000088389f20}> (0x0000000088389f20) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.653 Thread 0x000002017333c490 Exception <a 'java/io/FileNotFoundException'{0x0000000088393258}> (0x0000000088393258) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 17.654 Thread 0x000002017333c490 Exception <a 'java/io/FileNotFoundException'{0x00000000883a2df0}> (0x00000000883a2df0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 188.915 Thread 0x000002017333c490 Exception <a 'java/io/IOException'{0x00000000883341c8}> (0x00000000883341c8) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]

ZGC Phase Switch (0 events):
No events

VM Operations (20 events):
Event: 290.192 Executing VM operation: get/set locals
Event: 290.193 Executing VM operation: get/set locals done
Event: 290.611 Executing VM operation: ChangeSingleStep
Event: 290.611 Executing VM operation: ChangeSingleStep done
Event: 290.613 Executing VM operation: ChangeSingleStep
Event: 290.613 Executing VM operation: ChangeSingleStep done
Event: 290.619 Executing VM operation: get/set locals
Event: 290.619 Executing VM operation: get/set locals done
Event: 290.619 Executing VM operation: get/set locals
Event: 290.619 Executing VM operation: get/set locals done
Event: 290.619 Executing VM operation: get/set locals
Event: 290.619 Executing VM operation: get/set locals done
Event: 290.620 Executing VM operation: get/set locals
Event: 290.620 Executing VM operation: get/set locals done
Event: 290.621 Executing VM operation: get/set locals
Event: 290.621 Executing VM operation: get/set locals done
Event: 354.014 Executing VM operation: ChangeBreakpoints
Event: 354.015 Executing VM operation: ChangeBreakpoints done
Event: 354.021 Executing VM operation: HandshakeAllThreads (Deoptimize)
Event: 354.021 Executing VM operation: HandshakeAllThreads (Deoptimize) done

Events (20 events):
Event: 17.524 Thread 0x000002016ee49090 flushing nmethod 0x0000020162d5c410
Event: 17.524 Thread 0x000002016ee49090 flushing nmethod 0x0000020162d5b910
Event: 17.524 Thread 0x000002016ee49090 flushing nmethod 0x0000020162d62210
Event: 17.524 Thread 0x000002016ee49090 flushing nmethod 0x0000020162d60f90
Event: 17.524 Thread 0x000002016ee49090 flushing nmethod 0x0000020162d5fa10
Event: 17.524 Thread 0x000002016ee49090 flushing nmethod 0x0000020162d5e010
Event: 17.524 Thread 0x000002016ee49090 flushing nmethod 0x0000020162d56890
Event: 17.631 Thread 0x000002017c39c290 Thread added: 0x000002017c39c290
Event: 18.428 Thread 0x000002017c39c290 Thread exited: 0x000002017c39c290
Event: 19.684 Thread 0x000002017c446450 Thread added: 0x000002017c446450
Event: 20.170 Thread 0x000002017c446450 Thread exited: 0x000002017c446450
Event: 354.013 Thread 0x0000020173d2c680 Thread exited: 0x0000020173d2c680
Event: 354.021 Thread 0x0000020173dd0240 Thread exited: 0x0000020173dd0240
Event: 354.052 Thread 0x000002017483d880 Thread added: 0x000002017483d880
Event: 354.079 Thread 0x0000020175ea2710 Thread added: 0x0000020175ea2710
Event: 354.080 Thread 0x0000020175ea0cd0 Thread added: 0x0000020175ea0cd0
Event: 354.080 Thread 0x0000020175ea1360 Thread added: 0x0000020175ea1360
Event: 354.080 Thread 0x0000020175e9ffb0 Thread added: 0x0000020175e9ffb0
Event: 354.086 Thread 0x0000020175e9ffb0 Thread exited: 0x0000020175e9ffb0
Event: 354.090 Thread 0x0000020175ea0cd0 Thread exited: 0x0000020175ea0cd0


Dynamic libraries:
0x00007ff7b6be0000 - 0x00007ff7b6bee000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\java.exe
0x00007ffc05b90000 - 0x00007ffc05da7000 	C:\WINDOWS\SYSTEM32\ntdll.dll
0x00007ffc04e70000 - 0x00007ffc04f34000 	C:\WINDOWS\System32\KERNEL32.DLL
0x00007ffc03500000 - 0x00007ffc038a6000 	C:\WINDOWS\System32\KERNELBASE.dll
0x00007ffc033b0000 - 0x00007ffc034c1000 	C:\WINDOWS\System32\ucrtbase.dll
0x00007ffbfb130000 - 0x00007ffbfb148000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\jli.dll
0x00007ffc04650000 - 0x00007ffc047fe000 	C:\WINDOWS\System32\USER32.dll
0x00007ffc034d0000 - 0x00007ffc034f6000 	C:\WINDOWS\System32\win32u.dll
0x00007ffc055a0000 - 0x00007ffc055c9000 	C:\WINDOWS\System32\GDI32.dll
0x00007ffc031d0000 - 0x00007ffc032e8000 	C:\WINDOWS\System32\gdi32full.dll
0x00007ffc030b0000 - 0x00007ffc0314a000 	C:\WINDOWS\System32\msvcp_win.dll
0x00007ffbfaec0000 - 0x00007ffbfaedb000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\VCRUNTIME140.dll
0x00007ffbef4a0000 - 0x00007ffbef733000 	C:\WINDOWS\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.2506_none_270c5ae97388e100\COMCTL32.dll
0x00007ffc054f0000 - 0x00007ffc05597000 	C:\WINDOWS\System32\msvcrt.dll
0x00007ffc04610000 - 0x00007ffc04641000 	C:\WINDOWS\System32\IMM32.DLL
0x00007ffbfad20000 - 0x00007ffbfad2c000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\vcruntime140_1.dll
0x00007ffbed650000 - 0x00007ffbed6de000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\msvcp140.dll
0x00007ffbb7fe0000 - 0x00007ffbb8cf5000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\server\jvm.dll
0x00007ffc04460000 - 0x00007ffc04513000 	C:\WINDOWS\System32\ADVAPI32.dll
0x00007ffc05440000 - 0x00007ffc054e8000 	C:\WINDOWS\System32\sechost.dll
0x00007ffc038b0000 - 0x00007ffc038d8000 	C:\WINDOWS\System32\bcrypt.dll
0x00007ffc05660000 - 0x00007ffc05777000 	C:\WINDOWS\System32\RPCRT4.dll
0x00007ffc055d0000 - 0x00007ffc05641000 	C:\WINDOWS\System32\WS2_32.dll
0x00007ffc01d50000 - 0x00007ffc01d9d000 	C:\WINDOWS\SYSTEM32\POWRPROF.dll
0x00007ffbfa4c0000 - 0x00007ffbfa4f4000 	C:\WINDOWS\SYSTEM32\WINMM.dll
0x00007ffbf4b20000 - 0x00007ffbf4b2a000 	C:\WINDOWS\SYSTEM32\VERSION.dll
0x00007ffc01d30000 - 0x00007ffc01d43000 	C:\WINDOWS\SYSTEM32\UMPDC.dll
0x00007ffc01ff0000 - 0x00007ffc02008000 	C:\WINDOWS\SYSTEM32\kernel.appcore.dll
0x00007ffbfaeb0000 - 0x00007ffbfaeba000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\jimage.dll
0x00007ffc00830000 - 0x00007ffc00a63000 	C:\WINDOWS\SYSTEM32\DBGHELP.DLL
0x00007ffc04800000 - 0x00007ffc04b89000 	C:\WINDOWS\System32\combase.dll
0x00007ffc04530000 - 0x00007ffc04607000 	C:\WINDOWS\System32\OLEAUT32.dll
0x00007ffbdcf20000 - 0x00007ffbdcf52000 	C:\WINDOWS\SYSTEM32\dbgcore.DLL
0x00007ffc03150000 - 0x00007ffc031ca000 	C:\WINDOWS\System32\bcryptPrimitives.dll
0x00007ffbf3350000 - 0x00007ffbf338c000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\jdwp.dll
0x00007ffbfae90000 - 0x00007ffbfaeaf000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\java.dll
0x00007ffc03bf0000 - 0x00007ffc0444a000 	C:\WINDOWS\System32\SHELL32.dll
0x00007ffc00e20000 - 0x00007ffc01716000 	C:\WINDOWS\SYSTEM32\windows.storage.dll
0x00007ffc00ce0000 - 0x00007ffc00e1e000 	C:\WINDOWS\SYSTEM32\wintypes.dll
0x00007ffc03a40000 - 0x00007ffc03b33000 	C:\WINDOWS\System32\SHCORE.dll
0x00007ffc059a0000 - 0x00007ffc059fe000 	C:\WINDOWS\System32\shlwapi.dll
0x00007ffc02e00000 - 0x00007ffc02e26000 	C:\WINDOWS\SYSTEM32\profapi.dll
0x00007ffbfadb0000 - 0x00007ffbfae87000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\jsvml.dll
0x00007ffbfad10000 - 0x00007ffbfad20000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\net.dll
0x00007ffbfc2a0000 - 0x00007ffbfc3d7000 	C:\WINDOWS\SYSTEM32\WINHTTP.dll
0x00007ffc02470000 - 0x00007ffc024d9000 	C:\WINDOWS\system32\mswsock.dll
0x00007ffbfacf0000 - 0x00007ffbfad06000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\nio.dll
0x00007ffbfad90000 - 0x00007ffbfada8000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\zip.dll
0x00007ffbfac60000 - 0x00007ffbfac6c000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\dt_socket.dll
0x00007ffc01a40000 - 0x00007ffc01a6d000 	C:\WINDOWS\SYSTEM32\IPHLPAPI.DLL
0x0000020152dc0000 - 0x0000020152dc3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-console-l1-1-0.dll
0x0000020152dd0000 - 0x0000020152dd3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-console-l1-2-0.dll
0x0000020152de0000 - 0x0000020152de3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-datetime-l1-1-0.dll
0x0000020152df0000 - 0x0000020152df3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-debug-l1-1-0.dll
0x000002016efe0000 - 0x000002016efe3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-errorhandling-l1-1-0.dll
0x000002016eff0000 - 0x000002016eff4000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-file-l1-1-0.dll
0x0000020174bd0000 - 0x0000020174bd3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-file-l1-2-0.dll
0x0000020174be0000 - 0x0000020174be3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-file-l2-1-0.dll
0x0000020174bf0000 - 0x0000020174bf3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-handle-l1-1-0.dll
0x0000020174c00000 - 0x0000020174c03000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-heap-l1-1-0.dll
0x0000020174c10000 - 0x0000020174c13000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-interlocked-l1-1-0.dll
0x0000020174c20000 - 0x0000020174c23000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-libraryloader-l1-1-0.dll
0x0000020174c30000 - 0x0000020174c33000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-localization-l1-2-0.dll
0x0000020174c40000 - 0x0000020174c43000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-memory-l1-1-0.dll
0x0000020174c50000 - 0x0000020174c53000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-namedpipe-l1-1-0.dll
0x0000020174c60000 - 0x0000020174c63000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-processenvironment-l1-1-0.dll
0x0000020174c70000 - 0x0000020174c73000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-processthreads-l1-1-0.dll
0x0000020174c80000 - 0x0000020174c83000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-processthreads-l1-1-1.dll
0x0000020174c90000 - 0x0000020174c93000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-profile-l1-1-0.dll
0x0000020174ca0000 - 0x0000020174ca3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-rtlsupport-l1-1-0.dll
0x0000020174cb0000 - 0x0000020174cb3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-string-l1-1-0.dll
0x0000020174cc0000 - 0x0000020174cc3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-synch-l1-1-0.dll
0x0000020174cd0000 - 0x0000020174cd3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-synch-l1-2-0.dll
0x0000020174ce0000 - 0x0000020174ce3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-sysinfo-l1-1-0.dll
0x0000020174cf0000 - 0x0000020174cf3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-timezone-l1-1-0.dll
0x0000020174d00000 - 0x0000020174d03000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-core-util-l1-1-0.dll
0x0000020174d10000 - 0x0000020174d13000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-conio-l1-1-0.dll
0x0000020174d20000 - 0x0000020174d24000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-convert-l1-1-0.dll
0x0000020174d30000 - 0x0000020174d33000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-environment-l1-1-0.dll
0x0000020174d40000 - 0x0000020174d43000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-filesystem-l1-1-0.dll
0x0000020174d50000 - 0x0000020174d53000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-heap-l1-1-0.dll
0x0000020174d60000 - 0x0000020174d63000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-locale-l1-1-0.dll
0x0000020174d70000 - 0x0000020174d75000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-math-l1-1-0.dll
0x0000020174d80000 - 0x0000020174d85000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-multibyte-l1-1-0.dll
0x0000020174d90000 - 0x0000020174da0000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-private-l1-1-0.dll
0x0000020174da0000 - 0x0000020174da3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-process-l1-1-0.dll
0x0000020174db0000 - 0x0000020174db4000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-runtime-l1-1-0.dll
0x0000020174dc0000 - 0x0000020174dc4000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-stdio-l1-1-0.dll
0x0000020174dd0000 - 0x0000020174dd4000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-string-l1-1-0.dll
0x0000020174de0000 - 0x0000020174de3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-time-l1-1-0.dll
0x0000020174df0000 - 0x0000020174df3000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\api-ms-win-crt-utility-l1-1-0.dll
0x00007ffbd40c0000 - 0x00007ffbd41bc000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\ucrtbase.dll
0x00007ffbf4b80000 - 0x00007ffbf4b9b000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\vcruntime140.dll
0x00007ffbf4b70000 - 0x00007ffbf4b7c000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\vcruntime140_1.dll
0x00007ffbd4880000 - 0x00007ffbd490e000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\msvcp140.dll
0x00007ffbf33f0000 - 0x00007ffbf33f9000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\msvcp140_1.dll
0x00007ffbef0b0000 - 0x00007ffbef0e0000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\msvcp140_2.dll
0x00007ffbeed00000 - 0x00007ffbeed2f000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\prism_d3d.dll
0x00007ffbc7820000 - 0x00007ffbc79c9000 	C:\WINDOWS\system32\d3d9.dll
0x00007ffc00290000 - 0x00007ffc002bb000 	C:\WINDOWS\SYSTEM32\dwmapi.dll
0x00007ffc00120000 - 0x00007ffc00156000 	C:\WINDOWS\SYSTEM32\dxcore.dll
0x00007ffbfffe0000 - 0x00007ffc0008b000 	C:\WINDOWS\system32\uxtheme.dll
0x00007ffba7590000 - 0x00007ffba773b000 	C:\WINDOWS\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_9b41cef4891594fc\igdumdim64.dll
0x00007ffc05800000 - 0x00007ffc059a0000 	C:\WINDOWS\System32\ole32.dll
0x00007ffb741b0000 - 0x00007ffb77e25000 	C:\WINDOWS\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_9b41cef4891594fc\igd9dxva64.dll
0x00007ffc04fb0000 - 0x00007ffc05424000 	C:\WINDOWS\System32\SETUPAPI.dll
0x00007ffc02bc0000 - 0x00007ffc02c0e000 	C:\WINDOWS\SYSTEM32\cfgmgr32.dll
0x00007ffbf8860000 - 0x00007ffbf8c49000 	C:\WINDOWS\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_9b41cef4891594fc\igdgmm64.dll
0x00007ffbfd450000 - 0x00007ffbfd49a000 	C:\WINDOWS\SYSTEM32\directxdatabasehelper.dll
0x00007ffbeb130000 - 0x00007ffbeb172000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\glass.dll
0x00007ffc03940000 - 0x00007ffc03a39000 	C:\WINDOWS\System32\COMDLG32.dll
0x00007ffc05a00000 - 0x00007ffc05b50000 	C:\WINDOWS\System32\MSCTF.dll
0x00007ffba0c50000 - 0x00007ffba0c77000 	C:\WINDOWS\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_9b41cef4891594fc\igdinfo64.dll
0x00007ffc026c0000 - 0x00007ffc026db000 	C:\WINDOWS\SYSTEM32\CRYPTSP.dll
0x00007ffc01f50000 - 0x00007ffc01f85000 	C:\WINDOWS\system32\rsaenh.dll
0x00007ffc026e0000 - 0x00007ffc026ec000 	C:\WINDOWS\SYSTEM32\CRYPTBASE.dll
0x00007ffbf5120000 - 0x00007ffbf8857000 	C:\WINDOWS\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_9b41cef4891594fc\igc64.dll
0x00007ffbef760000 - 0x00007ffbef774000 	C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin\javafx_font.dll
0x00007ffbfe450000 - 0x00007ffbfe6c3000 	C:\WINDOWS\SYSTEM32\dwrite.dll
0x00007ffc02560000 - 0x00007ffc0258c000 	C:\WINDOWS\SYSTEM32\USERENV.dll
0x00007ffc05650000 - 0x00007ffc05659000 	C:\WINDOWS\System32\NSI.dll
0x00007ffc01a70000 - 0x00007ffc01b69000 	C:\WINDOWS\SYSTEM32\DNSAPI.dll
0x00007ffbf49e0000 - 0x00007ffbf49ea000 	C:\Windows\System32\rasadhlp.dll
0x00007ffbf4fa0000 - 0x00007ffbf5023000 	C:\WINDOWS\System32\fwpuclnt.dll
0x00007ffbf3340000 - 0x00007ffbf334e000 	C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\sunmscapi.dll
0x00007ffc02ed0000 - 0x00007ffc03036000 	C:\WINDOWS\System32\CRYPT32.dll
0x00007ffc02880000 - 0x00007ffc028ae000 	C:\WINDOWS\SYSTEM32\ncrypt.dll
0x00007ffc02840000 - 0x00007ffc02877000 	C:\WINDOWS\SYSTEM32\NTASN1.dll

dbghelp: loaded successfully - version: 4.0.5 - missing functions: none
symbol engine: initialized successfully - sym options: 0x614 - pdb path: .;C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin;C:\WINDOWS\SYSTEM32;C:\WINDOWS\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.2506_none_270c5ae97388e100;C:\Users\Fzkn4\.jdks\openjdk-21.0.1\bin\server;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\bin;C:\WINDOWS\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_9b41cef4891594fc;C:\Program Files\Common Files\Microsoft Shared\Ink

VM Arguments:
jvm_args: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:55300,suspend=y,server=n -Dfile.encoding=UTF-8 --module-path=C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\materialfx-11.16.1.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx.graphics.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-graphics\17.0.2\javafx-graphics-17.0.2-win.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\mfxlocalization-11.1.0.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx.controls.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-controls\17.0.2\javafx-controls-17.0.2-win.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\target\classes;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx.base.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-base\17.0.2\javafx-base-17.0.2-win.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx.fxml.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-fxml\17.0.2\javafx-fxml-17.0.2-win.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\mfxresources-11.3.2.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\mfxeffects-11.0.5.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\mfxcore-11.3.0.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\virtualizedfx-11.9.1.jar -Djdk.module.main=com.example.loginsystemfinal 
java_command: com.example.loginsystemfinal/com.example.loginsystemfinal.loginPage
java_class_path (initial): C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx-swt.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx.media.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx.swing.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\javafx-sdk-20.0.2\lib\javafx.web.jar;C:\Users\Fzkn4\Music\Fzkn4\RFID-LogbookSystem\lib\mysql-connector-j-8.1.0\mysql-connector-j-8.1.0.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-controls\17.0.2\javafx-controls-17.0.2.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-graphics\17.0.2\javafx-graphics-17.0.2.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-base\17.0.2\javafx-base-17.0.2.jar;C:\Users\Fzkn4\.m2\repository\org\openjfx\javafx-fxml\17.0.2\javafx-fxml-17.0.2.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.2\lib\idea_rt.jar
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 3                                         {product} {ergonomic}
     uint ConcGCThreads                            = 1                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 4                                         {product} {ergonomic}
   size_t G1HeapRegionSize                         = 1048576                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 132120576                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 2095054848                                {product} {ergonomic}
   size_t MaxNewSize                               = 1256194048                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 1048576                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 5832780                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122912730                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122912730                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 2095054848                             {manageable} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}
     bool UseLargePagesIndividualAllocation        = false                                  {pd product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
PATH=C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk-19\bin;C:\Program Files\Git\cmd;C:\Users\Fzkn4\AppData\Local\Microsoft\WindowsApps;;C:\Users\Fzkn4\AppData\Local\Programs\Microsoft VS Code\bin
USERNAME=Fzkn4
OS=Windows_NT
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 140 Stepping 1, GenuineIntel
TMP=C:\Users\Fzkn4\AppData\Local\Temp
TEMP=C:\Users\Fzkn4\AppData\Local\Temp




Periodic native trim disabled

---------------  S Y S T E M  ---------------

OS:
 Windows 11 , 64 bit Build 22621 (10.0.22621.2506)
OS uptime: 0 days 10:36 hours

CPU: total 4 (initial active 4) (2 cores per cpu, 2 threads per core) family 6 model 140 stepping 1 microcode 0x8a, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, adx, avx512f, avx512dq, avx512cd, avx512bw, avx512vl, sha, fma, vzeroupper, avx512_vpopcntdq, avx512_vpclmulqdq, avx512_vaes, avx512_vnni, clflush, clflushopt, clwb, avx512_vbmi2, avx512_vbmi, rdtscp, rdpid, fsrm, gfni, avx512_bitalg, f16c, pku, cet_ibt, cet_ss, avx512_ifma
Processor Information for all 4 processors :
  Max Mhz: 2995, Current Mhz: 2995, Mhz Limit: 2995

Memory: 4k page, system-wide physical 7991M (538M free)
TotalPageFile size 13111M (AvailPageFile size 2997M)
current process WorkingSet (physical memory assigned to process): 304M, peak: 343M
current process commit charge ("private bytes"): 324M, peak: 361M

vm_info: OpenJDK 64-Bit Server VM (21.0.1+12-29) for windows-amd64 JRE (21.0.1+12-29), built on 2023-10-05T13:27:09Z by "mach5one" with MS VC++ 17.1 (VS2022)

END.
